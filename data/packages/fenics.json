{
    "name": "fenics",
    "aliases": [],
    "versions": [
        {
            "name": "2019.1.0.post0",
            "sha256": "61abdcdb13684ba2a3ba4afb7ea6c7907aa0896a46439d3af7e8848483d4392f"
        },
        {
            "name": "2018.1.0.post1",
            "sha256": "425cc49b90e0f5c2ebdd765ba9934b1ada97e2ac2710d982d6d267a5e2c5982d"
        },
        {
            "name": "2017.2.0.post0",
            "sha256": "d3c40cd8c1c882f517999c25ea4220adcd01dbb1d829406fce99b1fc40184c82",
            "deprecated": true
        },
        {
            "name": "2016.2.0",
            "sha256": "c6760996660a476f77889e11e4a0bc117cc774be0eec777b02a7f01d9ce7f43d",
            "deprecated": true
        },
        {
            "name": "1.6.0",
            "sha256": "67f66c39983a8c5a1ba3c0787fa9b9082778bc7227b25c7cad80dc1299e0a201",
            "deprecated": true
        }
    ],
    "build_system": "CMakePackage",
    "conflicts": [
        {
            "name": "+ipo",
            "spec": "^cmake@:3.8",
            "description": "+ipo is not supported by CMake < 3.9"
        },
        {
            "name": "+petsc4py",
            "spec": "~python",
            "description": "None"
        },
        {
            "name": "+petsc4py",
            "spec": "~petsc",
            "description": "None"
        },
        {
            "name": "+slepc4py",
            "spec": "~python",
            "description": "None"
        },
        {
            "name": "+slepc4py",
            "spec": "~slepc",
            "description": "None"
        }
    ],
    "variants": [
        {
            "name": "build_type",
            "default": "RelWithDebInfo",
            "description": "The build type to build"
        },
        {
            "name": "ipo",
            "default": false,
            "description": "CMake interprocedural optimization"
        },
        {
            "name": "python",
            "default": true,
            "description": "Compile with Python interface"
        },
        {
            "name": "hdf5",
            "default": true,
            "description": "Compile with HDF5"
        },
        {
            "name": "parmetis",
            "default": true,
            "description": "Compile with ParMETIS"
        },
        {
            "name": "scotch",
            "default": true,
            "description": "Compile with Scotch"
        },
        {
            "name": "petsc",
            "default": true,
            "description": "Compile with PETSc"
        },
        {
            "name": "slepc",
            "default": true,
            "description": "Compile with SLEPc"
        },
        {
            "name": "petsc4py",
            "default": true,
            "description": "Use PETSC4py"
        },
        {
            "name": "slepc4py",
            "default": true,
            "description": "Use SLEPc4py"
        },
        {
            "name": "trilinos",
            "default": false,
            "description": "Compile with Trilinos"
        },
        {
            "name": "suite-sparse",
            "default": true,
            "description": "Compile with SuiteSparse solvers"
        },
        {
            "name": "vtk",
            "default": false,
            "description": "Compile with VTK"
        },
        {
            "name": "qt",
            "default": false,
            "description": "Compile with QT"
        },
        {
            "name": "zlib",
            "default": false,
            "description": "Compile with ZLIB"
        },
        {
            "name": "mpi",
            "default": true,
            "description": "Enables the distributed memory support"
        },
        {
            "name": "openmp",
            "default": true,
            "description": "Enables the shared memory support"
        },
        {
            "name": "shared",
            "default": true,
            "description": "Enables the build of shared libraries"
        },
        {
            "name": "doc",
            "default": false,
            "description": "Builds the documentation"
        }
    ],
    "homepage": "http://fenicsproject.org/",
    "maintainers": [],
    "patches": [
        {
            "owner": "builtin.fenics",
            "sha256": "7bf62caa9dc42c3ef996322a9cb0b4e72a14a4fbcfefd42f68523ca47b5e4ca2",
            "level": 1,
            "working_dir": ".",
            "relative_path": "petsc-version-detection.patch",
            "version": "@1.6.0"
        },
        {
            "owner": "builtin.fenics",
            "sha256": "8de9625a4ba4d27801bde734f744c96efcce57ecdec63556a5f6e2c28d4af532",
            "level": 1,
            "working_dir": ".",
            "relative_path": "hdf5~cxx-detection.patch",
            "version": "@:1.6.0"
        },
        {
            "owner": "builtin.fenics",
            "sha256": "bdfccb7573b646f7d523d02bca60cc91b08ad0a3ce3cf0a42c1a840518f819ae",
            "level": 1,
            "working_dir": ".",
            "relative_path": "header_fix.patch",
            "version": "@2019.1.0.post0"
        },
        {
            "owner": "builtin.fenics",
            "sha256": "75ba90cdff6fba79a8c0d6cc90c06054035591de3faddc882b440bbf1a15bf6b",
            "level": 1,
            "working_dir": ".",
            "relative_path": "petsc_3_11.patch",
            "version": "@2018.1.0.post1"
        }
    ],
    "resources": [],
    "description": "FEniCS is organized as a collection of interoperable components that\ntogether form the FEniCS Project. These components include the problem-\nsolving environment DOLFIN, the form compiler FFC, the finite element\ntabulator FIAT, the just-in-time compiler Instant / Dijitso, the code\ngeneration interface UFC, the form language UFL and a range of\nadditional components.\n",
    "dependencies": [
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-fenics-fiat",
            "description": "The FInite element Automatic Tabulator FIAT supports generation of\narbitrary order instances of the Lagrange elements on lines, triangles,\nand tetrahedra. It is also capable of generating arbitrary order\ninstances of Jacobi-type quadrature rules on the same element shapes.\nFurther, H(div) and H(curl) conforming finite element spaces such as the\nfamilies of Raviart-Thomas, Brezzi-Douglas-Marini and Nedelec are\nsupported on triangles and tetrahedra. Upcoming versions will also\nsupport Hermite and nonconforming elements"
        },
        {
            "name": "py-fenics-dijitso",
            "description": "A Python module for distributed just-in-time shared library building"
        },
        {
            "name": "py-fenics-ufl",
            "description": "The Unified Form Language (UFL) is a domain specific language for\ndeclaration of finite element discretizations of variational forms. More\nprecisely, it defines a flexible interface for choosing finite element\nspaces and defining expressions for weak forms in a notation close to\nmathematical notation."
        },
        {
            "name": "py-fenics-ffc",
            "description": "The FEniCS Form Compiler FFC is a compiler for finite element\nvariational forms, translating high-level mathematical descriptions of\nvariational forms into efficient low-level C++ code for finite element\nassembly."
        },
        {
            "name": "py-fenics-instant",
            "description": "Instant is a Python module that allows for instant inlining of C and C++\ncode in Python. It is a small Python module built on top of SWIG and\nDistutils. Instant has been retired after 2017.2.0 release. It is no\nlonger needed in FEniCS and hence no longer maintained and tested."
        },
        {
            "name": "eigen",
            "description": "Eigen is a C++ template library for linear algebra matrices, vectors,\nnumerical solvers, and related algorithms."
        },
        {
            "name": "pkgconfig",
            "description": "pkg-config is a helper tool used when compiling applications and\nlibraries"
        },
        {
            "name": "zlib",
            "description": "A free, general-purpose, legally unencumbered lossless data-compression\nlibrary."
        },
        {
            "name": "boost",
            "description": "Boost provides free peer-reviewed portable C++ source libraries,\nemphasizing libraries that work well with the C++ Standard Library.\nBoost libraries are intended to be widely useful, and usable across a\nbroad spectrum of applications. The Boost license encourages both\ncommercial and non-commercial use."
        },
        {
            "name": "mpi",
            "description": "MVAPICH2-GDR is an optimized version of the MVAPICH2 MPI library for\nGPU-enabled HPC and Deep Learning Applications. MVAPICH2-GDR is not\ninstallable from source and is only available through a binary mirror.\nIf you do not find the binary you're looking for, send us an email at\nmvapich@cse.ohio-state.edu. The binary mirror url is:\nhttp://mvapich.cse.ohio-state.edu/download/mvapich/spack-\nmirror/mvapich2-gdr/"
        },
        {
            "name": "hdf5",
            "description": "HDF5 is a data model, library, and file format for storing and managing\ndata. It supports an unlimited variety of datatypes, and is designed for\nflexible and efficient I/O and for high volume and complex data."
        },
        {
            "name": "metis",
            "description": "METIS is a set of serial programs for partitioning graphs, partitioning\nfinite element meshes, and producing fill reducing orderings for sparse\nmatrices. The algorithms implemented in METIS are based on the\nmultilevel recursive-bisection, multilevel k-way, and multi-constraint\npartitioning schemes."
        },
        {
            "name": "parmetis",
            "description": "ParMETIS is an MPI-based parallel library that implements a variety of\nalgorithms for partitioning unstructured graphs, meshes, and for\ncomputing fill-reducing orderings of sparse matrices."
        },
        {
            "name": "scotch",
            "description": "Scotch is a software package for graph and mesh/hypergraph partitioning,\ngraph clustering, and sparse matrix ordering."
        },
        {
            "name": "petsc",
            "description": "PETSc is a suite of data structures and routines for the scalable\n(parallel) solution of scientific applications modeled by partial\ndifferential equations."
        },
        {
            "name": "slepc",
            "description": "Scalable Library for Eigenvalue Problem Computations."
        },
        {
            "name": "py-petsc4py",
            "description": "This package provides Python bindings for the PETSc package."
        },
        {
            "name": "trilinos",
            "description": "The Trilinos Project is an effort to develop algorithms and enabling\ntechnologies within an object-oriented software framework for the\nsolution of large-scale, complex multi-physics engineering and\nscientific problems. A unique design feature of Trilinos is its focus on\npackages."
        },
        {
            "name": "vtk",
            "description": "The Visualization Toolkit (VTK) is an open-source, freely available\nsoftware system for 3D computer graphics, image processing and\nvisualization."
        },
        {
            "name": "suite-sparse",
            "description": "SuiteSparse is a suite of sparse matrix algorithms"
        },
        {
            "name": "qt",
            "description": "Qt is a comprehensive cross-platform C++ application framework."
        },
        {
            "name": "py-pybind11",
            "description": "pybind11 -- Seamless operability between C++11 and Python. pybind11 is a\nlightweight header-only library that exposes C++ types in Python and\nvice versa, mainly to create Python bindings of existing C++ code. Its\ngoals and syntax are similar to the excellent Boost.Python library by\nDavid Abrahams: to minimize boilerplate code in traditional extension\nmodules by inferring type information using compile-time introspection."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-pkgconfig",
            "description": "Interface Python with pkg-config."
        },
        {
            "name": "py-sphinx",
            "description": "Sphinx Documentation Generator."
        }
    ],
    "dependent_to": []
}
{
    "name": "py-pyzmq",
    "aliases": [],
    "versions": [
        {
            "name": "18.1.0",
            "sha256": "32f7618b8104021bc96cbd60be4330bdf37b929e8061dbce362c9f3478a08e21"
        },
        {
            "name": "18.0.1",
            "sha256": "7b0107992d8cc4c43d9af1c2e13d573ea761c7feb23d7e0e7da9dc963811e68f"
        },
        {
            "name": "17.1.2",
            "sha256": "77a32350440e321466b1748e6063b34a8a73768b62cb674e7d799fbc654b7c45"
        },
        {
            "name": "16.0.2",
            "sha256": "717dd902c3cf432b1c68e7b299ad028b0de0d0a823858e440b81d5f1baa2b1c1"
        },
        {
            "name": "14.7.0",
            "sha256": "809a5fcc720d286c840f7f64696e60322b5b2544795a73db626f09b344d16a15"
        }
    ],
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [],
    "homepage": "https://github.com/zeromq/pyzmq",
    "maintainers": [
        "adamjstewart"
    ],
    "patches": [],
    "resources": [],
    "description": "PyZMQ: Python bindings for zeromq.\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-cython",
            "description": "The Cython compiler for writing C extensions for the Python language."
        },
        {
            "name": "py-py",
            "description": "Library with cross-python path, ini-parsing, io, code, log facilities"
        },
        {
            "name": "py-cffi",
            "description": "Foreign Function Interface for Python calling C code"
        },
        {
            "name": "py-gevent",
            "description": "gevent is a coroutine-based Python networking library."
        },
        {
            "name": "libzmq",
            "description": "The ZMQ networking/concurrency library and core API"
        }
    ],
    "dependent_to": [
        {
            "name": "nrm",
            "description": "Node Resource Manager"
        },
        {
            "name": "py-scoop",
            "description": "SCOOP (Scalable COncurrent Operations in Python) is a distributed task\nmodule allowing concurrent parallel programming on various environments,\nfrom heterogeneous grids to supercomputers."
        },
        {
            "name": "py-ipyparallel",
            "description": "IPython's architecture for parallel and distributed computing."
        },
        {
            "name": "py-spyder",
            "description": "Scientific PYthon Development EnviRonment"
        },
        {
            "name": "py-petastorm",
            "description": "Petastorm is a library enabling the use of Parquet storage from\nTensorflow, Pytorch, and other Python-based ML training frameworks."
        },
        {
            "name": "py-notebook",
            "description": "Jupyter Interactive Notebook"
        },
        {
            "name": "py-ipython-cluster-helper",
            "description": "Quickly and easily parallelize Python functions using IPython on a\ncluster, supporting multiple schedulers. Optimizes IPython defaults to\nhandle larger clusters and simultaneous processes."
        },
        {
            "name": "py-visdom",
            "description": "Visdom aims to facilitate visualization of (remote) data with an\nemphasis on supporting scientific experimentation."
        },
        {
            "name": "py-dask",
            "description": "Dask is a flexible parallel computing library for analytics."
        },
        {
            "name": "py-jupyter-server",
            "description": "The Jupyter Server provides the backend (i.e. the core services, APIs,\nand REST endpoints) for Jupyter web applications like Jupyter notebook,\nJupyterLab, and Voila."
        },
        {
            "name": "py-jupyter-client",
            "description": "Jupyter protocol client APIs"
        }
    ]
}
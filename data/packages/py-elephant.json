{
    "name": "py-elephant",
    "aliases": [],
    "versions": [
        {
            "name": "0.4.1",
            "sha256": "86b21a44cbacdc09a6ba6f51738dcd5b42ecd553d73acb29f71a0be7c82eac81"
        },
        {
            "name": "0.3.0",
            "sha256": "747251ccfb5820bdead6391411b5faf205b4ddf3ababaefe865f50b16540cfef"
        }
    ],
    "latest_version": "0.4.1",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "doc",
            "default": false,
            "description": "Build the documentation"
        },
        {
            "name": "pandas",
            "default": true,
            "description": "Build with pandas"
        }
    ],
    "homepage": "https://neuralensemble.org/elephant",
    "maintainers": [
        "adamjstewart"
    ],
    "patches": [],
    "resources": [],
    "description": "Elephant is a package for analysis of electrophysiology data in Python\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-neo",
            "description": "Neo is a package for representing electrophysiology data in Python,\ntogether with support for reading a wide range of neurophysiology file\nformats"
        },
        {
            "name": "py-numpy",
            "description": "NumPy is the fundamental package for scientific computing with Python.\nIt contains among other things: a powerful N-dimensional array object,\nsophisticated (broadcasting) functions, tools for integrating C/C++ and\nFortran code, and useful linear algebra, Fourier transform, and random\nnumber capabilities"
        },
        {
            "name": "py-quantities",
            "description": "Support for physical quantities with units, based on numpy"
        },
        {
            "name": "py-scipy",
            "description": "SciPy (pronounced \"Sigh Pie\") is a Scientific Library for Python. It\nprovides many user-friendly and efficient numerical routines such as\nroutines for numerical integration and optimization."
        },
        {
            "name": "py-pandas",
            "description": "pandas is a fast, powerful, flexible and easy to use open source data\nanalysis and manipulation tool, built on top of the Python programming\nlanguage."
        },
        {
            "name": "py-numpydoc",
            "description": "numpydoc - Numpy's Sphinx extensions"
        },
        {
            "name": "py-sphinx",
            "description": "Sphinx Documentation Generator."
        }
    ],
    "dependent_to": []
}
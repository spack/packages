{
    "name": "py-nibabel",
    "aliases": [],
    "versions": [
        {
            "name": "3.2.2",
            "sha256": "b0dcc174b30405ce9e8fec1eab3cbbb20f5c5e4920976c08b22e050b7c124f94"
        },
        {
            "name": "3.2.1",
            "sha256": "4d2ff9426b740011a1c916b54fc25da9348282e727eaa2ea163f42e00f1fc29e"
        },
        {
            "name": "2.4.1",
            "sha256": "f165ff1cb4464902d6594eb2694e2cfb6f8b9fe233b856c976c3cff623ee0e17"
        }
    ],
    "latest_version": "3.2.2",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [],
    "homepage": "https://nipy.org/nibabel",
    "maintainers": [
        "adamjstewart"
    ],
    "patches": [],
    "resources": [],
    "description": "Access a multitude of neuroimaging data formats\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-numpy",
            "description": "NumPy is the fundamental package for scientific computing with Python.\nIt contains among other things: a powerful N-dimensional array object,\nsophisticated (broadcasting) functions, tools for integrating C/C++ and\nFortran code, and useful linear algebra, Fourier transform, and random\nnumber capabilities"
        },
        {
            "name": "py-packaging",
            "description": "Core utilities for Python packages."
        },
        {
            "name": "py-six",
            "description": "Python 2 and 3 compatibility utilities."
        },
        {
            "name": "py-bz2file",
            "description": "Python library for reading and writing bzip2-compressed files."
        }
    ],
    "dependent_to": [
        {
            "name": "py-datalad-neuroimaging",
            "description": "DataLad extension package for neuro/medical imaging"
        },
        {
            "name": "py-nibetaseries",
            "description": "BetaSeries Correlations implemented in Nipype."
        },
        {
            "name": "py-nilearn",
            "description": "Statistical learning for neuroimaging in Python."
        },
        {
            "name": "py-niworkflows",
            "description": "Common workflows for MRI (anatomical, functional, diffusion, etc)"
        },
        {
            "name": "py-nitransforms",
            "description": "NiTransforms -- Neuroimaging spatial transforms in Python."
        },
        {
            "name": "py-pycortex",
            "description": "Python Cortical mapping software for fMRI data."
        },
        {
            "name": "py-neurora",
            "description": "A Python Toolbox for Multimodal Neural Data Representation Analysis."
        },
        {
            "name": "py-dipy",
            "description": "Diffusion MRI utilities in python. DIPY is the paragon 3D/4D+ imaging\nlibrary in Python. Contains generic methods for spatial normalization,\nsignal processing, machine learning, statistical analysis and\nvisualization of medical images. Additionally, it contains specialized\nmethods for computational anatomy including diffusion, perfusion and\nstructural imaging."
        },
        {
            "name": "py-nistats",
            "description": "Modeling and Statistical analysis of fMRI data in Python."
        },
        {
            "name": "py-nipype",
            "description": "Neuroimaging in Python: Pipelines and Interfaces."
        },
        {
            "name": "py-pybids",
            "description": "bids: interface with datasets conforming to BIDS"
        },
        {
            "name": "py-intensity-normalization",
            "description": "Normalize intensities of images from various MRI modalities"
        },
        {
            "name": "py-mne",
            "description": "MNE python project for MEG and EEG data analysis."
        },
        {
            "name": "py-pysurfer",
            "description": "Cortical neuroimaging visualization in Python."
        }
    ]
}
{
    "name": "py-netcdf4",
    "aliases": [],
    "versions": [
        {
            "name": "1.5.3",
            "sha256": "2a3ca855848f4bbf07fac366da77a681fcead18c0a8813d91d46302f562dc3be"
        },
        {
            "name": "1.4.2",
            "sha256": "b934af350459cf9041bcdf5472e2aa56ed7321c018d918e9f325ec9a1f9d1a30"
        },
        {
            "name": "1.2.7",
            "sha256": "0c449b60183ee06238a8f9a75de7b0eed3acaa7a374952ff9f1ff06beb8f94ba"
        },
        {
            "name": "1.2.3.1",
            "sha256": "55edd74ef9aabb1f7d1ea3ffbab9c555da2a95632a97f91c0242281dc5eb919f"
        }
    ],
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [],
    "homepage": "https://github.com/Unidata/netcdf4-python",
    "maintainers": [
        "skosukhin"
    ],
    "patches": [
        {
            "owner": "builtin.py-netcdf4",
            "sha256": "255b5ae328c6b2b293a59d7eb8934f861f265eba770c6a37411222d161e84171",
            "level": 1,
            "working_dir": ".",
            "relative_path": "disable_pkgconf.patch",
            "version": ""
        },
        {
            "owner": "builtin.py-netcdf4",
            "sha256": "ef6fc2fc2b02fa34871d94963ccc2f772a87587d0c6a1fc26791e5a9bb3f31da",
            "level": 1,
            "working_dir": ".",
            "relative_path": "check_hdf5version.patch",
            "version": "@:1.2.9 ^hdf5@1.10:"
        }
    ],
    "resources": [],
    "description": "Python interface to the netCDF Library.\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-cython",
            "description": "The Cython compiler for writing C extensions for the Python language."
        },
        {
            "name": "py-numpy",
            "description": "NumPy is the fundamental package for scientific computing with Python.\nIt contains among other things: a powerful N-dimensional array object,\nsophisticated (broadcasting) functions, tools for integrating C/C++ and\nFortran code, and useful linear algebra, Fourier transform, and random\nnumber capabilities"
        },
        {
            "name": "py-cftime",
            "description": "Python library for decoding time units and variable values in a netCDF\nfile conforming to the Climate and Forecasting (CF) netCDF conventions"
        },
        {
            "name": "netcdf-c",
            "description": "NetCDF (network Common Data Form) is a set of software libraries and\nmachine-independent data formats that support the creation, access, and\nsharing of array-oriented scientific data. This is the C distribution."
        },
        {
            "name": "hdf5",
            "description": "HDF5 is a data model, library, and file format for storing and managing\ndata. It supports an unlimited variety of datatypes, and is designed for\nflexible and efficient I/O and for high volume and complex data."
        }
    ],
    "dependent_to": [
        {
            "name": "py-pyugrid",
            "description": "Work with triangular unstructured grids and the data on them."
        },
        {
            "name": "py-datacube",
            "description": "An analysis environment for satellite and other earth observation data."
        },
        {
            "name": "py-anuga",
            "description": "ANUGA (pronounced \"AHnooGAH\") is open-source software for the simulation\nof the shallow water equation, in particular it can be used to model\ntsunamis and floods."
        },
        {
            "name": "py-xarray",
            "description": "N-D labeled arrays and datasets in Python"
        },
        {
            "name": "py-wradlib",
            "description": "wradlib is designed to assist you in the most important steps of\nprocessing weather radar data. These may include: reading common data\nformats, georeferencing, converting reflectivity to rainfall intensity,\nidentifying and correcting typical error sources (such as clutter or\nattenuation) and visualising the data."
        },
        {
            "name": "py-dxchange",
            "description": "DXchange provides an interface with tomoPy and raw tomographic data\ncollected at different synchrotron facilities."
        },
        {
            "name": "py-mdanalysis",
            "description": "MDAnalysis is a Python toolkit to analyze molecular dynamics\ntrajectories generated by a wide range of popular simulation packages\nincluding DL_Poly, CHARMM, Amber, NAMD, LAMMPS, and Gromacs. (See the\nlists of supported trajectory formats and topology formats.)"
        },
        {
            "name": "py-arviz",
            "description": "ArviZ (pronounced \"AR-vees\") is a Python package for exploratory\nanalysis of Bayesian models. Includes functions for posterior analysis,\nmodel checking, comparison and diagnostics."
        },
        {
            "name": "py-abipy",
            "description": "Python package to automate ABINIT calculations and analyze the results."
        },
        {
            "name": "py-cdo",
            "description": "The cdo package provides an interface to the Climate Data Operators from\nPython."
        }
    ]
}
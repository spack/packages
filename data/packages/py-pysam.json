{
    "name": "py-pysam",
    "aliases": [],
    "versions": [
        {
            "name": "0.18.0",
            "sha256": "1d6d49a0b3c626fae410a93d4c80583a8b5ddaacc9b46a080b250dbcebd30a59"
        },
        {
            "name": "0.15.3",
            "sha256": "a98dd0a164aa664b1ab30a36f653752f00e93c13deeb66868597f4b2a30f7265"
        },
        {
            "name": "0.15.2",
            "sha256": "d049efd91ed5b1af515aa30280bc9cb46a92ddd15d546c9b21ee68a6ed4055d9"
        },
        {
            "name": "0.15.1",
            "sha256": "658421124c2f3de1b7445e03ca8413df0077f67ea9980abdaab0d1b5f7a8936f"
        },
        {
            "name": "0.14.1",
            "sha256": "2e86f5228429d08975c8adb9030296699012a8deba8ba26cbfc09b374f792c97"
        },
        {
            "name": "0.7.7",
            "sha256": "c9f3018482eec99ee199dda3fdef2aa7424dde6574672a4c0d209a10985755cc"
        }
    ],
    "latest_version": "0.18.0",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [],
    "homepage": "https://github.com/pysam-developers/pysam",
    "maintainers": [
        "adamjstewart"
    ],
    "patches": [],
    "resources": [],
    "description": "A python module for reading, manipulating and writing genomic data sets.\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-cython",
            "description": "The Cython compiler for writing C extensions for the Python language."
        },
        {
            "name": "curl",
            "description": "cURL is an open source command line tool and library for transferring\ndata with URL syntax"
        },
        {
            "name": "bcftools",
            "description": "BCFtools is a set of utilities that manipulate variant calls in the\nVariant Call Format (VCF) and its binary counterpart BCF. All commands\nwork transparently with both VCFs and BCFs, both uncompressed and BGZF-\ncompressed."
        },
        {
            "name": "htslib",
            "description": "C library for high-throughput sequencing data formats."
        },
        {
            "name": "samtools",
            "description": "SAM Tools provide various utilities for manipulating alignments in the\nSAM format, including sorting, merging, indexing and generating\nalignments in a per-position format"
        }
    ],
    "dependent_to": [
        {
            "name": "py-rseqc",
            "description": "RSeQC package provides a number of useful modules that can\ncomprehensively evaluate high throughput sequence data especially RNA-\nseq data."
        },
        {
            "name": "find-circ",
            "description": "Find-circ is a collection of python scripts detecting head-to-tail\nspliced (back-spliced) sequencing reads, indicative of circular RNA\n(circRNA) in RNA-seq data."
        },
        {
            "name": "bsseeker2",
            "description": "A versatile aligning pipeline for bisulfite sequencing data."
        },
        {
            "name": "py-misopy",
            "description": "MISO (Mixture of Isoforms) is a probabilistic framework that quantitates\nthe expression level of alternatively spliced genes from RNA-Seq data,\nand identifies differentially regulated isoforms or exons across\nsamples."
        },
        {
            "name": "py-breakseq2",
            "description": "nucleotide-resolution analysis of structural variants"
        },
        {
            "name": "py-gemini",
            "description": "GEMINI (GEnome MINIng) is a flexible framework for exploring genetic\nvariation in the context of the wealth of genome annotations available\nfor the human genome."
        },
        {
            "name": "py-tetoolkit",
            "description": "TEToolkit is a software package that utilizes both unambiguously\n(uniquely) and ambiguously (multi-) mapped reads to perform differential\nenrichment analyses from high throughput sequencing experiments."
        },
        {
            "name": "py-umi-tools",
            "description": "Tools for handling Unique Molecular Identifiers in NGS data sets"
        },
        {
            "name": "py-cnvkit",
            "description": "Copy number variation toolkit for high-throughput sequencing."
        },
        {
            "name": "py-rnacocktail",
            "description": "RNACocktail: A comprehensive framework for accurate and efficient RNA-\nSeq analysis."
        },
        {
            "name": "py-metasv",
            "description": "An accurate and integrative structural-variant caller for next\ngeneration sequencing"
        },
        {
            "name": "py-deeptools",
            "description": "deepTools addresses the challenge of handling the large amounts of data\nthat are now routinely generated from DNA sequencing centers."
        },
        {
            "name": "reditools",
            "description": "REDItools: python scripts for RNA editing detection by RNA-Seq data.\nREDItools are simple python scripts conceived to facilitate the\ninvestigation of RNA editing at large-scale and devoted to research\ngroups that would to explore such phenomenon in own data but don't have\nsufficient bioinformatics skills. They work on main operating systems\n(although unix/linux-based OS are preferred), can handle reads from\nwhatever platform in the standard BAM format and implement a variety of\nfilters."
        },
        {
            "name": "py-checkm-genome",
            "description": "Assess the quality of microbial genomes recovered from isolates, single\ncells, and metagenomes"
        },
        {
            "name": "py-whatshap",
            "description": "WhatsHap is a software for phasing genomic variants using DNA sequencing\nreads, also called read-based phasing or haplotype assembly."
        },
        {
            "name": "vifi",
            "description": "ViFi is a collection of python and perl scripts for identifying viral\nintegration and fusion mRNA reads from NGS data."
        },
        {
            "name": "py-crossmap",
            "description": "CrossMap is a program for convenient conversion of genome coordinates\n(or annotation files) between different assemblies"
        },
        {
            "name": "py-atropos",
            "description": "Atropos is tool for specific, sensitive, and speedy trimming of NGS\nreads. It is a fork of the venerable Cutadapt read trimmer."
        },
        {
            "name": "py-htseq",
            "description": "HTSeq is a Python package that provides infrastructure to process data\nfrom high-throughput sequencing assays."
        },
        {
            "name": "hic-pro",
            "description": "HiC-Pro is a package designed to process Hi-C data, from raw fastq files\n(paired-end Illumina data) to the normalized contact maps"
        },
        {
            "name": "py-biomine",
            "description": "Bioinformatics data-mining."
        },
        {
            "name": "py-wub",
            "description": "Bioinformatics tools and a software library developed by the Oxford\nNanopore Technologies Applications group."
        },
        {
            "name": "py-pybedtools",
            "description": "Python wrapper -- and more -- for Aaron Quinlan's BEDTools"
        }
    ]
}
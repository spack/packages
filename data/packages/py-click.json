{
    "name": "py-click",
    "aliases": [],
    "versions": [
        {
            "name": "8.0.3",
            "sha256": "410e932b050f5eed773c4cda94de75971c89cdb3155a72a0831139a79e5ecb5b"
        },
        {
            "name": "8.0.1",
            "sha256": "8c04c11192119b1ef78ea049e0a6f0463e4c48ef00a30160c704337586f3ad7a"
        },
        {
            "name": "7.1.2",
            "sha256": "d2b5255c7c6349bc1bd1e59e08cd12acbbd63ce649f2588755783aa94dfb6b1a"
        },
        {
            "name": "7.0",
            "sha256": "5b94b49521f6456670fdb30cd82a4eca9412788a93fa6dd6df72c94d5a8ff2d7",
            "url": "https://pypi.io/packages/source/c/click/Click-7.0.tar.gz"
        },
        {
            "name": "6.6",
            "sha256": "cc6a19da8ebff6e7074f731447ef7e112bd23adf3de5c597cf9989f2fd8defe9"
        }
    ],
    "latest_version": "8.0.3",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [],
    "homepage": "https://click.palletsprojects.com",
    "maintainers": [
        "adamjstewart"
    ],
    "patches": [],
    "resources": [],
    "description": "Python composable command line interface toolkit.\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-importlib-metadata",
            "description": "Read metadata from Python packages."
        }
    ],
    "dependent_to": [
        {
            "name": "py-quart",
            "description": "A Python ASGI web microframework with the same API as Flask."
        },
        {
            "name": "py-black",
            "description": "Black is the uncompromising Python code formatter. By using it, you\nagree to cede control over minutiae of hand-formatting. In return, Black\ngives you speed, determinism, and freedom from pycodestyle nagging about\nformatting."
        },
        {
            "name": "py-cookiecutter",
            "description": "A command-line utility that creates projects from cookiecutters (project\ntemplates). E.g. Python package projects, jQuery plugin projects."
        },
        {
            "name": "py-cekit",
            "description": "CEKit is a Container image creation tool. CEKit helps to build container\nimages from image definition files with strong focus on modularity and\ncode reuse."
        },
        {
            "name": "py-sierrapy",
            "description": "A Client of HIVdb Sierra GraphQL Webservice"
        },
        {
            "name": "py-downhill",
            "description": "Stochastic optimization routines for Theano"
        },
        {
            "name": "py-fava",
            "description": "Fava is a web interface for the double-entry bookkeeping software\nBeancount with a focus on features and usability."
        },
        {
            "name": "py-python-dotenv",
            "description": "Read key-value pairs from a .env file and set them as environment\nvariables"
        },
        {
            "name": "py-mercantile",
            "description": "Web mercator XYZ tile utilities."
        },
        {
            "name": "py-rq",
            "description": "RQ (Redis Queue) is a simple Python library for queueing jobs and\nprocessing them in the background with workers."
        },
        {
            "name": "py-cfgrib",
            "description": "Python interface to map GRIB files to the NetCDF Common Data Model\nfollowing the CF Convention using ecCodes."
        },
        {
            "name": "py-py2neo",
            "description": "Py2neo is a client library and toolkit for working with Neo4j from\nwithin Python applications and from the command line."
        },
        {
            "name": "py-pybids",
            "description": "bids: interface with datasets conforming to BIDS"
        },
        {
            "name": "py-cffconvert",
            "description": "Command line program to validate and convert CITATION.cff files."
        },
        {
            "name": "py-usgs",
            "description": "Client library for interfacing with USGS datasets"
        },
        {
            "name": "cget",
            "description": "Cmake package retrieval."
        },
        {
            "name": "py-click-plugins",
            "description": "An extension module for py-click to register external CLI commands via\nsetuptools entry-points."
        },
        {
            "name": "py-biom-format",
            "description": "The BIOM file format (canonically pronounced biome) is designed to be a\ngeneral-use format for representing biological sample by observation\ncontingency tables."
        },
        {
            "name": "py-cligj",
            "description": "Click-based argument and option decorators for Python GIS command line\nprograms"
        },
        {
            "name": "py-archspec",
            "description": "A library for detecting, labeling and reasoning about\nmicroarchitectures."
        },
        {
            "name": "py-histoprint",
            "description": "Pretty print of NumPy (and other) histograms to the console"
        },
        {
            "name": "py-radiant-mlhub",
            "description": "A Python client for Radiant MLHub."
        },
        {
            "name": "py-wandb",
            "description": "A tool for visualizing and tracking your machine learning experiments."
        },
        {
            "name": "py-rasterio",
            "description": "Rasterio reads and writes geospatial raster data. Geographic information\nsystems use GeoTIFF and other formats to organize and store gridded, or\nraster, datasets. Rasterio reads and writes these formats and provides a\nPython API based on N-D arrays."
        },
        {
            "name": "py-ray",
            "description": "A system for parallel and distributed Python that unifies the ML\necosystem."
        },
        {
            "name": "py-nltk",
            "description": "The Natural Language Toolkit (NLTK) is a Python package for natural\nlanguage processing."
        },
        {
            "name": "py-celery",
            "description": "Celery - Distributed Task Queue."
        },
        {
            "name": "py-nara-wpe",
            "description": "Background noise and signal reverberation due to reflections in an\nenclosure are the two main impairments in acoustic signal processing and\nfar-field speech recognition. This work addresses signal dereverberation\ntechniques based on WPE for speech recognition and other far-field\napplications. WPE is a compelling algorithm to blindly dereverberate\nacoustic signals based on long-term linear prediction."
        },
        {
            "name": "gatetools",
            "description": "Python tools for GATE, see https://github.com/OpenGATE/Gate"
        },
        {
            "name": "py-distributed",
            "description": "Distributed scheduler for Dask"
        },
        {
            "name": "py-snuggs",
            "description": "Snuggs are s-expressions for Numpy"
        },
        {
            "name": "gnuradio",
            "description": "GNU Radio is a free & open-source software development toolkit that\nprovides signal processing blocks to implement software radios. It can\nbe used with readily-available, low-cost external RF hardware to create\nsoftware-defined radios, or without hardware in a simulation-like\nenvironment. It is widely used in hobbyist, academic, and commercial\nenvironments to support both wireless communications research and real-\nworld radio systems."
        },
        {
            "name": "py-setuptools-cpp",
            "description": "Simplified packaging for pybind11-based C++ extensions"
        },
        {
            "name": "py-click-repl",
            "description": "Subcommand REPL for click apps"
        },
        {
            "name": "py-coilmq",
            "description": "Lightweight Python STOMP message broker."
        },
        {
            "name": "py-cyvcf2",
            "description": "fast vcf parsing with cython + htslib"
        },
        {
            "name": "py-multiqc",
            "description": "MultiQC is a tool to aggregate bioinformatics results across many\nsamples into a single report. It is written in Python and contains\nmodules for a large number of common bioinformatics tools."
        },
        {
            "name": "py-datacube",
            "description": "An analysis environment for satellite and other earth observation data."
        },
        {
            "name": "py-sacremoses",
            "description": "LGPL MosesTokenizer in Python."
        },
        {
            "name": "py-fiona",
            "description": "Fiona reads and writes spatial data files."
        },
        {
            "name": "py-chalice",
            "description": "Python Serverless Microframework for AWS."
        },
        {
            "name": "py-flask",
            "description": "A simple framework for building complex web applications."
        },
        {
            "name": "py-nipype",
            "description": "Neuroimaging in Python: Pipelines and Interfaces."
        },
        {
            "name": "py-click-didyoumean",
            "description": "Enable git-like did-you-mean feature in click"
        },
        {
            "name": "py-geocube",
            "description": "Tool to convert geopandas vector data into rasterized xarray data."
        },
        {
            "name": "py-planet",
            "description": "Python client library and CLI for Planet's public API"
        }
    ]
}
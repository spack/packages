{
    "name": "py-onnx",
    "aliases": [],
    "versions": [
        {
            "name": "1.8.1",
            "sha256": "9d65c52009a90499f8c25fdfe5acda3ac88efe0788eb1d5f2575a989277145fb"
        },
        {
            "name": "1.6.0",
            "sha256": "3b88c3fe521151651a0403c4d131cb2e0311bd28b753ef692020a432a81ce345"
        },
        {
            "name": "1.5.0",
            "sha256": "1a584a4ef62a6db178c257fffb06a9d8e61b41c0a80bfd8bcd8a253d72c4b0b4"
        }
    ],
    "latest_version": "1.8.1",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [],
    "homepage": "https://github.com/onnx/onnx",
    "maintainers": [
        "adamjstewart"
    ],
    "patches": [
        {
            "owner": "builtin.py-onnx",
            "sha256": "7877f06e6fa51a88458a3ad68f1cd54cbd197021d2895d5c1e4563e0af97c9a7",
            "level": 1,
            "working_dir": ".",
            "relative_path": "remove_dllexport_decl.patch",
            "version": "@:1.6.0"
        }
    ],
    "resources": [],
    "description": "Open Neural Network Exchange (ONNX) is an open ecosystem that empowers\nAI developers to choose the right tools as their project evolves. ONNX\nprovides an open source format for AI models, both deep learning and\ntraditional ML. It defines an extensible computation graph model, as\nwell as definitions of built-in operators and standard data types.\nCurrently we focus on the capabilities needed for inferencing (scoring).\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "protobuf",
            "description": "Google's data interchange format."
        },
        {
            "name": "py-protobuf",
            "description": "Protocol buffers are Google's language-neutral, platform-neutral,\nextensible mechanism for serializing structured data - think XML, but\nsmaller, faster, and simpler. You define how you want your data to be\nstructured once, then you can use special generated source code to\neasily write and read your structured data to and from a variety of data\nstreams and using a variety of languages."
        },
        {
            "name": "py-numpy",
            "description": "NumPy is the fundamental package for scientific computing with Python.\nIt contains among other things: a powerful N-dimensional array object,\nsophisticated (broadcasting) functions, tools for integrating C/C++ and\nFortran code, and useful linear algebra, Fourier transform, and random\nnumber capabilities"
        },
        {
            "name": "py-six",
            "description": "Python 2 and 3 compatibility utilities."
        },
        {
            "name": "py-typing",
            "description": "This is a backport of the standard library typing module to Python\nversions older than 3.6."
        },
        {
            "name": "py-typing-extensions",
            "description": "The typing_extensions module contains both backports of these changes as\nwell as experimental types that will eventually be added to the typing\nmodule, such as Protocol (see PEP 544 for details about protocols and\nstatic duck typing)."
        },
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "py-pytest-runner",
            "description": "Invoke py.test as distutils command with dependency resolution."
        }
    ],
    "dependent_to": [
        {
            "name": "py-keras2onnx",
            "description": "Converts Machine Learning models to ONNX for use in Windows ML"
        },
        {
            "name": "py-skl2onnx",
            "description": "Convert scikit-learn models to ONNX"
        },
        {
            "name": "py-onnxconverter-common",
            "description": "ONNX Converter and Optimization Tools"
        },
        {
            "name": "py-onnx-runtime",
            "description": "ONNX Runtime is a performance-focused complete scoring engine for Open\nNeural Network Exchange (ONNX) models, with an open extensible\narchitecture to continually address the latest developments in AI and\nDeep Learning. ONNX Runtime stays up to date with the ONNX standard with\ncomplete implementation of all ONNX operators, and supports all ONNX\nreleases (1.2+) with both future and backwards compatibility."
        },
        {
            "name": "py-onnxmltools",
            "description": "Converts Machine Learning models to ONNX"
        }
    ]
}
{
    "name": "r-reticulate",
    "aliases": [],
    "versions": [
        {
            "name": "1.18",
            "sha256": "b33f855a58f446eefbe38df8a1a4865390f5d4ebd64b2c72266baaee64628513"
        },
        {
            "name": "1.15",
            "sha256": "47db3e9c9424263ade15287da8e74f6ba261a936b644b197dba6772853b7b50d"
        },
        {
            "name": "1.13",
            "sha256": "adbe41d556b667c4419d563680f8608a56b0f792b8bc427b3bf4c584ff819de3"
        }
    ],
    "build_system": "RPackage",
    "conflicts": [],
    "variants": [],
    "homepage": "https://github.com/rstudio/reticulate",
    "maintainers": [
        "glennpj"
    ],
    "patches": [],
    "resources": [],
    "description": "Interface to 'Python' Interface to 'Python' modules, classes, and\nfunctions. When calling into 'Python', R data types are automatically\nconverted to their equivalent 'Python' types. When values are returned\nfrom 'Python' to R they are converted back to R types. Compatible with\nall versions of 'Python' >= 2.7.\n",
    "dependencies": [
        {
            "name": "r",
            "description": "R is 'GNU S', a freely available language and environment for\nstatistical computing and graphics which provides a wide variety of\nstatistical and graphical techniques: linear and nonlinear modelling,\nstatistical tests, time series analysis, classification, clustering,\netc. Please consult the R project homepage for further information."
        },
        {
            "name": "r-jsonlite",
            "description": "A Simple and Robust JSON Parser and Generator for R A fast JSON parser\nand generator optimized for statistical data and the web. Started out as\na fork of 'RJSONIO', but has been completely rewritten in recent\nversions. The package offers flexible, robust, high performance tools\nfor working with JSON in R and is particularly powerful for building\npipelines and interacting with a web API. The implementation is based on\nthe mapping described in the vignette (Ooms, 2014). In addition to\nconverting JSON data from/to R objects, 'jsonlite' contains functions to\nstream, validate, and prettify JSON data. The unit tests included with\nthe package verify that all edge cases are encoded and decoded\nconsistently for use with dynamic data in systems and applications."
        },
        {
            "name": "r-matrix",
            "description": "Sparse and Dense Matrix Classes and Methods A rich hierarchy of matrix\nclasses, including triangular, symmetric, and diagonal matrices, both\ndense and sparse and with pattern, logical and numeric entries. Numerous\nmethods for and operations on these matrices, using 'LAPACK' and\n'SuiteSparse' libraries."
        },
        {
            "name": "r-rappdirs",
            "description": "An easy way to determine which directories on the users computer you\nshould use to save data, caches and logs. A port of Python's 'Appdirs'\nto R."
        },
        {
            "name": "r-rcpp",
            "description": "Seamless R and C++ Integration The 'Rcpp' package provides R functions\nas well as C++ classes which; offer a seamless integration of R and C++.\nMany R data types and objects can be; mapped back and forth to C++\nequivalents which facilitates both writing of new; code as well as\neasier integration of third-party libraries. Documentation; about 'Rcpp'\nis provided by several vignettes included in this package, via the;\n'Rcpp Gallery' site at <https://gallery.rcpp.org>, the paper by\nEddelbuettel and; Francois (2011, <doi:10.18637/jss.v040.i08>), the book\nby Eddelbuettel (2013,; <doi:10.1007/978-1-4614-6868-4>) and the paper\nby Eddelbuettel and Balamuta (2018,;\n<doi:10.1080/00031305.2017.1375990>); see 'citation(\"Rcpp\")' for\ndetails."
        },
        {
            "name": "python",
            "description": "The Python programming language."
        }
    ],
    "dependent_to": [
        {
            "name": "r-seurat",
            "description": "Tools for Single Cell Genomics A toolkit for quality control, analysis,\nand exploration of single cell RNA sequencing data. 'Seurat' aims to\nenable users to identify and interpret sources of heterogeneity from\nsingle cell transcriptomic measurements, and to integrate diverse types\nof single cell data. See Satija R, Farrell J, Gennert D, et al (2015)\n<doi:10.1038/nbt.3192>, Macosko E, Basu A, Satija R, et al (2015)\n<doi:10.1016/j.cell.2015.05.002>, and Stuart T, Butler A, et al (2019)\n<doi:10.1016/j.cell.2019.05.031> for more details."
        },
        {
            "name": "r-caracas",
            "description": "Computer Algebra Computer algebra via the 'SymPy' library\n(<https://www.sympy.org/>). This makes it possible to solve equations\nsymbolically, find symbolic integrals, symbolic sums and other important\nquantities."
        },
        {
            "name": "r-leiden",
            "description": "R Implementation of Leiden Clustering Algorithm Implements the 'Python\nleidenalg' module to be called in R. Enables clustering using the leiden\nalgorithm for partition a graph into communities. See the 'Python'\nrepository for more details: <https://github.com/vtraag/leidenalg> Traag\net al (2018) From Louvain to Leiden: guaranteeing well-connected\ncommunities. <arXiv:1810.08473>."
        }
    ]
}
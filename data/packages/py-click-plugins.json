{
    "name": "py-click-plugins",
    "aliases": [],
    "versions": [
        {
            "name": "1.1.1",
            "sha256": "46ab999744a9d831159c3411bb0c79346d94a444df9a3a3742e9ed63645f264b"
        },
        {
            "name": "1.0.4",
            "sha256": "dfed74b5063546a137de99baaaf742b4de4337ad2b3e1df5ec7c8a256adc0847"
        }
    ],
    "latest_version": "1.1.1",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [],
    "homepage": "https://pypi.org/project/click-plugins/",
    "maintainers": [
        "adamjstewart"
    ],
    "patches": [],
    "resources": [],
    "description": "An extension module for py-click to register external CLI commands via\nsetuptools entry-points.\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-click",
            "description": "Python composable command line interface toolkit."
        }
    ],
    "dependent_to": [
        {
            "name": "gnuradio",
            "description": "GNU Radio is a free & open-source software development toolkit that\nprovides signal processing blocks to implement software radios. It can\nbe used with readily-available, low-cost external RF hardware to create\nsoftware-defined radios, or without hardware in a simulation-like\nenvironment. It is widely used in hobbyist, academic, and commercial\nenvironments to support both wireless communications research and real-\nworld radio systems."
        },
        {
            "name": "py-celery",
            "description": "Celery - Distributed Task Queue."
        },
        {
            "name": "py-rasterio",
            "description": "Rasterio reads and writes geospatial raster data. Geographic information\nsystems use GeoTIFF and other formats to organize and store gridded, or\nraster, datasets. Rasterio reads and writes these formats and provides a\nPython API based on N-D arrays."
        },
        {
            "name": "py-fiona",
            "description": "Fiona reads and writes spatial data files."
        }
    ]
}
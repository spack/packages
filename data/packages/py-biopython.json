{
    "name": "py-biopython",
    "aliases": [],
    "versions": [
        {
            "name": "1.78",
            "sha256": "1ee0a0b6c2376680fea6642d5080baa419fd73df104a62d58a8baf7a8bbe4564"
        },
        {
            "name": "1.73",
            "sha256": "70c5cc27dc61c23d18bb33b6d38d70edc4b926033aea3b7434737c731c94a5e0"
        },
        {
            "name": "1.70",
            "sha256": "4a7c5298f03d1a45523f32bae1fffcff323ea9dce007fb1241af092f5ab2e45b"
        },
        {
            "name": "1.65",
            "sha256": "463cc81db84e9bfcdfb15629511c81ed556a6c0287e670dbfe80f03c65d2a88e"
        }
    ],
    "latest_version": "1.78",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [],
    "homepage": "https://biopython.org/wiki/Main_Page",
    "maintainers": [
        "adamjstewart"
    ],
    "patches": [],
    "resources": [],
    "description": "A distributed collaborative effort to develop Python libraries and\napplications which address the needs of current and future work in\nbioinformatics.\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "py-numpy",
            "description": "NumPy is the fundamental package for scientific computing with Python.\nIt contains among other things: a powerful N-dimensional array object,\nsophisticated (broadcasting) functions, tools for integrating C/C++ and\nFortran code, and useful linear algebra, Fourier transform, and random\nnumber capabilities"
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        }
    ],
    "dependent_to": [
        {
            "name": "py-angel",
            "description": "ANGEL: Robust Open Reading Frame prediction"
        },
        {
            "name": "py-haphpipe",
            "description": "HAplotype and PHylodynamics pipeline for viral assembly, population\ngenetics, and phylodynamics."
        },
        {
            "name": "py-pauvre",
            "description": "pauvre: plotting package designed for nanopore and PacBio long reads"
        },
        {
            "name": "py-vcf-kit",
            "description": "VCF-kit is a command-line based collection of utilities for performing\nanalysis on Variant Call Format (VCF) files."
        },
        {
            "name": "py-cnvkit",
            "description": "Copy number variation toolkit for high-throughput sequencing."
        },
        {
            "name": "orthofiller",
            "description": "OrthoFiller: Identifying missing annotations for evolutionarily\nconserved genes."
        },
        {
            "name": "py-mdanalysis",
            "description": "MDAnalysis is a Python toolkit to analyze molecular dynamics\ntrajectories generated by a wide range of popular simulation packages\nincluding DL_Poly, CHARMM, Amber, NAMD, LAMMPS, and Gromacs. (See the\nlists of supported trajectory formats and topology formats.)"
        },
        {
            "name": "py-mikado",
            "description": "Mikado is a lightweight Python3 pipeline whose purpose is to facilitate\nthe identification of expressed loci from RNA-Seq data * and to select\nthe best models in each locus."
        },
        {
            "name": "phyluce",
            "description": "phyluce (phy-loo-chee) is a software package that was initially\ndeveloped for analyzing data collected from ultraconserved elements in\norganismal genomes"
        },
        {
            "name": "py-pyani",
            "description": "pyani is a Python3 module that provides support for calculating average\nnucleotide identity (ANI) and related measures for whole genome\ncomparisons, and rendering relevant graphical summary output. Where\navailable, it takes advantage of multicore systems, and can integrate\nwith SGE/OGE-type job schedulers for the sequence comparisons."
        },
        {
            "name": "busco",
            "description": "Assesses genome assembly and annotation completeness with Benchmarking\nUniversal Single-Copy Orthologs"
        },
        {
            "name": "hybpiper",
            "description": "HybPiper was designed for targeted sequence capture, in which DNA\nsequencing libraries are enriched for gene regions of interest,\nespecially for phylogenetics. HybPiper is a suite of Python scripts that\nwrap and connect bioinformatics tools in order to extract target\nsequences from high-throughput DNA sequencing reads"
        },
        {
            "name": "py-wub",
            "description": "Bioinformatics tools and a software library developed by the Oxford\nNanopore Technologies Applications group."
        },
        {
            "name": "isescan",
            "description": "A python pipeline to identify IS (Insertion Sequence) elements in genome\nand metagenome"
        },
        {
            "name": "py-breakseq2",
            "description": "nucleotide-resolution analysis of structural variants"
        },
        {
            "name": "shortbred",
            "description": "ShortBRED is a system for profiling protein families of interest at very\nhigh specificity in shotgun meta'omic sequencing data."
        },
        {
            "name": "py-crispresso",
            "description": "Software pipeline for the analysis of CRISPR-Cas9 genome editing\noutcomes from deep sequencing data."
        },
        {
            "name": "py-bcbio-gff",
            "description": "Read and write Generic Feature Format (GFF) with Biopython integration."
        }
    ]
}
{
    "name": "py-mako",
    "aliases": [],
    "versions": [
        {
            "name": "1.1.4",
            "sha256": "17831f0b7087c313c0ffae2bcbbd3c1d5ba9eeac9c38f2eb7b50e8c99fe9d5ab"
        },
        {
            "name": "1.0.4",
            "sha256": "fed99dbe4d0ddb27a33ee4910d8708aca9ef1fe854e668387a9ab9a90cbf9059"
        },
        {
            "name": "1.0.1",
            "sha256": "45f0869febea59dab7efd256fb451c377cbb7947bef386ff0bb44627c31a8d1c"
        }
    ],
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [],
    "homepage": "https://pypi.org/project/Mako/",
    "maintainers": [
        "adamjstewart"
    ],
    "patches": [],
    "resources": [],
    "description": "A super-fast templating language that borrows the best ideas from the\nexisting templating languages.\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-markupsafe",
            "description": "MarkupSafe is a library for Python that implements a unicode string that\nis aware of HTML escaping rules and can be used to implement automatic\nstring escaping. It is used by Jinja 2, the Mako templating engine, the\nPylons web framework and many more."
        }
    ],
    "dependent_to": [
        {
            "name": "py-jupyterhub",
            "description": "Multi-user server for Jupyter notebooks."
        },
        {
            "name": "py-alembic",
            "description": "Alembic is a database migrations tool."
        },
        {
            "name": "py-pygpu",
            "description": "Python packge for the libgpuarray C library."
        },
        {
            "name": "py-pycbc",
            "description": "PyCBC is a software package used to explore astrophysical sources of\ngravitational waves. It contains algorithms to analyze gravitational-\nwave data from the LIGO and Virgo detectors, detect coalescing compact\nbinaries, and measure the astrophysical parameters of detected sources.\nPyCBC was used in the first direct detection of gravitational waves and\nis used in the flagship analysis of LIGO and Virgo data."
        },
        {
            "name": "volk",
            "description": "VOLK is the Vector-Optimized Library of Kernels. It is a library that\ncontains kernels of hand-written SIMD code for different mathematical\noperations. Since each SIMD architecture can be very different and no\ncompiler has yet come along to handle vectorization properly or highly\nefficiently, VOLK approaches the problem differently. For each\narchitecture or platform that a developer wishes to vectorize for, a new\nproto-kernel is added to VOLK. At runtime, VOLK will select the correct\nproto-kernel. In this way, the users of VOLK call a kernel for\nperforming the operation that is platform/architecture agnostic. This\nallows us to write portable SIMD code."
        },
        {
            "name": "mesa",
            "description": "Mesa is an open-source implementation of the OpenGL specification - a\nsystem for rendering interactive 3D graphics."
        },
        {
            "name": "py-pycuda",
            "description": "PyCUDA gives you easy, Pythonic access to Nvidia's CUDA parallel\ncomputation API"
        },
        {
            "name": "mesa18",
            "description": "Mesa is an open-source implementation of the OpenGL specification - a\nsystem for rendering interactive 3D graphics."
        },
        {
            "name": "py-pyopencl",
            "description": "Python wrapper for OpenCL."
        }
    ]
}
{
    "name": "r-cpp11",
    "aliases": [],
    "versions": [
        {
            "name": "0.2.5",
            "sha256": "6fef9306c0c3043252c987e77c99ef679b2ea46dffafae318dbeb38ad21a2e20"
        }
    ],
    "build_system": "RPackage",
    "conflicts": [],
    "variants": [],
    "homepage": "https://github.com/r-lib/cpp11",
    "maintainers": [
        "glennpj"
    ],
    "patches": [],
    "resources": [],
    "description": "cpp11: A C++11 Interface for R's C Interface Provides a header only,\nC++11 interface to R's C interface. Compared to other approaches 'cpp11'\nstrives to be safe against long jumps from the C API as well as C++\nexceptions, conform to normal R function semantics and supports\ninteraction with 'ALTREP' vectors.\n",
    "dependencies": [
        {
            "name": "r",
            "description": "R is 'GNU S', a freely available language and environment for\nstatistical computing and graphics which provides a wide variety of\nstatistical and graphical techniques: linear and nonlinear modelling,\nstatistical tests, time series analysis, classification, clustering,\netc. Please consult the R project homepage for further information."
        }
    ],
    "dependent_to": [
        {
            "name": "r-systemfonts",
            "description": "System Native Font Finding Provides system native access to the font\ncatalogue. As font handling varies between systems it is difficult to\ncorrectly locate installed fonts across different operating systems. The\n'systemfonts' package provides bindings to the native libraries on\nWindows, macOS and Linux for finding font files that can then be used\nfurther by e.g. graphic devices. The main use is intended to be from\ncompiled code but 'systemfonts' also provides access from R."
        },
        {
            "name": "r-readr",
            "description": "Read Rectangular Text Data The goal of 'readr' is to provide a fast and\nfriendly way to read rectangular data (like 'csv', 'tsv', and 'fwf'). It\nis designed to flexibly parse many types of data found in the wild,\nwhile still cleanly failing when data unexpectedly changes."
        },
        {
            "name": "r-mice",
            "description": "Multivariate Imputation by Chained Equations Multiple imputation using\nFully Conditional Specification (FCS) implemented by the MICE algorithm\nas described in Van Buuren and Groothuis-Oudshoorn (2011)\n<doi:10.18637/jss.v045.i03>. Each variable has its own imputation model.\nBuilt-in imputation models are provided for continuous data (predictive\nmean matching, normal), binary data (logistic regression), unordered\ncategorical data (polytomous logistic regression) and ordered\ncategorical data (proportional odds). MICE can also impute continuous\ntwo-level data (normal model, pan, second-level variables). Passive\nimputation can be used to maintain consistency between variables.\nVarious diagnostic plots are available to inspect the quality of the\nimputations."
        },
        {
            "name": "r-svglite",
            "description": "An 'SVG' Graphics Device A graphics device for R that produces 'Scalable\nVector Graphics'. 'svglite' is a fork of the older 'RSvgDevice' package."
        },
        {
            "name": "r-wk",
            "description": "Lightweight Well-Known Geometry Parsing Provides a minimal R and C++ API\nfor parsing well-known binary and well-known text representation of\ngeometries to and from R-native formats. Well-known binary is compact\nand fast to parse; well-known text is human-readable and is useful for\nwriting tests. These formats are only useful in R if the information\nthey contain can be accessed in R, for which high-performance functions\nare provided here."
        },
        {
            "name": "r-tidyr",
            "description": "Tidy Messy Data Tools to help to create tidy data, where each column is\na variable, each row is an observation, and each cell contains a single\nvalue. 'tidyr' contains tools for changing the shape (pivoting) and\nhierarchy (nesting and 'unnesting') of a dataset, turning deeply nested\nlists into rectangular data frames ('rectangling'), and extracting\nvalues out of string columns. It also includes tools for working with\nmissing values (both implicit and explicit)."
        }
    ]
}
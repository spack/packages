{
    "name": "py-pyfftw",
    "aliases": [],
    "versions": [
        {
            "name": "0.12.0",
            "sha256": "60988e823ca75808a26fd79d88dbae1de3699e72a293f812aa4534f8a0a58cb0"
        },
        {
            "name": "0.11.1",
            "sha256": "05ea28dede4c3aaaf5c66f56eb0f71849d0d50f5bc0f53ca0ffa69534af14926"
        },
        {
            "name": "0.10.4",
            "sha256": "739b436b7c0aeddf99a48749380260364d2dc027cf1d5f63dafb5f50068ede1a"
        }
    ],
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [],
    "homepage": "http://hgomersall.github.com/pyFFTW",
    "maintainers": [
        "adamjstewart"
    ],
    "patches": [],
    "resources": [],
    "description": "A pythonic wrapper around FFTW, the FFT library, presenting a unified\ninterface for all the supported transforms.\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "fftw",
            "description": "FFTW is a C subroutine library for computing the discrete Fourier\ntransform (DFT) in one or more dimensions, of arbitrary input size, and\nof both real and complex data (as well as of even/odd data, i.e. the\ndiscrete cosine/sine transforms or DCT/DST). We believe that FFTW, which\nis free software, should become the FFT library of choice for most\napplications."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-cython",
            "description": "The Cython compiler for writing C extensions for the Python language."
        },
        {
            "name": "py-numpy",
            "description": "NumPy is the fundamental package for scientific computing with Python.\nIt contains among other things: a powerful N-dimensional array object,\nsophisticated (broadcasting) functions, tools for integrating C/C++ and\nFortran code, and useful linear algebra, Fourier transform, and random\nnumber capabilities"
        }
    ],
    "dependent_to": [
        {
            "name": "py-ucsf-pyem",
            "description": "UCSF pyem is a collection of Python modules and command-line utilities\nfor electron microscopy of biological samples."
        },
        {
            "name": "py-pylops",
            "description": "Many useful operators, however, do not lend themselves to an explicit\nmatrix representation when used to solve large-scale problems. PyLops\noperators, on the other hand, still represent a matrix and can be\ntreated in a similar way, but do not rely on the explicit creation of a\ndense (or sparse) matrix itself. Conversely, the forward and adjoint\noperators are represented by small pieces of codes that mimic the effect\nof the matrix on a vector or another matrix."
        },
        {
            "name": "py-tomopy",
            "description": "TomoPy is an open-source Python package for tomographic data processing\nand image reconstruction."
        }
    ]
}
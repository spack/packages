{
    "name": "r-bayesplot",
    "aliases": [],
    "versions": [
        {
            "name": "1.8.0",
            "sha256": "a605f9929e681593a3ef3ca9c836e713314994aaea00f359f71cfc42d151c948"
        }
    ],
    "build_system": "RPackage",
    "conflicts": [],
    "variants": [],
    "homepage": "https://mc-stan.org/bayesplot/",
    "maintainers": [
        "glennpj"
    ],
    "patches": [],
    "resources": [],
    "description": "Plotting for Bayesian Models: Plotting functions for posterior analysis,\nMCMC diagnostics, prior and posterior predictive checks, and other\nvisualizations to support the applied Bayesian workflow advocated in\nGabry, Simpson, Vehtari, Betancourt, and Gelman (2019)\n<doi:10.1111/rssa.12378>. The package is designed not only to provide\nconvenient functionality for users, but also a common set of functions\nthat can be easily used by developers working on a variety of R packages\nfor Bayesian modeling, particularly (but not exclusively) packages\ninterfacing with 'Stan'.\n",
    "dependencies": [
        {
            "name": "r",
            "description": "R is 'GNU S', a freely available language and environment for\nstatistical computing and graphics which provides a wide variety of\nstatistical and graphical techniques: linear and nonlinear modelling,\nstatistical tests, time series analysis, classification, clustering,\netc. Please consult the R project homepage for further information."
        },
        {
            "name": "r-dplyr",
            "description": "A Grammar of Data Manipulation A fast, consistent tool for working with\ndata frame like objects, both in memory and out of memory."
        },
        {
            "name": "r-ggplot2",
            "description": "Create Elegant Data Visualisations Using the Grammar of Graphics A\nsystem for 'declaratively' creating graphics, based on \"The Grammar of\nGraphics\". You provide the data, tell 'ggplot2' how to map variables to\naesthetics, what graphical primitives to use, and it takes care of the\ndetails."
        },
        {
            "name": "r-ggridges",
            "description": "Ridgeline Plots in 'ggplot2' Ridgeline plots provide a convenient way of\nvisualizing changes in distributions over time or space. This package\nenables the creation of such plots in 'ggplot2'."
        },
        {
            "name": "r-glue",
            "description": "Interpreted String Literals An implementation of interpreted string\nliterals, inspired by Python's Literal String Interpolation\n<https://www.python.org/dev/peps/pep-0498/> and Docstrings\n<https://www.python.org/dev/peps/pep-0257/> and Julia's Triple-Quoted\nString Literals <https://docs.julialang.org/en/stable/\nmanual/strings/#triple-quoted-string-literals>."
        },
        {
            "name": "r-reshape2",
            "description": "Flexibly Reshape Data: A Reboot of the Reshape Package Flexibly\nrestructure and aggregate data using just two functions: melt and dcast\n(or acast)."
        },
        {
            "name": "r-rlang",
            "description": "Functions for Base Types and Core R and 'Tidyverse' Features A toolbox\nfor working with base types, core R features like the condition system,\nand core 'Tidyverse' features like tidy evaluation."
        },
        {
            "name": "r-tibble",
            "description": "Simple Data Frames Provides a 'tbl_df' class (the 'tibble') that\nprovides stricter checking and better formatting than the traditional\ndata frame."
        },
        {
            "name": "r-tidyselect",
            "description": "Select from a Set of Strings A backend for the selecting functions of\nthe 'tidyverse'. It makes it easy to implement select-like functions in\nyour own packages in a way that is consistent with other 'tidyverse'\ninterfaces for selection."
        }
    ],
    "dependent_to": [
        {
            "name": "r-shinystan",
            "description": "Interactive Visual and Numerical Diagnostics and Posterior Analysis for\nBayesian Models: A graphical user interface for interactive Markov chain\nMonte Carlo (MCMC) diagnostics and plots and tables helpful for\nanalyzing a posterior sample. The interface is powered by the 'Shiny'\nweb application framework from 'RStudio' and works with the output of\nMCMC programs written in any programming language (and has extended\nfunctionality for 'Stan' models fit using the 'rstan' and 'rstanarm'\npackages)."
        },
        {
            "name": "r-blavaan",
            "description": "Bayesian Latent Variable Analysis: Fit a variety of Bayesian latent\nvariable models, including confirmatory factor analysis, structural\nequation models, and latent growth curve models."
        },
        {
            "name": "r-brms",
            "description": "Bayesian Regression Models using 'Stan': Fit Bayesian generalized\n(non-)linear multivariate multilevel models using 'Stan' for full\nBayesian inference. A wide range of distributions and link functions are\nsupported, allowing users to fit - among others - linear, robust linear,\ncount data, survival, response times, ordinal, zero-inflated, hurdle,\nand even self-defined mixture models all in a multilevel context.\nFurther modeling options include non-linear and smooth terms, auto-\ncorrelation structures, censored data, meta-analytic standard errors,\nand quite a few more. In addition, all parameters of the response\ndistribution can be predicted in order to perform distributional\nregression. Prior specifications are flexible and explicitly encourage\nusers to apply prior distributions that actually reflect their beliefs.\nModel fit can easily be assessed and compared with posterior predictive\nchecks and leave-one-out cross-validation. References: Burkner (2017)\n<doi:10.18637/jss.v080.i01>; Burkner (2018) <doi:10.32614/RJ-2018-017>;\nCarpenter et al. (2017) <doi:10.18637/jss.v076.i01>."
        }
    ]
}
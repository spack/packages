{
    "name": "hipace",
    "aliases": [],
    "versions": [
        {
            "name": "develop",
            "branch": "development"
        }
    ],
    "build_system": "CMakePackage",
    "conflicts": [
        {
            "name": "+ipo",
            "spec": "^cmake@:3.8",
            "description": "+ipo is not supported by CMake < 3.9"
        }
    ],
    "variants": [
        {
            "name": "build_type",
            "default": "RelWithDebInfo",
            "description": "CMake build type"
        },
        {
            "name": "ipo",
            "default": false,
            "description": "CMake interprocedural optimization"
        },
        {
            "name": "compute",
            "default": "noacc",
            "description": "On-node, accelerated computing backend"
        },
        {
            "name": "mpi",
            "default": true,
            "description": "Enable MPI support"
        },
        {
            "name": "openpmd",
            "default": true,
            "description": "Enable openPMD I/O"
        },
        {
            "name": "precision",
            "default": "double",
            "description": "Floating point precision (single/double)"
        }
    ],
    "homepage": "https://hipace.readthedocs.io",
    "maintainers": [
        "ax3l",
        "MaxThevenet",
        "SeverinDiederichs"
    ],
    "patches": [],
    "resources": [],
    "description": "Highly efficient Plasma Accelerator Emulation, quasistatic particle-in-\ncell code\n",
    "dependencies": [
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "cuda",
            "description": "CUDA is a parallel computing platform and programming model invented by\nNVIDIA. It enables dramatic increases in computing performance by\nharnessing the power of the graphics processing unit (GPU). Note: This\npackage does not currently install the drivers necessary to run CUDA.\nThese will need to be installed manually. See:\nhttps://docs.nvidia.com/cuda/ for details."
        },
        {
            "name": "fftw",
            "description": "FFTW is a C subroutine library for computing the discrete Fourier\ntransform (DFT) in one or more dimensions, of arbitrary input size, and\nof both real and complex data (as well as of even/odd data, i.e. the\ndiscrete cosine/sine transforms or DCT/DST). We believe that FFTW, which\nis free software, should become the FFT library of choice for most\napplications."
        },
        {
            "name": "mpi",
            "description": "MVAPICH2-GDR is an optimized version of the MVAPICH2 MPI library for\nGPU-enabled HPC and Deep Learning Applications. MVAPICH2-GDR is not\ninstallable from source and is only available through a binary mirror.\nIf you do not find the binary you're looking for, send us an email at\nmvapich@cse.ohio-state.edu. The binary mirror url is:\nhttp://mvapich.cse.ohio-state.edu/download/mvapich/spack-\nmirror/mvapich2-gdr/"
        },
        {
            "name": "openpmd-api",
            "description": "C++ & Python API for Scientific I/O"
        },
        {
            "name": "pkgconfig",
            "description": "pkg-config is a helper tool used when compiling applications and\nlibraries"
        },
        {
            "name": "rocfft",
            "description": "Radeon Open Compute FFT library"
        },
        {
            "name": "rocprim",
            "description": "Radeon Open Compute Parallel Primitives Library"
        },
        {
            "name": "rocrand",
            "description": "The rocRAND project provides functions that generate pseudo-random and\nquasi-random numbers."
        },
        {
            "name": "llvm-openmp",
            "description": "The OpenMP subproject of LLVM contains the components required to build\nan executable OpenMP program that are outside the compiler itself."
        }
    ],
    "dependent_to": []
}
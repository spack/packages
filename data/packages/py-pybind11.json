{
    "name": "py-pybind11",
    "aliases": [],
    "versions": [
        {
            "name": "master",
            "branch": "master"
        },
        {
            "name": "2.7.0",
            "sha256": "6cd73b3d0bf3daf415b5f9b87ca8817cc2e2b64c275d65f9500250f9fee1677e"
        },
        {
            "name": "2.6.2",
            "sha256": "8ff2fff22df038f5cd02cea8af56622bc67f5b64534f1b83b9f133b8366acff2"
        },
        {
            "name": "2.6.1",
            "sha256": "cdbe326d357f18b83d10322ba202d69f11b2f49e2d87ade0dc2be0c5c34f8e2a"
        },
        {
            "name": "2.5.0",
            "sha256": "97504db65640570f32d3fdf701c25a340c8643037c3b69aec469c10c93dc8504",
            "preferred": true
        },
        {
            "name": "2.4.3",
            "sha256": "1eed57bc6863190e35637290f97a20c81cfe4d9090ac0a24f3bbf08f265eb71d"
        },
        {
            "name": "2.3.0",
            "sha256": "0f34838f2c8024a6765168227ba587b3687729ebf03dc912f88ff75c7aa9cfe8"
        },
        {
            "name": "2.2.4",
            "sha256": "b69e83658513215b8d1443544d0549b7d231b9f201f6fc787a2b2218b408181e"
        },
        {
            "name": "2.2.3",
            "sha256": "3a3b7b651afab1c5ba557f4c37d785a522b8030dfc765da26adc2ecd1de940ea"
        },
        {
            "name": "2.2.2",
            "sha256": "b639a2b2cbf1c467849660801c4665ffc1a4d0a9e153ae1996ed6f21c492064e"
        },
        {
            "name": "2.2.1",
            "sha256": "f8bd1509578b2a1e7407d52e6ee8afe64268909a1bbda620ca407318598927e7"
        },
        {
            "name": "2.2.0",
            "sha256": "1b0fda17c650c493f5862902e90f426df6751da8c0b58c05983ab009951ed769"
        },
        {
            "name": "2.1.1",
            "sha256": "f2c6874f1ea5b4ad4ffffe352413f7d2cd1a49f9050940805c2a082348621540"
        },
        {
            "name": "2.1.0",
            "sha256": "2860f2b8d0c9f65f0698289a161385f59d099b7ead1bf64e8993c486f2b93ee0"
        }
    ],
    "build_system": "CMakePackage",
    "conflicts": [
        {
            "name": "+ipo",
            "spec": "^cmake@:3.8",
            "description": "+ipo is not supported by CMake < 3.9"
        },
        {
            "name": "%gcc@:4.7",
            "spec": "",
            "description": "None"
        },
        {
            "name": "%clang@:3.2",
            "spec": "",
            "description": "None"
        },
        {
            "name": "%intel@:16",
            "spec": "",
            "description": "None"
        }
    ],
    "variants": [
        {
            "name": "build_type",
            "default": "RelWithDebInfo",
            "description": "CMake build type"
        },
        {
            "name": "ipo",
            "default": false,
            "description": "CMake interprocedural optimization"
        }
    ],
    "homepage": "https://pybind11.readthedocs.io",
    "maintainers": [
        "ax3l"
    ],
    "patches": [],
    "resources": [],
    "description": "pybind11 -- Seamless operability between C++11 and Python. pybind11 is a\nlightweight header-only library that exposes C++ types in Python and\nvice versa, mainly to create Python bindings of existing C++ code. Its\ngoals and syntax are similar to the excellent Boost.Python library by\nDavid Abrahams: to minimize boilerplate code in traditional extension\nmodules by inferring type information using compile-time introspection.\n",
    "dependencies": [
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-pytest",
            "description": "pytest: simple powerful testing with Python."
        },
        {
            "name": "python",
            "description": "The Python programming language."
        }
    ],
    "dependent_to": [
        {
            "name": "py-scipy",
            "description": "SciPy (pronounced \"Sigh Pie\") is a Scientific Library for Python. It\nprovides many user-friendly and efficient numerical routines such as\nroutines for numerical integration and optimization."
        },
        {
            "name": "py-torch-nvidia-apex",
            "description": "A PyTorch Extension: Tools for easy mixed precision and distributed\ntraining in Pytorch"
        },
        {
            "name": "py-projectq",
            "description": "ProjectQ is an open-source software framework for quantum computing\nstarted at ETH Zurich. It allows users to implement their quantum\nprograms in Python using a powerful and intuitive syntax. ProjectQ can\nthen translate these programs to any type of back-end, be it a simulator\nrun on a classical computer of an actual quantum chip."
        },
        {
            "name": "openimageio",
            "description": "OpenImageIO is a library for reading and writing images, and a bunch of\nrelated classes, utilities, and applications."
        },
        {
            "name": "akantu",
            "description": "Akantu means a little element in Kinyarwanda, a Bantu language. From\nnow on it is also an opensource object-oriented Finite Element library\nwhich has the ambition to be generic and efficient."
        },
        {
            "name": "py-awkward1",
            "description": "DEPRECATED! This package was renamed to py-awkward."
        },
        {
            "name": "arbor",
            "description": "Arbor is a high-performance library for computational neuroscience\nsimulations."
        },
        {
            "name": "simsipm",
            "description": "SimSiPM is a simple and easy to use C++ library providing a set of\nobject-oriented tools with all the functionality needed to describe and\nsimulate Silicon PhotonMultipliers (SiPM) sensors."
        },
        {
            "name": "py-awkward",
            "description": "Manipulate JSON-like data with NumPy-like idioms."
        },
        {
            "name": "openpmd-api",
            "description": "C++ & Python API for Scientific I/O"
        },
        {
            "name": "py-spdlog",
            "description": "The py-spdlog package provides a Python wrapper to the C++ spdlog\nlibrary."
        },
        {
            "name": "migraphx",
            "description": "AMD's graph optimization engine."
        },
        {
            "name": "py-fenics-basix",
            "description": "Python basis evaluation library for Next generation FEniCS problem\nsolving environment"
        },
        {
            "name": "py-pykokkos-base",
            "description": "Minimal set of bindings for Kokkos interoperability with Python\n(initialize, finalize, View, DynRankView, Kokkos-tools)"
        },
        {
            "name": "xtensor-python",
            "description": "Python bindings for the xtensor C++ multi-dimensional array library"
        },
        {
            "name": "fenics",
            "description": "FEniCS is organized as a collection of interoperable components that\ntogether form the FEniCS Project. These components include the problem-\nsolving environment DOLFIN, the form compiler FFC, the finite element\ntabulator FIAT, the just-in-time compiler Instant / Dijitso, the code\ngeneration interface UFC, the form language UFL and a range of\nadditional components."
        },
        {
            "name": "sirius",
            "description": "Domain specific library for electronic structure calculations"
        },
        {
            "name": "xcfun",
            "description": "Exchange-Correlation functionals with arbitrary order derivatives."
        },
        {
            "name": "py-torch",
            "description": "Tensors and Dynamic neural networks in Python with strong GPU\nacceleration."
        },
        {
            "name": "py-fenics-dolfinx",
            "description": "Python interface library to Next generation FEniCS problem solving\nenvironment"
        },
        {
            "name": "xyce",
            "description": "Xyce (rhymes with 'spice') is an open source, SPICE-compatible, high-\nperformance analog circuit simulator, capable of solving extremely large\ncircuit problems by supporting large-scale parallel computing platforms.\nXyce also supports serial execution on all common desktop platforms, and\nsmall-scale parallel runs on Unix-like systems. In addition to analog\nelectronic simulation, Xyce has also been used to investigate more\ngeneral network systems, such as neural networks and power grids."
        },
        {
            "name": "py-pyopencl",
            "description": "Python wrapper for OpenCL."
        }
    ]
}
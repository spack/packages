{
    "name": "py-regex",
    "aliases": [],
    "versions": [
        {
            "name": "2020.11.13",
            "sha256": "83d6b356e116ca119db8e7c6fc2983289d87b27b3fac238cfe5dca529d884562"
        },
        {
            "name": "2019.11.1",
            "sha256": "720e34a539a76a1fedcebe4397290604cc2bdf6f81eca44adb9fb2ea071c0c69"
        },
        {
            "name": "2019.02.07",
            "sha256": "4a1a1d963f462c13722b34ef1f82c4707091b0a3fb9b5fd79b6670c38b734095"
        },
        {
            "name": "2018.01.10",
            "sha256": "139678fc013b75e486e580c39b4c52d085ed7362e400960f8be1711a414f16b5"
        },
        {
            "name": "2017.07.11",
            "sha256": "dbda8bdc31a1c85445f1a1b29d04abda46e5c690f8f933a9cc3a85a358969616"
        }
    ],
    "latest_version": "2020.11.13",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [],
    "homepage": "https://pypi.org/project/regex/",
    "maintainers": [
        "adamjstewart"
    ],
    "patches": [],
    "resources": [],
    "description": "Alternative regular expression module, to replace re.\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        }
    ],
    "dependent_to": [
        {
            "name": "py-black",
            "description": "Black is the uncompromising Python code formatter. By using it, you\nagree to cede control over minutiae of hand-formatting. In return, Black\ngives you speed, determinism, and freedom from pycodestyle nagging about\nformatting."
        },
        {
            "name": "py-umi-tools",
            "description": "Tools for handling Unique Molecular Identifiers in NGS data sets"
        },
        {
            "name": "py-radical-utils",
            "description": "RADICAL-Utils contains shared code and tools for various RADICAL-\nCybertools packages."
        },
        {
            "name": "py-tatsu",
            "description": "TatSu (the successor to Grako) is a tool that takes grammars in a\nvariation of EBNF as input, and outputs memoizing (Packrat) PEG parsers\nin Python."
        },
        {
            "name": "py-sacremoses",
            "description": "LGPL MosesTokenizer in Python."
        },
        {
            "name": "py-nltk",
            "description": "The Natural Language Toolkit (NLTK) is a Python package for natural\nlanguage processing."
        },
        {
            "name": "py-transformers",
            "description": "State-of-the-art Natural Language Processing for TensorFlow 2.0 and\nPyTorch"
        },
        {
            "name": "py-dateparser",
            "description": "dateparser -- python parser for human readable dates"
        },
        {
            "name": "py-awesome-slugify",
            "description": "Python flexible slugify function"
        }
    ]
}
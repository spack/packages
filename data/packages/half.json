{
    "name": "half",
    "aliases": [],
    "versions": [
        {
            "name": "2.1.0",
            "sha256": "ad1788afe0300fa2b02b0d1df128d857f021f92ccf7c8bddd07812685fa07a25"
        },
        {
            "name": "1.12.0",
            "sha256": "cdd70d3bf3fe091b688e7ab3f48471c881a197d2c186c95cca8bf156961fb41c"
        }
    ],
    "build_system": "Package",
    "conflicts": [],
    "variants": [],
    "homepage": "https://sourceforge.net/projects/half/",
    "maintainers": [
        "bvanessen"
    ],
    "patches": [
        {
            "owner": "builtin.half",
            "sha256": "ca0992b59f8cdada8f121a783c7dd0c56241f34d28e810a93fa0a607d9b7437d",
            "level": 1,
            "working_dir": ".",
            "relative_path": "f16fix.patch",
            "version": "@2.1.0"
        }
    ],
    "resources": [],
    "description": "This is a C++ header-only library to provide an IEEE-754 conformant\nhalf-precision floating point type along with corresponding arithmetic\noperators, type conversions and common mathematical functions. It aims\nfor both efficiency and ease of use, trying to accurately mimic the\nbehaviour of the builtin floating point types at the best performance\npossible. It automatically uses and provides C++11 features when\npossible, but stays completely C++98-compatible when neccessary.\n",
    "dependencies": [],
    "dependent_to": [
        {
            "name": "lbann",
            "description": "LBANN: Livermore Big Artificial Neural Network Toolkit. A distributed\nmemory, HPC-optimized, model and data parallel training toolkit for deep\nneural networks."
        },
        {
            "name": "migraphx",
            "description": "AMD's graph optimization engine."
        },
        {
            "name": "miopen-opencl",
            "description": "AMD's library for high performance machine learning primitives."
        },
        {
            "name": "miopen-hip",
            "description": "AMD's library for high performance machine learning primitives."
        },
        {
            "name": "dihydrogen",
            "description": "DiHydrogen is the second version of the Hydrogen fork of the well-known\ndistributed linear algebra library, Elemental. DiHydrogen aims to be a\nbasic distributed multilinear algebra interface with a particular\nemphasis on the needs of the distributed machine learning effort, LBANN."
        },
        {
            "name": "hydrogen",
            "description": "Hydrogen: Distributed-memory dense and sparse-direct linear algebra and\noptimization library. Based on the Elemental library."
        }
    ]
}
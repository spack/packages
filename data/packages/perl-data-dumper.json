{
    "name": "perl-data-dumper",
    "aliases": [],
    "versions": [
        {
            "name": "2.173",
            "sha256": "697608b39330988e519131be667ff47168aaaaf99f06bd2095d5b46ad05d76fa"
        }
    ],
    "build_system": "PerlPackage",
    "conflicts": [],
    "variants": [],
    "homepage": "http://search.cpan.org/dist/Data-Dumper/Dumper.pm",
    "maintainers": [],
    "patches": [],
    "resources": [],
    "description": "Stringified perl data structures, suitable for both printing and eval\n",
    "dependencies": [
        {
            "name": "perl",
            "description": "Perl 5 is a highly capable, feature-rich programming language with over\n27 years of development."
        }
    ],
    "dependent_to": [
        {
            "name": "aomp",
            "description": "llvm openmp compiler from AMD."
        },
        {
            "name": "rocm-openmp-extras",
            "description": "OpenMP support for ROCm LLVM."
        },
        {
            "name": "sollve",
            "description": "The SOLLVE Project aims at scaling OpenMP by leveraging LLVM for\nexascale performance and portability of applications. This package\nprovides a collection of Clang/LLVM compilers and an OpenMP runtime\nlibrary."
        },
        {
            "name": "llvm",
            "description": "The LLVM Project is a collection of modular and reusable compiler and\ntoolchain technologies. Despite its name, LLVM has little to do with\ntraditional virtual machines, though it does provide helpful libraries\nthat can be used to build them. The name \"LLVM\" itself is not an\nacronym; it is the full name of the project."
        },
        {
            "name": "llvm-amdgpu",
            "description": "Toolkit for the construction of highly optimized compilers, optimizers,\nand run-time environments."
        },
        {
            "name": "llvm-doe",
            "description": "This package provides a collection of the experimental LLVM projects\ndone by the US DOE research and development teams."
        },
        {
            "name": "dakota",
            "description": "The Dakota toolkit provides a flexible, extensible interface between\nanalysis codes and iterative systems analysis methods. Dakota contains\nalgorithms for: - optimization with gradient and non gradient-based\nmethods; - uncertainty quantification with sampling, reliability,\nstochastic - expansion, and epistemic methods; - parameter estimation\nwith nonlinear least squares methods; - sensitivity/variance analysis\nwith design of experiments and - parameter study methods. These\ncapabilities may be used on their own or as components within advanced\nstrategies such as hybrid optimization, surrogate-based optimization,\nmixed integer nonlinear programming, or optimization under uncertainty."
        }
    ]
}
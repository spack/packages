{
    "name": "rocfft",
    "aliases": [],
    "versions": [
        {
            "name": "4.2.0",
            "sha256": "db29c9067f0cfa98bddd3574f6aa7200cfc790cc6da352d19e4696c3f3982163"
        },
        {
            "name": "4.1.0",
            "sha256": "df23fcb05aae72557461ae3687be7e3b8b78be4132daf1aa9dc07339f4eba0cc"
        },
        {
            "name": "4.0.0",
            "sha256": "d1d10d270f822e0bab64307313ef163ba449b058bf3352962bbb26d4f4db89d0"
        },
        {
            "name": "3.10.0",
            "sha256": "9f57226aac7d9a0515e14a5a5b08a85e727de72b3f9c2177daf56749ac2c76ae"
        },
        {
            "name": "3.9.0",
            "sha256": "9c9c0b7f09bab17250f5101d1605e7a61218eae828a3eb8fe048d607181294ce"
        },
        {
            "name": "3.8.0",
            "sha256": "ed23009796e2ee7c43dcc24527f2d6b1d7a73dceac06c30384460098d2fe1556"
        },
        {
            "name": "3.7.0",
            "sha256": "94462e4bd19c2c749fcf6903adbee66d4d3bd345c0246861ff8f40b9d08a6ead"
        },
        {
            "name": "3.5.0",
            "sha256": "629f02cfecb7de5ad2517b6a8aac6ed4de60d3a9c620413c4d9db46081ac2c88"
        }
    ],
    "build_system": "CMakePackage",
    "conflicts": [
        {
            "name": "+ipo",
            "spec": "^cmake@:3.8",
            "description": "+ipo is not supported by CMake < 3.9"
        }
    ],
    "variants": [
        {
            "name": "build_type",
            "default": "Release",
            "description": "CMake build type"
        },
        {
            "name": "ipo",
            "default": false,
            "description": "CMake interprocedural optimization"
        },
        {
            "name": "amdgpu_target",
            "default": "gfx701",
            "description": ""
        },
        {
            "name": "amdgpu_target_sram_ecc",
            "default": "none",
            "description": ""
        }
    ],
    "homepage": "https://github.com/ROCmSoftwarePlatform/rocFFT/",
    "maintainers": [
        "srekolam",
        "arjun-raj-kuppala",
        "haampie"
    ],
    "patches": [],
    "resources": [],
    "description": "Radeon Open Compute FFT library\n",
    "dependencies": [
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "hip",
            "description": "HIP is a C++ Runtime API and Kernel Language that allows developers to\ncreate portable applications for AMD and NVIDIA GPUs from single source\ncode."
        },
        {
            "name": "rocm-cmake",
            "description": "ROCM cmake modules provides cmake modules for common build tasks needed\nfor the ROCM software stack"
        }
    ],
    "dependent_to": [
        {
            "name": "spfft",
            "description": "Sparse 3D FFT library with MPI, OpenMP, CUDA and ROCm support."
        },
        {
            "name": "heffte",
            "description": "Highly Efficient FFT for Exascale"
        },
        {
            "name": "gearshifft",
            "description": "Benchmark Suite for Heterogenuous FFT Implementations"
        },
        {
            "name": "hipace",
            "description": "Highly efficient Plasma Accelerator Emulation, quasistatic particle-in-\ncell code"
        },
        {
            "name": "hipfft",
            "description": "hipFFT is an FFT marshalling library. Currently, hipFFT supports either\nrocFFT or cuFFT as backends.hipFFT exports an interface that does not\nrequire the client to change, regardless of the chosen backend. It sits\nbetween the application and the backend FFT library, marshalling inputs\ninto the backend and results back to the application."
        },
        {
            "name": "warpx",
            "description": "WarpX is an advanced electromagnetic Particle-In-Cell code. It supports\nmany features including Perfectly-Matched Layers (PML) and mesh\nrefinement. In addition, WarpX is a highly-parallel and highly-optimized\ncode and features hybrid OpenMP/MPI parallelization, advanced\nvectorization techniques and load balancing capabilities. For WarpX'\nPython bindings and PICMI input support, see the 'py-warpx' package."
        }
    ]
}
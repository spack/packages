{
    "name": "eq-r",
    "aliases": [],
    "versions": [
        {
            "name": "master",
            "branch": "master"
        },
        {
            "name": "1.0",
            "sha256": "68047cb0edf088eaaefc5e36cefda9818292e5c832593e10a1dd9c73c27661b6"
        }
    ],
    "build_system": "AutotoolsPackage",
    "conflicts": [],
    "variants": [],
    "homepage": "http://emews.org",
    "maintainers": [],
    "patches": [],
    "resources": [],
    "description": " EMEWS Queues for R (EQ/R) Installs EQ/R.\n",
    "dependencies": [
        {
            "name": "autoconf",
            "description": "Autoconf -- system configuration part of autotools"
        },
        {
            "name": "automake",
            "description": "Automake -- make file builder part of autotools"
        },
        {
            "name": "libtool",
            "description": "libtool -- library building part of autotools."
        },
        {
            "name": "m4",
            "description": "GNU M4 is an implementation of the traditional Unix macro processor."
        },
        {
            "name": "mpi",
            "description": "MVAPICH2-GDR is an optimized version of the MVAPICH2 MPI library for\nGPU-enabled HPC and Deep Learning Applications. MVAPICH2-GDR is not\ninstallable from source and is only available through a binary mirror.\nIf you do not find the binary you're looking for, send us an email at\nmvapich@cse.ohio-state.edu. The binary mirror url is:\nhttp://mvapich.cse.ohio-state.edu/download/mvapich/spack-\nmirror/mvapich2-gdr/"
        },
        {
            "name": "r-rinside",
            "description": "C++ Classes to Embed R in C++ (and C) Applications C++ classes to embed\nR in C++ applications The 'RInside' packages makes it easier to have \"R\ninside\" your C++ application by providing a C++ wrapperclass providing\nthe R interpreter. As R itself is embedded into your application, a\nshared library build of R is required. This works on Linux, OS X and\neven on Windows provided you use the same tools used to build R itself.\nNumerous examples are provided in the eight subdirectories of the\nexamples/ directory of the installed package: standard, mpi (for\nparallel computing) qt (showing how to embed 'RInside' inside a Qt GUI\napplication), wt (showing how to build a \"web-application\" using the Wt\ntoolkit), armadillo (for 'RInside' use with 'RcppArmadillo') and eigen\n(for 'RInside' use with 'RcppEigen'). The example use GNUmakefile(s)\nwith GNU extensions, so a GNU make is required (and will use the\nGNUmakefile automatically). Doxygen-generated documentation of the C++\nclasses is available at the 'RInside' website as well."
        },
        {
            "name": "r-rcpp",
            "description": "Seamless R and C++ Integration The 'Rcpp' package provides R functions\nas well as C++ classes which; offer a seamless integration of R and C++.\nMany R data types and objects can be; mapped back and forth to C++\nequivalents which facilitates both writing of new; code as well as\neasier integration of third-party libraries. Documentation; about 'Rcpp'\nis provided by several vignettes included in this package, via the;\n'Rcpp Gallery' site at <https://gallery.rcpp.org>, the paper by\nEddelbuettel and; Francois (2011, <doi:10.18637/jss.v040.i08>), the book\nby Eddelbuettel (2013,; <doi:10.1007/978-1-4614-6868-4>) and the paper\nby Eddelbuettel and Balamuta (2018,;\n<doi:10.1080/00031305.2017.1375990>); see 'citation(\"Rcpp\")' for\ndetails."
        },
        {
            "name": "r",
            "description": "R is 'GNU S', a freely available language and environment for\nstatistical computing and graphics which provides a wide variety of\nstatistical and graphical techniques: linear and nonlinear modelling,\nstatistical tests, time series analysis, classification, clustering,\netc. Please consult the R project homepage for further information."
        },
        {
            "name": "tcl",
            "description": "Tcl (Tool Command Language) is a very powerful but easy to learn dynamic\nprogramming language, suitable for a very wide range of uses, including\nweb and desktop applications, networking, administration, testing and\nmany more. Open source and business-friendly, Tcl is a mature yet\nevolving language that is truly cross platform, easily deployed and\nhighly extensible."
        },
        {
            "name": "swig",
            "description": "SWIG is an interface compiler that connects programs written in C and\nC++ with scripting languages such as Perl, Python, Ruby, and Tcl. It\nworks by taking the declarations found in C/C++ header files and using\nthem to generate the wrapper code that scripting languages need to\naccess the underlying C/C++ code. In addition, SWIG provides a variety\nof customization features that let you tailor the wrapping process to\nsuit your application."
        }
    ],
    "dependent_to": []
}
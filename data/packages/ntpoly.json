{
    "name": "ntpoly",
    "aliases": [],
    "versions": [
        {
            "name": "2.3.1",
            "sha256": "af8c7690321607fbdee9671b9cb3acbed945148014e0541435858cf82bfd887e"
        }
    ],
    "latest_version": "2.3.1",
    "build_system": "CMakePackage",
    "conflicts": [
        {
            "name": "+ipo",
            "spec": "^cmake@:3.8",
            "description": "+ipo is not supported by CMake < 3.9"
        }
    ],
    "variants": [
        {
            "name": "build_type",
            "default": "RelWithDebInfo",
            "description": "CMake build type"
        },
        {
            "name": "ipo",
            "default": false,
            "description": "CMake interprocedural optimization"
        }
    ],
    "homepage": "https://william-dawson.github.io/NTPoly/",
    "maintainers": [],
    "patches": [],
    "resources": [],
    "description": "NTPoly - parallel library for computing matrix functions. NTPoly is a\nlibrary for computing the functions of sparse, hermitian matrices based\non polynomial expansions. For sufficiently sparse matrices, most of the\nmatrix functions in NTPoly can be computed in linear time.\n",
    "dependencies": [
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "blas",
            "description": "Intel Math Kernel Library."
        },
        {
            "name": "mpi",
            "description": "MPItrampoline: A forwarding MPI implementation that can use any other\nMPI implementation via an MPI ABI."
        }
    ],
    "dependent_to": [
        {
            "name": "elsi",
            "description": "ELSI provides a unified interface for electronic structure codes to a\nvariety of eigenvalue solvers."
        },
        {
            "name": "bigdft-chess",
            "description": "BigDFT-CheSS: A module for performing Fermi Operator Expansions via\nChebyshev Polynomials."
        }
    ]
}
{
    "name": "py-uncertainties",
    "aliases": [],
    "versions": [
        {
            "name": "3.1.4",
            "sha256": "63548a94899f2a51eeb89b640f6ac311f481a8016b37dce157186e44619bc968"
        }
    ],
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "optional",
            "default": false,
            "description": "Enable extra features involving numpy"
        },
        {
            "name": "docs",
            "default": false,
            "description": "Build with documentation"
        }
    ],
    "homepage": "https://uncertainties-python-package.readthedocs.io/en/latest/",
    "maintainers": [
        "adamjstewart"
    ],
    "patches": [],
    "resources": [],
    "description": "Transparent calculations with uncertainties on the quantities involved\n(aka error propagation); fast calculation of derivatives\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-future",
            "description": "Clean single-source support for Python 3 and 2"
        },
        {
            "name": "py-numpy",
            "description": "NumPy is the fundamental package for scientific computing with Python.\nIt contains among other things: a powerful N-dimensional array object,\nsophisticated (broadcasting) functions, tools for integrating C/C++ and\nFortran code, and useful linear algebra, Fourier transform, and random\nnumber capabilities"
        },
        {
            "name": "py-sphinx",
            "description": "Sphinx Documentation Generator."
        }
    ],
    "dependent_to": [
        {
            "name": "py-lmfit",
            "description": "Least-Squares Minimization with Bounds and Constraints"
        },
        {
            "name": "py-openmc",
            "description": "The OpenMC project aims to provide a fully-featured Monte Carlo particle\ntransport code based on modern methods. It is a constructive solid\ngeometry, continuous-energy transport code that uses ACE format cross\nsections. The project started under the Computational Reactor Physics\nGroup at MIT."
        }
    ]
}
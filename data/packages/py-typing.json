{
    "name": "py-typing",
    "aliases": [],
    "versions": [
        {
            "name": "3.7.4.3",
            "sha256": "1187fb9c82fd670d10aa07bbb6cfcfe4bdda42d6fab8d5134f04e8c4d0b71cc9"
        },
        {
            "name": "3.7.4.1",
            "sha256": "91dfe6f3f706ee8cc32d38edbbf304e9b7583fb37108fef38229617f8b3eba23"
        },
        {
            "name": "3.6.6",
            "sha256": "4027c5f6127a6267a435201981ba156de91ad0d1d98e9ddc2aa173453453492d"
        },
        {
            "name": "3.6.4",
            "sha256": "d400a9344254803a2368533e4533a4200d21eb7b6b729c173bc38201a74db3f2"
        },
        {
            "name": "3.6.1",
            "sha256": "c36dec260238e7464213dcd50d4b5ef63a507972f5780652e835d0228d0edace"
        }
    ],
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [],
    "homepage": "https://docs.python.org/3/library/typing.html",
    "maintainers": [
        "adamjstewart"
    ],
    "patches": [],
    "resources": [],
    "description": "This is a backport of the standard library typing module to Python\nversions older than 3.6.\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        }
    ],
    "dependent_to": [
        {
            "name": "py-azure-keyvault-certificates",
            "description": "Microsoft Azure Key Vault Certificates Client Library for Python."
        },
        {
            "name": "py-chalice",
            "description": "Python Serverless Microframework for AWS."
        },
        {
            "name": "py-aiohttp-cors",
            "description": "aiohttp_cors library implements Cross Origin Resource Sharing (CORS)\nsupport for aiohttp asyncio-powered asynchronous HTTP server."
        },
        {
            "name": "py-chainer",
            "description": "Chainer is a Python-based deep learning framework aiming at\nflexibility. It provides automatic differentiation APIs based on the\ndefine-by-run approach (a.k.a. dynamic computational graphs) as well as\nobject-oriented high-level APIs to build and train neural networks. It\nalso supports CUDA/cuDNN using CuPy for high performance training and\ninference."
        },
        {
            "name": "py-antlr4-python3-runtime",
            "description": "This package provides runtime libraries required to use parsers\ngenerated for the Python3 language by version 4 of ANTLR (ANother Tool\nfor Language Recognition)."
        },
        {
            "name": "py-tenacity",
            "description": "Retrying library for Python"
        },
        {
            "name": "py-flake8",
            "description": "Flake8 is a wrapper around PyFlakes, pep8 and Ned Batchelder's McCabe\nscript."
        },
        {
            "name": "py-tomlkit",
            "description": "Style preserving TOML library"
        },
        {
            "name": "py-sphinx",
            "description": "Sphinx Documentation Generator."
        },
        {
            "name": "py-azure-core",
            "description": "Microsoft Azure Core Library for Python."
        },
        {
            "name": "py-promise",
            "description": "This is a implementation of Promises in Python. It is a super set of\nPromises/A+ designed to have readable, performant code and to provide\njust the extensions that are absolutely necessary for using promises in\nPython."
        },
        {
            "name": "py-aiodns",
            "description": "Simple DNS resolver for asyncio.It provides a simple way for doing\nasynchronous DNS resolutions using pycares."
        },
        {
            "name": "py-msrest",
            "description": "AutoRest swagger generator Python client runtime."
        },
        {
            "name": "py-mypy-extensions",
            "description": "Experimental type system extensions for programs checked with the mypy\ntypechecker."
        },
        {
            "name": "py-mikado",
            "description": "Mikado is a lightweight Python3 pipeline whose purpose is to facilitate\nthe identification of expressed loci from RNA-Seq data * and to select\nthe best models in each locus."
        },
        {
            "name": "py-azure-keyvault-keys",
            "description": "Microsoft Azure Key Vault Keys Client Library for Python."
        },
        {
            "name": "py-azure-identity",
            "description": "Microsoft Azure Identity Library for Python."
        },
        {
            "name": "py-typing-extensions",
            "description": "The typing_extensions module contains both backports of these changes as\nwell as experimental types that will eventually be added to the typing\nmodule, such as Protocol (see PEP 544 for details about protocols and\nstatic duck typing)."
        },
        {
            "name": "py-azure-mgmt-core",
            "description": "Microsoft Azure Management Core Library for Python."
        },
        {
            "name": "py-importlib-resources",
            "description": "Read resources from Python packages"
        },
        {
            "name": "py-onnx",
            "description": "Open Neural Network Exchange (ONNX) is an open ecosystem that empowers\nAI developers to choose the right tools as their project evolves. ONNX\nprovides an open source format for AI models, both deep learning and\ntraditional ML. It defines an extensible computation graph model, as\nwell as definitions of built-in operators and standard data types.\nCurrently we focus on the capabilities needed for inferencing (scoring)."
        },
        {
            "name": "py-particle",
            "description": "Particle provides a pythonic interface to the Particle Data Group (PDG)\nparticle data tables and particle identification codes, with extended\nparticle information and extra goodies."
        },
        {
            "name": "py-torch",
            "description": "Tensors and Dynamic neural networks in Python with strong GPU\nacceleration."
        },
        {
            "name": "py-apache-beam",
            "description": "Apache Beam is a unified programming model for Batch and Streaming."
        },
        {
            "name": "py-azure-cosmos",
            "description": "Microsoft Azure Cosmos Client Library for Python."
        },
        {
            "name": "py-azure-keyvault-secrets",
            "description": "Microsoft Azure Key Vault Secrets Client Library for Python."
        }
    ]
}
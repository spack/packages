{
    "name": "portage",
    "aliases": [],
    "versions": [
        {
            "name": "3.0.0",
            "sha256": "7a5a21ffbc35fa54a5136d937cfda6f836c7496ff2b5adf54deb4107501333da"
        },
        {
            "name": "master",
            "branch": "master",
            "submodules": true
        }
    ],
    "build_system": "CMakePackage",
    "conflicts": [
        {
            "name": "+ipo",
            "spec": "^cmake@:3.8",
            "description": "+ipo is not supported by CMake < 3.9"
        },
        {
            "name": "+jali ~mpi",
            "spec": "",
            "description": "None"
        },
        {
            "name": "+thrust +cuda",
            "spec": "",
            "description": "None"
        },
        {
            "name": "+thrust +kokkos",
            "spec": "",
            "description": "None"
        }
    ],
    "variants": [
        {
            "name": "build_type",
            "default": "RelWithDebInfo",
            "description": "CMake build type"
        },
        {
            "name": "ipo",
            "default": false,
            "description": "CMake interprocedural optimization"
        },
        {
            "name": "mpi",
            "default": true,
            "description": "Support MPI"
        },
        {
            "name": "tangram",
            "default": false,
            "description": "Use Tangram interface reconstruction package"
        },
        {
            "name": "jali",
            "default": false,
            "description": "Include support for Jali mesh framework"
        },
        {
            "name": "flecsisp",
            "default": false,
            "description": "Include support for FleCSI mesh framework"
        },
        {
            "name": "thrust",
            "default": false,
            "description": "Enable on-node parallelism using NVidia Thrust library"
        },
        {
            "name": "kokkos",
            "default": false,
            "description": "Enable on-node or device parallelism with Kokkos"
        },
        {
            "name": "openmp",
            "default": false,
            "description": "Enable on-node parallelism using OpenMP"
        },
        {
            "name": "cuda",
            "default": false,
            "description": "Enable GPU parallelism using CUDA"
        }
    ],
    "homepage": "http://portage.lanl.gov/",
    "maintainers": [
        "raovgarimella"
    ],
    "patches": [],
    "resources": [],
    "description": "Portage is a framework that computational physics applications can use\nto build a highly customized, hybrid parallel (MPI+X) conservative\nremapping library for transfer of field data between meshes.\n",
    "dependencies": [
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "mpi",
            "description": "MVAPICH2-GDR is an optimized version of the MVAPICH2 MPI library for\nGPU-enabled HPC and Deep Learning Applications. MVAPICH2-GDR is not\ninstallable from source and is only available through a binary mirror.\nIf you do not find the binary you're looking for, send us an email at\nmvapich@cse.ohio-state.edu. The binary mirror url is:\nhttp://mvapich.cse.ohio-state.edu/download/mvapich/spack-\nmirror/mvapich2-gdr/"
        },
        {
            "name": "tangram",
            "description": "Tangram is an material interface reconstruction package used in\nmultimaterial ALE codes and multi-material remapping\n(https://github.com/laristra/portage)"
        },
        {
            "name": "wonton",
            "description": "Wonton is a support package for the Portage\n(https://github.com/laristra/portage) and Tangram\n(https://github.com/laristra/tangram) libraries. It contains some\nmesh/state classes, wrappers for other mesh/state libraries and some\nutilities required by Portage and Tangram."
        }
    ],
    "dependent_to": []
}
{
    "name": "py-h5py",
    "aliases": [],
    "versions": [
        {
            "name": "master",
            "branch": "master"
        },
        {
            "name": "3.3.0",
            "sha256": "e0dac887d779929778b3cfd13309a939359cc9e74756fc09af7c527a82797186"
        },
        {
            "name": "3.2.1",
            "sha256": "89474be911bfcdb34cbf0d98b8ec48b578c27a89fdb1ae4ee7513f1ef8d9249e"
        },
        {
            "name": "3.2.0",
            "sha256": "4271c1a4b7d87aa76fe96d016368beb05a6c389d64882d58036964ce7d2d03c1"
        },
        {
            "name": "3.1.0",
            "sha256": "1e2516f190652beedcb8c7acfa1c6fa92d99b42331cbef5e5c7ec2d65b0fc3c2"
        },
        {
            "name": "3.0.0",
            "sha256": "7d3803be1b530c68c2955faba726dc0f591079b68941a0c0269b5384a42ab519"
        },
        {
            "name": "2.10.0",
            "sha256": "84412798925dc870ffd7107f045d7659e60f5d46d1c70c700375248bf6bf512d"
        },
        {
            "name": "2.9.0",
            "sha256": "9d41ca62daf36d6b6515ab8765e4c8c4388ee18e2a665701fef2b41563821002"
        },
        {
            "name": "2.8.0",
            "sha256": "e626c65a8587921ebc7fb8d31a49addfdd0b9a9aa96315ea484c09803337b955"
        },
        {
            "name": "2.7.1",
            "sha256": "180a688311e826ff6ae6d3bda9b5c292b90b28787525ddfcb10a29d5ddcae2cc"
        },
        {
            "name": "2.7.0",
            "sha256": "79254312df2e6154c4928f5e3b22f7a2847b6e5ffb05ddc33e37b16e76d36310"
        },
        {
            "name": "2.6.0",
            "sha256": "b2afc35430d5e4c3435c996e4f4ea2aba1ea5610e2d2f46c9cae9f785e33c435"
        },
        {
            "name": "2.5.0",
            "sha256": "9833df8a679e108b561670b245bcf9f3a827b10ccb3a5fa1341523852cfac2f6"
        },
        {
            "name": "2.4.0",
            "sha256": "faaeadf4b8ca14c054b7568842e0d12690de7d5d68af4ecce5d7b8fc104d8e60"
        }
    ],
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "mpi",
            "default": true,
            "description": "Build with MPI support"
        }
    ],
    "homepage": "http://www.h5py.org/",
    "maintainers": [
        "bryanherman",
        "takluyver"
    ],
    "patches": [],
    "resources": [],
    "description": "The h5py package provides both a high- and low-level interface to the\nHDF5 library from Python.\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-cython",
            "description": "The Cython compiler for writing C extensions for the Python language."
        },
        {
            "name": "py-pkgconfig",
            "description": "Interface Python with pkg-config."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "py-cached-property",
            "description": "A decorator for caching properties in classes."
        },
        {
            "name": "py-numpy",
            "description": "NumPy is the fundamental package for scientific computing with Python.\nIt contains among other things: a powerful N-dimensional array object,\nsophisticated (broadcasting) functions, tools for integrating C/C++ and\nFortran code, and useful linear algebra, Fourier transform, and random\nnumber capabilities"
        },
        {
            "name": "py-six",
            "description": "Python 2 and 3 compatibility utilities."
        },
        {
            "name": "hdf5",
            "description": "HDF5 is a data model, library, and file format for storing and managing\ndata. It supports an unlimited variety of datatypes, and is designed for\nflexible and efficient I/O and for high volume and complex data."
        },
        {
            "name": "mpi",
            "description": "MVAPICH2-GDR is an optimized version of the MVAPICH2 MPI library for\nGPU-enabled HPC and Deep Learning Applications. MVAPICH2-GDR is not\ninstallable from source and is only available through a binary mirror.\nIf you do not find the binary you're looking for, send us an email at\nmvapich@cse.ohio-state.edu. The binary mirror url is:\nhttp://mvapich.cse.ohio-state.edu/download/mvapich/spack-\nmirror/mvapich2-gdr/"
        },
        {
            "name": "py-mpi4py",
            "description": "This package provides Python bindings for the Message Passing Interface\n(MPI) standard. It is implemented on top of the MPI-1/MPI-2\nspecification and exposes an API which grounds on the standard MPI-2 C++\nbindings."
        }
    ],
    "dependent_to": [
        {
            "name": "mlperf-deepcam",
            "description": "PyTorch implementation for the climate segmentation benchmark, based on\nthe Exascale Deep Learning for Climate Analytics"
        },
        {
            "name": "py-pyscf",
            "description": "PySCF is a collection of electronic structure programs powered by\nPython."
        },
        {
            "name": "py-biom-format",
            "description": "The BIOM file format (canonically pronounced biome) is designed to be a\ngeneral-use format for representing biological sample by observation\ncontingency tables."
        },
        {
            "name": "tskit",
            "description": "The tskit library provides the underlying functionality used to load,\nexamine, and manipulate tree sequences"
        },
        {
            "name": "py-h5netcdf",
            "description": "A Python interface for the netCDF4 file-format that reads and writes\nlocal or remote HDF5 files directly via h5py or h5pyd, without relying\non the Unidata netCDF library."
        },
        {
            "name": "py-keras",
            "description": "Deep Learning library for Python. Convnets, recurrent neural networks,\nand more. Runs on Theano or TensorFlow."
        },
        {
            "name": "py-pycbc",
            "description": "PyCBC is a software package used to explore astrophysical sources of\ngravitational waves. It contains algorithms to analyze gravitational-\nwave data from the LIGO and Virgo detectors, detect coalescing compact\nbinaries, and measure the astrophysical parameters of detected sources.\nPyCBC was used in the first direct detection of gravitational waves and\nis used in the flagship analysis of LIGO and Virgo data."
        },
        {
            "name": "py-dxchange",
            "description": "DXchange provides an interface with tomoPy and raw tomographic data\ncollected at different synchrotron facilities."
        },
        {
            "name": "py-tensorflow",
            "description": "TensorFlow is an Open Source Software Library for Machine Intelligence"
        },
        {
            "name": "py-tomopy",
            "description": "TomoPy is an open-source Python package for tomographic data processing\nand image reconstruction."
        },
        {
            "name": "py-picrust2",
            "description": "PICRUSt2 is a software for predicting functional abundances based only\non marker gene sequences."
        },
        {
            "name": "py-openpmd-validator",
            "description": "Validator and Example Scripts for the openPMD markup. openPMD is an open\nstandard for particle-mesh data files."
        },
        {
            "name": "py-yt",
            "description": "Volumetric Data Analysis yt is a python package for analyzing and\nvisualizing volumetric, multi-resolution data from astrophysical\nsimulations, radio telescopes, and a burgeoning interdisciplinary\ncommunity."
        },
        {
            "name": "candle-benchmarks",
            "description": "ECP-CANDLE Benchmarks"
        },
        {
            "name": "py-pymc3",
            "description": "PyMC3 is a Python package for Bayesian statistical modeling and\nProbabilistic Machine Learning focusing on advanced Markov chain Monte\nCarlo (MCMC) and variational inference (VI) algorithms. Its flexibility\nand extensibility make it applicable to a large suite of problems."
        },
        {
            "name": "py-dxfile",
            "description": "Scientific Data Exchange [A1] is a set of guidelines for storing\nscientific data and metadata in a Hierarchical Data Format 5 [B6] file."
        },
        {
            "name": "simulationio",
            "description": "SimulationIO: Efficient and convenient I/O for large PDE simulations"
        },
        {
            "name": "py-h5sh",
            "description": "Shell-like environment for HDF5."
        },
        {
            "name": "py-torch-geometric",
            "description": "PyTorch Geometric (PyG) is a geometric deep learning extension library\nfor PyTorch. It consists of various methods for deep learning on graphs\nand other irregular structures, also known as geometric deep learning,\nfrom a variety of published papers. In addition, it consists of an easy-\nto-use mini-batch loader for many small and single giant graphs, multi\ngpu-support, a large number of common benchmark datasets (based on\nsimple interfaces to create your own), and helpful transforms, both for\nlearning on arbitrary graphs as well as on 3D meshes or point clouds."
        },
        {
            "name": "py-h5glance",
            "description": "H5Glance lets you explore HDF5 files in the terminal or an HTML\ninterface."
        },
        {
            "name": "py-pyheadtail",
            "description": "CERN PyHEADTAIL numerical n-body simulation code for simulating macro-\nparticle beam dynamics with collective effects."
        },
        {
            "name": "py-torchmeta",
            "description": "A collection of extensions and data-loaders for few-shot learning &\nmeta-learning in PyTorch. Torchmeta contains popular meta-learning\nbenchmarks, fully compatible with both torchvision and PyTorch's\nDataLoader."
        },
        {
            "name": "py-ont-fast5-api",
            "description": "This project provides classes and utility functions for working with\nread fast5 files. It provides an abstraction layer between the\nunderlying h5py library and the various concepts central to read fast5\nfiles, such as \"reads\", \"analyses\", \"analysis summaries\", and \"analysis\ndatasets\". Ideally all interaction with a read fast5 file should be\npossible via this API, without having to directly invoke the h5py\nlibrary."
        },
        {
            "name": "py-astropy",
            "description": "The Astropy Project is a community effort to develop a single core\npackage for Astronomy in Python and foster interoperability between\nPython astronomy packages."
        },
        {
            "name": "sirius",
            "description": "Domain specific library for electronic structure calculations"
        },
        {
            "name": "repeatmasker",
            "description": "RepeatMasker is a program that screens DNA sequences for interspersed\nrepeats and low complexity DNA sequences."
        },
        {
            "name": "py-openmc",
            "description": "The OpenMC project aims to provide a fully-featured Monte Carlo particle\ntransport code based on modern methods. It is a constructive solid\ngeometry, continuous-energy transport code that uses ACE format cross\nsections. The project started under the Computational Reactor Physics\nGroup at MIT."
        },
        {
            "name": "py-horovod",
            "description": "Horovod is a distributed deep learning training framework for\nTensorFlow, Keras, PyTorch, and Apache MXNet."
        },
        {
            "name": "py-wradlib",
            "description": "wradlib is designed to assist you in the most important steps of\nprocessing weather radar data. These may include: reading common data\nformats, georeferencing, converting reflectivity to rainfall intensity,\nidentifying and correcting typical error sources (such as clutter or\nattenuation) and visualising the data."
        },
        {
            "name": "cosmoflow-benchmark",
            "description": "This is a an implementation of the CosmoFlow 3D convolutional neural\nnetwork for benchmarking. It is written in TensorFlow with the Keras API\nand uses Horovod for distributed training."
        },
        {
            "name": "ont-albacore",
            "description": "Albacore is a software project that provides an entry point to the\nOxford Nanopore basecalling algorithms. It can be run from the command\nline on Windows and multiple Linux platforms. A selection of\nconfiguration files allow basecalling DNA libraries made with our\ncurrent range of sequencing kits and Flow Cells."
        },
        {
            "name": "py-guidata",
            "description": "Automatic graphical user interfaces generation for easy dataset editing\nand display"
        },
        {
            "name": "py-cinemasci",
            "description": "A set of python tools for reading, writing and viewing Cinema databases"
        }
    ]
}
{
    "name": "r-methylumi",
    "aliases": [],
    "versions": [
        {
            "name": "2.40.1",
            "commit": "211039225ca6fca9af75b8266f656161912ce10f"
        },
        {
            "name": "2.36.0",
            "commit": "5fb0b609f9c9181ac99f902745958774e5489606"
        },
        {
            "name": "2.32.0",
            "commit": "e2a29c1b214c0d43c7325d176f9ce41dcf8e2f9d"
        }
    ],
    "latest_version": "2.40.1",
    "build_system": "RPackage",
    "conflicts": [],
    "variants": [],
    "homepage": "https://bioconductor.org/packages/methylumi",
    "maintainers": [
        "glennpj"
    ],
    "patches": [],
    "resources": [],
    "description": "Handle Illumina methylation data. This package provides classes for\nholding and manipulating Illumina methylation data. Based on eSet, it\ncan contain MIAME information, sample information, feature information,\nand multiple matrices of data. An \"intelligent\" import function,\nmethylumiR can read the Illumina text files and create a MethyLumiSet.\nmethylumIDAT can directly read raw IDAT files from HumanMethylation27\nand HumanMethylation450 microarrays. Normalization, background\ncorrection, and quality control features for GoldenGate, Infinium, and\nInfinium HD arrays are also included.\n",
    "dependencies": [
        {
            "name": "r",
            "description": "R is 'GNU S', a freely available language and environment for\nstatistical computing and graphics which provides a wide variety of\nstatistical and graphical techniques: linear and nonlinear modelling,\nstatistical tests, time series analysis, classification, clustering,\netc. Please consult the R project homepage for further information."
        },
        {
            "name": "r-biobase",
            "description": "Biobase: Base functions for Bioconductor. Functions that are needed by\nmany other packages or which replace R functions."
        },
        {
            "name": "r-scales",
            "description": "Scale Functions for Visualization. Graphical scales map data to\naesthetics, and provide methods for automatically determining breaks and\nlabels for axes and legends."
        },
        {
            "name": "r-reshape2",
            "description": "Flexibly Reshape Data: A Reboot of the Reshape Package. Flexibly\nrestructure and aggregate data using just two functions: melt and dcast\n(or acast)."
        },
        {
            "name": "r-ggplot2",
            "description": "Create Elegant Data Visualisations Using the Grammar of Graphics. A\nsystem for 'declaratively' creating graphics, based on \"The Grammar of\nGraphics\". You provide the data, tell 'ggplot2' how to map variables to\naesthetics, what graphical primitives to use, and it takes care of the\ndetails."
        },
        {
            "name": "r-matrixstats",
            "description": "Functions that Apply to Rows and Columns of Matrices (and to Vectors).\nHigh-performing functions operating on rows and columns of matrices,\ne.g. col / rowMedians(), col / rowRanks(), and col / rowSds(). Functions\noptimized per data type and for subsetted calculations such that both\nmemory usage and processing time is minimized. There are also optimized\nvector-based methods, e.g. binMeans(), madDiff() and weightedMedian()."
        },
        {
            "name": "r-fdb-infiniummethylation-hg19",
            "description": "Annotation package for Illumina Infinium DNA methylation probes.\nCompiled HumanMethylation27 and HumanMethylation450 annotations."
        },
        {
            "name": "r-minfi",
            "description": "Analyze Illumina Infinium DNA methylation arrays. Tools to analyze &\nvisualize Illumina Infinium methylation arrays."
        },
        {
            "name": "r-biocgenerics",
            "description": "S4 generic functions used in Bioconductor. The package defines S4\ngeneric functions used in Bioconductor."
        },
        {
            "name": "r-s4vectors",
            "description": "Foundation of vector-like and list-like containers in Bioconductor. The\nS4Vectors package defines the Vector and List virtual classes and a set\nof generic functions that extend the semantic of ordinary vectors and\nlists in R. Package developers can easily implement vector-like or list-\nlike objects as concrete subclasses of Vector or List. In addition, a\nfew low-level concrete subclasses of general interest (e.g. DataFrame,\nRle, and Hits) are implemented in the S4Vectors package itself (many\nmore are implemented in the IRanges package and in other Bioconductor\ninfrastructure packages)."
        },
        {
            "name": "r-iranges",
            "description": "Foundation of integer range manipulation in Bioconductor. Provides\nefficient low-level and highly reusable S4 classes for storing,\nmanipulating and aggregating over annotated ranges of integers.\nImplements an algebra of range operations, including efficient\nalgorithms for finding overlaps and nearest neighbors. Defines efficient\nlist-like classes for storing, transforming and aggregating large\ngrouped data, i.e., collections of atomic vectors and DataFrames."
        },
        {
            "name": "r-genomeinfodb",
            "description": "Utilities for manipulating chromosome names, including modifying them to\nfollow a particular naming style. Contains data and functions that\ndefine and allow translation between different chromosome sequence\nnaming conventions (e.g., \"chr1\" versus \"1\"), including a function that\nattempts to place sequence names in their natural, rather than\nlexicographic, order."
        },
        {
            "name": "r-genomicranges",
            "description": "Representation and manipulation of genomic intervals. The ability to\nefficiently represent and manipulate genomic annotations and alignments\nis playing a central role when it comes to analyzing high-throughput\nsequencing data (a.k.a. NGS data). The GenomicRanges package defines\ngeneral purpose containers for storing and manipulating genomic\nintervals and variables defined along a genome. More specialized\ncontainers for representing and manipulating short alignments against a\nreference genome, or a matrix-like summarization of an experiment, are\ndefined in the GenomicAlignments and SummarizedExperiment packages,\nrespectively. Both packages build on top of the GenomicRanges\ninfrastructure."
        },
        {
            "name": "r-summarizedexperiment",
            "description": "SummarizedExperiment container. The SummarizedExperiment container\ncontains one or more assays, each represented by a matrix-like object of\nnumeric or other mode. The rows typically represent genomic ranges of\ninterest and the columns represent samples."
        },
        {
            "name": "r-lattice",
            "description": "Trellis Graphics for R. A powerful and elegant high-level data\nvisualization system inspired by Trellis graphics, with an emphasis on\nmultivariate data. Lattice is sufficient for typical graphics needs, and\nis also flexible enough to handle most nonstandard requirements. See\n?Lattice for an introduction."
        },
        {
            "name": "r-annotate",
            "description": "Annotation for microarrays. Using R enviroments for annotation."
        },
        {
            "name": "r-genefilter",
            "description": "Methods for filtering genes from high-throughput experiments. Some basic\nfunctions for filtering genes."
        },
        {
            "name": "r-annotationdbi",
            "description": "Manipulation of SQLite-based annotations in Bioconductor. Implements a\nuser-friendly interface for querying SQLite-based annotation data\npackages."
        },
        {
            "name": "r-illuminaio",
            "description": "Parsing Illumina Microarray Output Files. Tools for parsing Illumina's\nmicroarray output files, including IDAT."
        },
        {
            "name": "r-genomicfeatures",
            "description": "Conveniently import and query gene models. A set of tools and methods\nfor making and manipulating transcript centric annotations. With these\ntools the user can easily download the genomic locations of the\ntranscripts, exons and cds of a given organism, from either the UCSC\nGenome Browser or a BioMart database (more sources will be supported in\nthe future). This information is then stored in a local database that\nkeeps track of the relationship between transcripts, exons, cds and\ngenes. Flexible methods are provided for extracting the desired features\nin a convenient format."
        }
    ],
    "dependent_to": [
        {
            "name": "r-missmethyl",
            "description": "Analysing Illumina HumanMethylation BeadChip Data. Normalisation,\ntesting for differential variability and differential methylation and\ngene set testing for data from Illumina's Infinium HumanMethylation\narrays. The normalisation procedure is subset-quantile within-array\nnormalisation (SWAN), which allows Infinium I and II type probes on a\nsingle array to be normalised together. The test for differential\nvariability is based on an empirical Bayes version of Levene's test.\nDifferential methylation testing is performed using RUV, which can\nadjust for systematic errors of unknown origin in high-dimensional data\nby using negative control probes. Gene ontology analysis is performed by\ntaking into account the number of probes per gene on the array, as well\nas taking into account multi-gene associated probes."
        },
        {
            "name": "r-lumi",
            "description": "BeadArray Specific Methods for Illumina Methylation and Expression\nMicroarrays. The lumi package provides an integrated solution for the\nIllumina microarray data analysis. It includes functions of Illumina\nBeadStudio (GenomeStudio) data input, quality control, BeadArray-\nspecific variance stabilization, normalization and gene annotation at\nthe probe level. It also includes the functions of processing Illumina\nmethylation microarrays, especially Illumina Infinium methylation\nmicroarrays."
        },
        {
            "name": "r-watermelon",
            "description": "Illumina 450 methylation array normalization and metrics. 15 flavours of\nbetas and three performance metrics, with methods for objects produced\nby methylumi and minfi packages."
        }
    ]
}
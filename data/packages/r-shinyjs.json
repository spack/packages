{
    "name": "r-shinyjs",
    "aliases": [],
    "versions": [
        {
            "name": "2.0.0",
            "sha256": "c2cdd9fab41f6b46bb41b288cd9b3fb3a7fe9627b664e3a58a0cb5dd4c19f8ff"
        }
    ],
    "build_system": "RPackage",
    "conflicts": [],
    "variants": [],
    "homepage": "https://deanattali.com/shinyjs/",
    "maintainers": [
        "glennpj"
    ],
    "patches": [],
    "resources": [],
    "description": "Easily Improve the User Experience of Your Shiny Apps in Seconds Perform\ncommon useful JavaScript operations in Shiny apps that will greatly\nimprove your apps without having to know any JavaScript. Examples\ninclude: hiding an element, disabling an input, resetting an input back\nto its original value, delaying code execution by a few seconds, and\nmany more useful functions for both the end user and the developer.\n'shinyjs' can also be used to easily call your own custom JavaScript\nfunctions from R.\n",
    "dependencies": [
        {
            "name": "r",
            "description": "R is 'GNU S', a freely available language and environment for\nstatistical computing and graphics which provides a wide variety of\nstatistical and graphical techniques: linear and nonlinear modelling,\nstatistical tests, time series analysis, classification, clustering,\netc. Please consult the R project homepage for further information."
        },
        {
            "name": "r-digest",
            "description": "Create Compact Hash Digests of R Objects Implementation of a function\n'digest()' for the creation of hash digests of arbitrary R objects\n(using the md5, sha-1, sha-256, crc32, xxhash and murmurhash algorithms)\npermitting easy comparison of R language objects, as well as a function\n'hmac()' to create hash-based message authentication code. The md5\nalgorithm by Ron Rivest is specified in RFC 1321, the sha-1 and sha-256\nalgorithms are specified in FIPS-180-1 and FIPS-180-2, and the crc32\nalgorithm is described in\nftp://ftp.rocksoft.com/cliens/rocksoft/papers/crc_v3.txt. For md5,\nsha-1, sha-256 and aes, this package uses small standalone\nimplementations that were provided by Christophe Devine. For crc32, code\nfrom the zlib library is used. For sha-512, an implementation by Aaron\nD. Gifford is used. For xxhash, the implementation by Yann Collet is\nused. For murmurhash, an implementation by Shane Day is used. Please\nnote that this package is not meant to be deployed for cryptographic\npurposes for which more comprehensive (and widely tested) libraries such\nas OpenSSL should be used."
        },
        {
            "name": "r-htmltools",
            "description": "Tools for HTML Tools for HTML generation and output."
        },
        {
            "name": "r-jsonlite",
            "description": "A Simple and Robust JSON Parser and Generator for R A fast JSON parser\nand generator optimized for statistical data and the web. Started out as\na fork of 'RJSONIO', but has been completely rewritten in recent\nversions. The package offers flexible, robust, high performance tools\nfor working with JSON in R and is particularly powerful for building\npipelines and interacting with a web API. The implementation is based on\nthe mapping described in the vignette (Ooms, 2014). In addition to\nconverting JSON data from/to R objects, 'jsonlite' contains functions to\nstream, validate, and prettify JSON data. The unit tests included with\nthe package verify that all edge cases are encoded and decoded\nconsistently for use with dynamic data in systems and applications."
        },
        {
            "name": "r-shiny",
            "description": "Web Application Framework for R Makes it incredibly easy to build\ninteractive web applications with R. Automatic \"reactive\" binding\nbetween inputs and outputs and extensive pre-built widgets make it\npossible to build beautiful, responsive, and powerful applications with\nminimal effort."
        },
        {
            "name": "pandoc",
            "description": "If you need to convert files from one markup format into another, pandoc\nis your swiss-army knife."
        }
    ],
    "dependent_to": [
        {
            "name": "r-shinystan",
            "description": "Interactive Visual and Numerical Diagnostics and Posterior Analysis for\nBayesian Models: A graphical user interface for interactive Markov chain\nMonte Carlo (MCMC) diagnostics and plots and tables helpful for\nanalyzing a posterior sample. The interface is powered by the 'Shiny'\nweb application framework from 'RStudio' and works with the output of\nMCMC programs written in any programming language (and has extended\nfunctionality for 'Stan' models fit using the 'rstan' and 'rstanarm'\npackages)."
        },
        {
            "name": "r-colourpicker",
            "description": "A Colour Picker Tool for Shiny and for Selecting Colours in Plots: A\ncolour picker that can be used as an input in 'Shiny' apps or Rmarkdown\ndocuments. The colour picker supports alpha opacity, custom colour\npalettes, and many more options. A Plot Colour Helper tool is available\nas an 'RStudio' Addin, which helps you pick colours to use in your\nplots. A more generic Colour Picker 'RStudio' Addin is also provided to\nlet you select colours to use in your R code."
        }
    ]
}
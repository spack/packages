{
    "name": "xcfun",
    "aliases": [],
    "versions": [
        {
            "name": "2.1.0",
            "sha256": "64aac8c933cc129ce6326f3827e342abfd10b94ea4a302aaca9f10d342ad7656"
        },
        {
            "name": "2.0.2",
            "sha256": "b79a71861a9e1d0e33c1be89b34f6f052d430cd495a7df982c407ad0140c1dcd"
        },
        {
            "name": "2.0.1",
            "sha256": "719383c3fffdd5da5b005f56ffd97457b0b2fb48317e955263ef5384d53ddfca"
        },
        {
            "name": "2.0.0",
            "sha256": "34398e935c522d0b55e1803fd6116e7cd40677d1add8894ef08362361705cf25"
        }
    ],
    "latest_version": "2.1.0",
    "build_system": "CMakePackage",
    "conflicts": [
        {
            "name": "+ipo",
            "spec": "^cmake@:3.8",
            "description": "+ipo is not supported by CMake < 3.9"
        }
    ],
    "variants": [
        {
            "name": "build_type",
            "default": "RelWithDebInfo",
            "description": "CMake build type"
        },
        {
            "name": "ipo",
            "default": false,
            "description": "CMake interprocedural optimization"
        }
    ],
    "homepage": "https://github.com/dftlibs/xcfun",
    "maintainers": [
        "robertodr",
        "bast"
    ],
    "patches": [],
    "resources": [],
    "description": "Exchange-Correlation functionals with arbitrary order derivatives.\n",
    "dependencies": [
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-pybind11",
            "description": "pybind11 -- Seamless operability between C++11 and Python. pybind11 is a\nlightweight header-only library that exposes C++ types in Python and\nvice versa, mainly to create Python bindings of existing C++ code. Its\ngoals and syntax are similar to the excellent Boost.Python library by\nDavid Abrahams: to minimize boilerplate code in traditional extension\nmodules by inferring type information using compile-time introspection."
        },
        {
            "name": "py-numpy",
            "description": "NumPy is the fundamental package for scientific computing with Python.\nIt contains among other things: a powerful N-dimensional array object,\nsophisticated (broadcasting) functions, tools for integrating C/C++ and\nFortran code, and useful linear algebra, Fourier transform, and random\nnumber capabilities"
        }
    ],
    "dependent_to": [
        {
            "name": "mrchem",
            "description": "MRChem is a numerical real-space code for molecular electronic structure\ncalculations within the self-consistent field (SCF) approximations of\nquantum chemistry: Hartree-Fock and Density Functional Theory."
        },
        {
            "name": "py-pyscf",
            "description": "PySCF is a collection of electronic structure programs powered by\nPython."
        }
    ]
}
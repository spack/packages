{
    "name": "cp2k",
    "aliases": [],
    "versions": [
        {
            "name": "9.1",
            "sha256": "fedb4c684a98ad857cd49b69a3ae51a73f85a9c36e9cb63e3b02320c74454ce6"
        },
        {
            "name": "8.2",
            "sha256": "2e24768720efed1a5a4a58e83e2aca502cd8b95544c21695eb0de71ed652f20a"
        },
        {
            "name": "8.1",
            "sha256": "7f37aead120730234a60b2989d0547ae5e5498d93b1e9b5eb548c041ee8e7772"
        },
        {
            "name": "7.1",
            "sha256": "ccd711a09a426145440e666310dd01cc5772ab103493c4ae6a3470898cd0addb"
        },
        {
            "name": "6.1",
            "sha256": "af803558e0a6b9e9d9ce8a3ab955ba32bacd179922455424e061c82c9fefa34b"
        },
        {
            "name": "5.1",
            "sha256": "e23613b593354fa82e0b8410e17d94c607a0b8c6d9b5d843528403ab09904412"
        },
        {
            "name": "4.1",
            "sha256": "4a3e4a101d8a35ebd80a9e9ecb02697fb8256364f1eccdbe4e5a85d31fe21343"
        },
        {
            "name": "3.0",
            "sha256": "1acfacef643141045b7cbade7006f9b7538476d861eeecd9658c9e468dc61151"
        },
        {
            "name": "master",
            "branch": "master",
            "submodules": "True"
        }
    ],
    "latest_version": "9.1",
    "build_system": "MakefilePackage",
    "conflicts": [
        {
            "name": "%gcc@:4",
            "spec": "+cuda ^cuda@11.0:~allow-unsupported-compilers",
            "description": "None"
        },
        {
            "name": "%gcc@:5",
            "spec": "+cuda ^cuda@11.4:~allow-unsupported-compilers",
            "description": "None"
        },
        {
            "name": "%gcc@10:",
            "spec": "+cuda ^cuda@:11.0~allow-unsupported-compilers",
            "description": "None"
        },
        {
            "name": "%gcc@11:",
            "spec": "+cuda ^cuda@:11.4.0~allow-unsupported-compilers",
            "description": "None"
        },
        {
            "name": "%gcc@12:",
            "spec": "+cuda ^cuda@:11.7~allow-unsupported-compilers",
            "description": "None"
        },
        {
            "name": "%clang@12:",
            "spec": "+cuda ^cuda@:11.4.0~allow-unsupported-compilers",
            "description": "None"
        },
        {
            "name": "%clang@13:",
            "spec": "+cuda ^cuda@:11.5~allow-unsupported-compilers",
            "description": "None"
        },
        {
            "name": "%clang@14:",
            "spec": "+cuda ^cuda@:11.7~allow-unsupported-compilers",
            "description": "None"
        },
        {
            "name": "%gcc@10",
            "spec": "+cuda ^cuda@:11.4.0~allow-unsupported-compilers",
            "description": "None"
        },
        {
            "name": "%gcc@5:",
            "spec": "+cuda ^cuda@:7.5~allow-unsupported-compilers arch=darwin-None-x86_64:",
            "description": "None"
        },
        {
            "name": "%gcc@6:",
            "spec": "+cuda ^cuda@:8~allow-unsupported-compilers arch=darwin-None-x86_64:",
            "description": "None"
        },
        {
            "name": "%gcc@6:",
            "spec": "+cuda ^cuda@:9~allow-unsupported-compilers arch=darwin-None-ppc64le:",
            "description": "None"
        },
        {
            "name": "%gcc@7:",
            "spec": "+cuda ^cuda@:9.1~allow-unsupported-compilers arch=darwin-None-x86_64:",
            "description": "None"
        },
        {
            "name": "%gcc@8:",
            "spec": "+cuda ^cuda@:10.0.130~allow-unsupported-compilers arch=darwin-None-x86_64:",
            "description": "None"
        },
        {
            "name": "%gcc@8:",
            "spec": "+cuda ^cuda@:10.0.130~allow-unsupported-compilers arch=darwin-None-ppc64le:",
            "description": "None"
        },
        {
            "name": "%gcc@9:",
            "spec": "+cuda ^cuda@:10.2.89~allow-unsupported-compilers arch=darwin-None-x86_64:",
            "description": "None"
        },
        {
            "name": "%gcc@9:",
            "spec": "+cuda ^cuda@:10.1.243~allow-unsupported-compilers arch=darwin-None-ppc64le:",
            "description": "None"
        },
        {
            "name": "%pgi@:14.8",
            "spec": "+cuda ^cuda@:7.0.27~allow-unsupported-compilers arch=darwin-None-x86_64:",
            "description": "None"
        },
        {
            "name": "%pgi@:15.3,15.5:",
            "spec": "+cuda ^cuda@7.5~allow-unsupported-compilers arch=darwin-None-x86_64:",
            "description": "None"
        },
        {
            "name": "%pgi@:16.2,16.0:16.3",
            "spec": "+cuda ^cuda@8~allow-unsupported-compilers arch=darwin-None-x86_64:",
            "description": "None"
        },
        {
            "name": "%pgi@:15,18:",
            "spec": "+cuda ^cuda@9.0:9.1~allow-unsupported-compilers arch=darwin-None-x86_64:",
            "description": "None"
        },
        {
            "name": "%pgi@:16,19:",
            "spec": "+cuda ^cuda@9.2.88:10~allow-unsupported-compilers arch=darwin-None-x86_64:",
            "description": "None"
        },
        {
            "name": "%pgi@:17,20:",
            "spec": "+cuda ^cuda@10.1.105:10.2.89~allow-unsupported-compilers arch=darwin-None-x86_64:",
            "description": "None"
        },
        {
            "name": "%pgi@:17,21:",
            "spec": "+cuda ^cuda@11.0.2:11.1.0~allow-unsupported-compilers arch=darwin-None-x86_64:",
            "description": "None"
        },
        {
            "name": "%clang@:3.4",
            "spec": "+cuda ^cuda@:7.5~allow-unsupported-compilers arch=darwin-None-x86_64:",
            "description": "None"
        },
        {
            "name": "%clang@:3.7,4:",
            "spec": "+cuda ^cuda@8.0:9.0~allow-unsupported-compilers arch=darwin-None-x86_64:",
            "description": "None"
        },
        {
            "name": "%clang@:3.7,4.1:",
            "spec": "+cuda ^cuda@9.1~allow-unsupported-compilers arch=darwin-None-x86_64:",
            "description": "None"
        },
        {
            "name": "%clang@:3.7,5.1:",
            "spec": "+cuda ^cuda@9.2~allow-unsupported-compilers arch=darwin-None-x86_64:",
            "description": "None"
        },
        {
            "name": "%clang@:3.7,6.1:",
            "spec": "+cuda ^cuda@10.0.130~allow-unsupported-compilers arch=darwin-None-x86_64:",
            "description": "None"
        },
        {
            "name": "%clang@:3.7,7.1:",
            "spec": "+cuda ^cuda@10.1.105~allow-unsupported-compilers arch=darwin-None-x86_64:",
            "description": "None"
        },
        {
            "name": "%clang@:3.7,8.1:",
            "spec": "+cuda ^cuda@10.1.105:10.1.243~allow-unsupported-compilers arch=darwin-None-x86_64:",
            "description": "None"
        },
        {
            "name": "%clang@:3.2,9:",
            "spec": "+cuda ^cuda@10.2.89~allow-unsupported-compilers arch=darwin-None-x86_64:",
            "description": "None"
        },
        {
            "name": "%clang@:5",
            "spec": "+cuda ^cuda@11.0.2:~allow-unsupported-compilers arch=darwin-None-x86_64:",
            "description": "None"
        },
        {
            "name": "%clang@:5",
            "spec": "+cuda ^cuda@11.0.2:~allow-unsupported-compilers arch=darwin-None-ppc64le:",
            "description": "None"
        },
        {
            "name": "%clang@10:",
            "spec": "+cuda ^cuda@:11.0.3~allow-unsupported-compilers arch=darwin-None-x86_64:",
            "description": "None"
        },
        {
            "name": "%clang@10:",
            "spec": "+cuda ^cuda@:11.0.2~allow-unsupported-compilers arch=darwin-None-ppc64le:",
            "description": "None"
        },
        {
            "name": "%clang@11:",
            "spec": "+cuda ^cuda@:11.1.0~allow-unsupported-compilers arch=darwin-None-x86_64:",
            "description": "None"
        },
        {
            "name": "%clang@11:",
            "spec": "+cuda ^cuda@:11.1.0~allow-unsupported-compilers arch=darwin-None-ppc64le:",
            "description": "None"
        },
        {
            "name": "%pgi",
            "spec": "+cuda ^cuda@:8~allow-unsupported-compilers arch=darwin-None-ppc64le:",
            "description": "None"
        },
        {
            "name": "%pgi@:16",
            "spec": "+cuda ^cuda@:9.1.185~allow-unsupported-compilers arch=darwin-None-ppc64le:",
            "description": "None"
        },
        {
            "name": "%pgi@:17",
            "spec": "+cuda ^cuda@:10~allow-unsupported-compilers arch=darwin-None-ppc64le:",
            "description": "None"
        },
        {
            "name": "%clang@4:",
            "spec": "+cuda ^cuda@:9.0.176~allow-unsupported-compilers arch=darwin-None-ppc64le:",
            "description": "None"
        },
        {
            "name": "%clang@5:",
            "spec": "+cuda ^cuda@:9.1~allow-unsupported-compilers arch=darwin-None-ppc64le:",
            "description": "None"
        },
        {
            "name": "%clang@6:",
            "spec": "+cuda ^cuda@:9.2~allow-unsupported-compilers arch=darwin-None-ppc64le:",
            "description": "None"
        },
        {
            "name": "%clang@7:",
            "spec": "+cuda ^cuda@10.0.130~allow-unsupported-compilers arch=darwin-None-ppc64le:",
            "description": "None"
        },
        {
            "name": "%clang@7.1:",
            "spec": "+cuda ^cuda@:10.1.105~allow-unsupported-compilers arch=darwin-None-ppc64le:",
            "description": "None"
        },
        {
            "name": "%clang@8.1:",
            "spec": "+cuda ^cuda@:10.2.89~allow-unsupported-compilers arch=darwin-None-ppc64le:",
            "description": "None"
        },
        {
            "name": "%intel@:11.0",
            "spec": "+cuda ^cuda@:3.1~allow-unsupported-compilers",
            "description": "None"
        },
        {
            "name": "%intel@:12.0",
            "spec": "+cuda ^cuda@5.5:~allow-unsupported-compilers",
            "description": "None"
        },
        {
            "name": "%intel@:13.0",
            "spec": "+cuda ^cuda@6.0:~allow-unsupported-compilers",
            "description": "None"
        },
        {
            "name": "%intel@:13.2",
            "spec": "+cuda ^cuda@6.5:~allow-unsupported-compilers",
            "description": "None"
        },
        {
            "name": "%intel@:14.9",
            "spec": "+cuda ^cuda@7:~allow-unsupported-compilers",
            "description": "None"
        },
        {
            "name": "%intel@16.0:",
            "spec": "+cuda ^cuda@:8.0.43~allow-unsupported-compilers",
            "description": "None"
        },
        {
            "name": "%intel@17.0:",
            "spec": "+cuda ^cuda@:8.0.60~allow-unsupported-compilers",
            "description": "None"
        },
        {
            "name": "%intel@18.0:",
            "spec": "+cuda ^cuda@:9.9~allow-unsupported-compilers",
            "description": "None"
        },
        {
            "name": "%intel@19.0:",
            "spec": "+cuda ^cuda@:10.0~allow-unsupported-compilers",
            "description": "None"
        },
        {
            "name": "%intel@19.1:",
            "spec": "+cuda ^cuda@:10.1~allow-unsupported-compilers",
            "description": "None"
        },
        {
            "name": "%intel@19.2:",
            "spec": "+cuda ^cuda@:11.1.0~allow-unsupported-compilers",
            "description": "None"
        },
        {
            "name": "%xl@:12,14:",
            "spec": "+cuda ^cuda@:9.1~allow-unsupported-compilers",
            "description": "None"
        },
        {
            "name": "%xl@:12,14:15,17:",
            "spec": "+cuda ^cuda@9.2~allow-unsupported-compilers",
            "description": "None"
        },
        {
            "name": "%xl@:12,17:",
            "spec": "+cuda ^cuda@:11.1.0~allow-unsupported-compilers",
            "description": "None"
        },
        {
            "name": "platform=darwin",
            "spec": "+cuda ^cuda@11.0.2:~allow-unsupported-compilers",
            "description": "None"
        },
        {
            "name": "platform=windows",
            "spec": "",
            "description": "None"
        },
        {
            "name": "target=aarch64:",
            "spec": "smm=libxsmm",
            "description": "libxsmm is not available on arm"
        },
        {
            "name": "~mpi",
            "spec": "+cosma",
            "description": "None"
        },
        {
            "name": "~mpi",
            "spec": "+elpa",
            "description": "elpa requires MPI"
        },
        {
            "name": "~mpi",
            "spec": "+pexsi",
            "description": "pexsi requires MPI"
        },
        {
            "name": "~mpi",
            "spec": "+sirius",
            "description": "None"
        },
        {
            "name": "@:7",
            "spec": "+cosma",
            "description": "None"
        },
        {
            "name": "@:7",
            "spec": "+libvori",
            "description": "None"
        },
        {
            "name": "@:6",
            "spec": "+sirius",
            "description": "None"
        },
        {
            "name": "%apple-clang",
            "spec": "",
            "description": "None"
        },
        {
            "name": "%clang",
            "spec": "",
            "description": "None"
        },
        {
            "name": "%nag",
            "spec": "",
            "description": "None"
        },
        {
            "name": "~openmp",
            "spec": "@8:",
            "description": "Building without OpenMP is not supported in CP2K 8+"
        },
        {
            "name": "+cuda",
            "spec": "cuda_arch=10",
            "description": "cp2k only supports cuda_arch ('35', '37', '60', '70')"
        },
        {
            "name": "+cuda",
            "spec": "cuda_arch=11",
            "description": "cp2k only supports cuda_arch ('35', '37', '60', '70')"
        },
        {
            "name": "+cuda",
            "spec": "cuda_arch=12",
            "description": "cp2k only supports cuda_arch ('35', '37', '60', '70')"
        },
        {
            "name": "+cuda",
            "spec": "cuda_arch=13",
            "description": "cp2k only supports cuda_arch ('35', '37', '60', '70')"
        },
        {
            "name": "+cuda",
            "spec": "cuda_arch=20",
            "description": "cp2k only supports cuda_arch ('35', '37', '60', '70')"
        },
        {
            "name": "+cuda",
            "spec": "cuda_arch=21",
            "description": "cp2k only supports cuda_arch ('35', '37', '60', '70')"
        },
        {
            "name": "+cuda",
            "spec": "cuda_arch=30",
            "description": "cp2k only supports cuda_arch ('35', '37', '60', '70')"
        },
        {
            "name": "+cuda",
            "spec": "cuda_arch=32",
            "description": "cp2k only supports cuda_arch ('35', '37', '60', '70')"
        },
        {
            "name": "+cuda",
            "spec": "cuda_arch=50",
            "description": "cp2k only supports cuda_arch ('35', '37', '60', '70')"
        },
        {
            "name": "+cuda",
            "spec": "cuda_arch=52",
            "description": "cp2k only supports cuda_arch ('35', '37', '60', '70')"
        },
        {
            "name": "+cuda",
            "spec": "cuda_arch=53",
            "description": "cp2k only supports cuda_arch ('35', '37', '60', '70')"
        },
        {
            "name": "+cuda",
            "spec": "cuda_arch=61",
            "description": "cp2k only supports cuda_arch ('35', '37', '60', '70')"
        },
        {
            "name": "+cuda",
            "spec": "cuda_arch=62",
            "description": "cp2k only supports cuda_arch ('35', '37', '60', '70')"
        },
        {
            "name": "+cuda",
            "spec": "cuda_arch=72",
            "description": "cp2k only supports cuda_arch ('35', '37', '60', '70')"
        },
        {
            "name": "+cuda",
            "spec": "cuda_arch=75",
            "description": "cp2k only supports cuda_arch ('35', '37', '60', '70')"
        },
        {
            "name": "+cuda",
            "spec": "cuda_arch=80",
            "description": "cp2k only supports cuda_arch ('35', '37', '60', '70')"
        },
        {
            "name": "+cuda",
            "spec": "cuda_arch=86",
            "description": "cp2k only supports cuda_arch ('35', '37', '60', '70')"
        },
        {
            "name": "+cuda",
            "spec": "cuda_arch=none",
            "description": "cp2k only supports cuda_arch ('35', '37', '60', '70')"
        }
    ],
    "variants": [
        {
            "name": "cuda",
            "default": false,
            "description": "Build with CUDA"
        },
        {
            "name": "cuda_arch",
            "default": "none",
            "description": "CUDA architecture"
        },
        {
            "name": "mpi",
            "default": true,
            "description": "Enable MPI support"
        },
        {
            "name": "openmp",
            "default": true,
            "description": "Enable OpenMP support"
        },
        {
            "name": "smm",
            "default": "libxsmm",
            "description": "Library for small matrix multiplications"
        },
        {
            "name": "plumed",
            "default": false,
            "description": "Enable PLUMED support"
        },
        {
            "name": "libint",
            "default": true,
            "description": "Use libint, required for HFX (and possibly others)"
        },
        {
            "name": "libxc",
            "default": true,
            "description": "Support additional functionals via libxc"
        },
        {
            "name": "pexsi",
            "default": false,
            "description": "Enable the alternative PEXSI methodfor density matrix evaluation"
        },
        {
            "name": "elpa",
            "default": false,
            "description": "Enable optimised diagonalisation routines from ELPA"
        },
        {
            "name": "sirius",
            "default": false,
            "description": "Enable planewave electronic structure calculations via SIRIUS"
        },
        {
            "name": "cosma",
            "default": false,
            "description": "Use COSMA for p?gemm"
        },
        {
            "name": "libvori",
            "default": false,
            "description": "Enable support for Voronoi integration and BQB compression"
        },
        {
            "name": "spglib",
            "default": false,
            "description": "Enable support for spglib"
        },
        {
            "name": "cuda_arch_35_k20x",
            "default": false,
            "description": "CP2K (resp. DBCSR) has specific parameter sets for different GPU models. Enable this when building with cuda_arch=35 for a K20x instead of a K40"
        },
        {
            "name": "cuda_fft",
            "default": false,
            "description": "Use CUDA also for FFTs in the PW part of CP2K"
        },
        {
            "name": "cuda_blas",
            "default": false,
            "description": "Use CUBLAS for general matrix operations in DBCSR"
        },
        {
            "name": "lmax",
            "default": "5",
            "description": "Maximum supported angular momentum (HFX and others)"
        }
    ],
    "homepage": "https://www.cp2k.org",
    "maintainers": [
        "dev-zero"
    ],
    "patches": [
        {
            "owner": "builtin.cp2k",
            "sha256": "3617abb877812c4b933f601438c70f95e21c6161bea177277b1d4125fd1c0bf9",
            "level": 1,
            "working_dir": ".",
            "url": "https://github.com/cp2k/cp2k/commit/5eaf864ed2bd21fb1b05a9173bb77a815ad4deda.patch?full_index=1",
            "version": "@8.2"
        }
    ],
    "resources": [],
    "description": "CP2K is a quantum chemistry and solid state physics software package\nthat can perform atomistic simulations of solid state, liquid,\nmolecular, periodic, material, crystal, and biological systems\n",
    "dependencies": [
        {
            "name": "cuda",
            "description": "CUDA is a parallel computing platform and programming model invented by\nNVIDIA. It enables dramatic increases in computing performance by\nharnessing the power of the graphics processing unit (GPU). Note: This\npackage does not currently install the drivers necessary to run CUDA.\nThese will need to be installed manually. See:\nhttps://docs.nvidia.com/cuda/ for details."
        },
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "blas",
            "description": "Intel Math Kernel Library."
        },
        {
            "name": "lapack",
            "description": "Intel Math Kernel Library."
        },
        {
            "name": "fftw-api",
            "description": "Intel Math Kernel Library."
        },
        {
            "name": "fftw",
            "description": "FFTW is a C subroutine library for computing the discrete Fourier\ntransform (DFT) in one or more dimensions, of arbitrary input size, and\nof both real and complex data (as well as of even/odd data, i.e. the\ndiscrete cosine/sine transforms or DCT/DST). We believe that FFTW, which\nis free software, should become the FFT library of choice for most\napplications."
        },
        {
            "name": "amdfftw",
            "description": "FFTW (AMD Optimized version) is a comprehensive collection of fast C\nroutines for computing the Discrete Fourier Transform (DFT) and various\nspecial cases thereof. It is an open-source implementation of the Fast\nFourier transform algorithm. It can compute transforms of real and\ncomplex-values arrays of arbitrary size and dimension. AMD Optimized\nFFTW is the optimized FFTW implementation targeted for AMD CPUs. For\nsingle precision build, please use precision value as float. Example :\nspack install amdfftw precision=float"
        },
        {
            "name": "cray-fftw",
            "description": "FFTW is a C subroutine library for computing the discrete Fourier\ntransform (DFT) in one or more dimensions, of arbitrary input size, and\nof both real and complex data (as well as of even/odd data, i.e. the\ndiscrete cosine/sine transforms or DCT/DST). This package is a wrapper\nfor Cray's version of FFTW. To install this package, list it as an\nexternal package in packages.yaml, and make sure to load the correct\ncray-fftw module. In some cases you need to load cray-mpich before cray-\nfftw."
        },
        {
            "name": "openblas",
            "description": "OpenBLAS: An optimized BLAS library"
        },
        {
            "name": "cray-libsci",
            "description": "The Cray Scientific Libraries package, LibSci, is a collection of\nnumerical routines optimized for best performance on Cray systems."
        },
        {
            "name": "libxsmm",
            "description": "Library for specialized dense and sparse matrix operations, and deep\nlearning primitives."
        },
        {
            "name": "pkgconfig",
            "description": "pkgconf is a program which helps to configure compiler and linker flags\nfor development frameworks. It is similar to pkg-config from\nfreedesktop.org, providing additional functionality while also\nmaintaining compatibility."
        },
        {
            "name": "libint",
            "description": "Libint is a high-performance library for computing Gaussian integrals in\nquantum mechanics."
        },
        {
            "name": "libxc",
            "description": "Libxc is a library of exchange-correlation functionals for density-\nfunctional theory."
        },
        {
            "name": "mpi",
            "description": "MPItrampoline: A forwarding MPI implementation that can use any other\nMPI implementation via an MPI ABI."
        },
        {
            "name": "scalapack",
            "description": "ScaLAPACK is a library of high-performance linear algebra routines for\nparallel distributed memory machines. It depends on external libraries\nincluding BLAS and LAPACK for Linear Algebra computations. AMD's\noptimized version of ScaLAPACK enables using BLIS and LibFLAME library\nthat have optimized dense matrix functions and solvers for AMD EPYC\nprocessor family CPUs."
        },
        {
            "name": "cosma",
            "description": "Distributed Communication-Optimal Matrix-Matrix Multiplication Library"
        },
        {
            "name": "elpa",
            "description": "Eigenvalue solvers for Petaflop-Applications (ELPA)"
        },
        {
            "name": "plumed",
            "description": "PLUMED is an open source library for free energy calculations in\nmolecular systems which works together with some of the most popular\nmolecular dynamics engines. Free energy calculations can be performed as\na function of many order parameters with a particular focus on\nbiological problems, using state of the art methods such as\nmetadynamics, umbrella sampling and Jarzynski-equation based steered MD.\nThe software, written in C++, can be easily interfaced with both fortran\nand C/C++ codes."
        },
        {
            "name": "pexsi",
            "description": "The PEXSI library is written in C++, and uses message passing interface\n(MPI) to parallelize the computation on distributed memory computing\nsystems and achieve scalability on more than 10,000 processors. The Pole\nEXpansion and Selected Inversion (PEXSI) method is a fast method for\nelectronic structure calculation based on Kohn-Sham density functional\ntheory. It efficiently evaluates certain selected elements of matrix\nfunctions, e.g., the Fermi-Dirac function of the KS Hamiltonian, which\nyields a density matrix. It can be used as an alternative to\ndiagonalization methods for obtaining the density, energy and forces in\nelectronic structure calculations."
        },
        {
            "name": "sirius",
            "description": "Domain specific library for electronic structure calculations"
        },
        {
            "name": "libvori",
            "description": "Support for Voronoi Integration and lossless BQB compression"
        },
        {
            "name": "py-numpy",
            "description": "NumPy is the fundamental package for scientific computing with Python.\nIt contains among other things: a powerful N-dimensional array object,\nsophisticated (broadcasting) functions, tools for integrating C/C++ and\nFortran code, and useful linear algebra, Fourier transform, and random\nnumber capabilities"
        },
        {
            "name": "spglib",
            "description": "C library for finding and handling crystal symmetries."
        },
        {
            "name": "wannier90",
            "description": "Wannier90 calculates maximally-localised Wannier functions (MLWFs).\nWannier90 is released under the GNU General Public License."
        }
    ],
    "dependent_to": []
}
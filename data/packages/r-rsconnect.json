{
    "name": "r-rsconnect",
    "aliases": [],
    "versions": [
        {
            "name": "0.8.25",
            "sha256": "3c055277f745f2ca37a73e2f425249307cea4dc95ecc59fbe05ee8b6cf26d9cf"
        },
        {
            "name": "0.8.17",
            "sha256": "64767a4d626395b7871375956a9f0455c3d64ff6e779633b0e554921d85da231"
        }
    ],
    "latest_version": "0.8.25",
    "build_system": "RPackage",
    "conflicts": [],
    "variants": [],
    "homepage": "https://cloud.r-project.org/package=rsconnect",
    "maintainers": [
        "glennpj"
    ],
    "patches": [],
    "resources": [],
    "description": "Deployment Interface for R Markdown Documents and Shiny Applications.\nProgrammatic deployment interface for 'RPubs', 'shinyapps.io', and\n'RStudio Connect'. Supported content types include R Markdown documents,\nShiny applications, Plumber APIs, plots, and static web content.\n",
    "dependencies": [
        {
            "name": "r",
            "description": "R is 'GNU S', a freely available language and environment for\nstatistical computing and graphics which provides a wide variety of\nstatistical and graphical techniques: linear and nonlinear modelling,\nstatistical tests, time series analysis, classification, clustering,\netc. Please consult the R project homepage for further information."
        },
        {
            "name": "r-curl",
            "description": "A Modern and Flexible Web Client for R. The curl() and curl_download()\nfunctions provide highly configurable drop-in replacements for base\nurl() and download.file() with better performance, support for\nencryption (https, ftps), gzip compression, authentication, and other\nlibcurl goodies. The core of the package implements a framework for\nperforming fully customized requests where data can be processed either\nin memory, on disk, or streaming via the callback or connection\ninterfaces. Some knowledge of libcurl is recommended; for a more-user-\nfriendly web client see the 'httr' package which builds on this package\nwith http specific tools and logic."
        },
        {
            "name": "r-digest",
            "description": "Create Compact Hash Digests of R Objects. Implementation of a function\n'digest()' for the creation of hash digests of arbitrary R objects\n(using the md5, sha-1, sha-256, crc32, xxhash and murmurhash algorithms)\npermitting easy comparison of R language objects, as well as a function\n'hmac()' to create hash-based message authentication code. The md5\nalgorithm by Ron Rivest is specified in RFC 1321, the sha-1 and sha-256\nalgorithms are specified in FIPS-180-1 and FIPS-180-2, and the crc32\nalgorithm is described in\nftp://ftp.rocksoft.com/cliens/rocksoft/papers/crc_v3.txt. For md5,\nsha-1, sha-256 and aes, this package uses small standalone\nimplementations that were provided by Christophe Devine. For crc32, code\nfrom the zlib library is used. For sha-512, an implementation by Aaron\nD. Gifford is used. For xxhash, the implementation by Yann Collet is\nused. For murmurhash, an implementation by Shane Day is used. Please\nnote that this package is not meant to be deployed for cryptographic\npurposes for which more comprehensive (and widely tested) libraries such\nas OpenSSL should be used."
        },
        {
            "name": "r-jsonlite",
            "description": "A Simple and Robust JSON Parser and Generator for R. A fast JSON parser\nand generator optimized for statistical data and the web. Started out as\na fork of 'RJSONIO', but has been completely rewritten in recent\nversions. The package offers flexible, robust, high performance tools\nfor working with JSON in R and is particularly powerful for building\npipelines and interacting with a web API. The implementation is based on\nthe mapping described in the vignette (Ooms, 2014). In addition to\nconverting JSON data from/to R objects, 'jsonlite' contains functions to\nstream, validate, and prettify JSON data. The unit tests included with\nthe package verify that all edge cases are encoded and decoded\nconsistently for use with dynamic data in systems and applications."
        },
        {
            "name": "r-openssl",
            "description": "Toolkit for Encryption, Signatures and Certificates Based on OpenSSL.\nBindings to OpenSSL libssl and libcrypto, plus custom SSH pubkey\nparsers. Supports RSA, DSA and EC curves P-256, P-384 and P-521.\nCryptographic signatures can either be created and verified manually or\nvia x509 certificates. AES can be used in cbc, ctr or gcm mode for\nsymmetric encryption; RSA for asymmetric (public key) encryption or EC\nfor Diffie Hellman. High-level envelope functions combine RSA and AES\nfor encrypting arbitrary sized data. Other utilities include key\ngenerators, hash functions (md5, sha1, sha256, etc), base64 encoder, a\nsecure random number generator, and 'bignum' math methods for manually\nperforming crypto calculations on large multibyte integers."
        },
        {
            "name": "r-packrat",
            "description": "A Dependency Management System for Projects and their R Package\nDependencies. Manage the R packages your project depends on in an\nisolated, portable, and reproducible way."
        },
        {
            "name": "r-rstudioapi",
            "description": "Safely Access the RStudio API. Access the RStudio API (if available) and\nprovide informative error messages when it's not."
        },
        {
            "name": "r-yaml",
            "description": "Methods to Convert R Data to YAML and Back. Implements the 'libyaml'\n'YAML' 1.1 parser and emitter (<https://pyyaml.org/wiki/LibYAML>) for R."
        }
    ],
    "dependent_to": [
        {
            "name": "r-shinystan",
            "description": "Interactive Visual and Numerical Diagnostics and Posterior Analysis for\nBayesian Models. A graphical user interface for interactive Markov chain\nMonte Carlo (MCMC) diagnostics and plots and tables helpful for\nanalyzing a posterior sample. The interface is powered by the 'Shiny'\nweb application framework from 'RStudio' and works with the output of\nMCMC programs written in any programming language (and has extended\nfunctionality for 'Stan' models fit using the 'rstan' and 'rstanarm'\npackages)."
        }
    ]
}
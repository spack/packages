{
    "name": "elsi",
    "aliases": [],
    "versions": [
        {
            "name": "2.2.1",
            "sha256": "5b4b2e8fa4b3b68131fe02cc1803a884039b89a1b1138af474af66453bec0b4d"
        }
    ],
    "latest_version": "2.2.1",
    "build_system": "CMakePackage",
    "conflicts": [
        {
            "name": "+ipo",
            "spec": "^cmake@:3.8",
            "description": "+ipo is not supported by CMake < 3.9"
        }
    ],
    "variants": [
        {
            "name": "build_type",
            "default": "RelWithDebInfo",
            "description": "CMake build type"
        },
        {
            "name": "ipo",
            "default": false,
            "description": "CMake interprocedural optimization"
        },
        {
            "name": "add_underscore",
            "default": true,
            "description": "Suffix C functions with an underscore"
        },
        {
            "name": "elpa2_kernel",
            "default": "none",
            "description": "ELPA2 Kernel"
        },
        {
            "name": "enable_pexsi",
            "default": false,
            "description": "Enable PEXSI support"
        },
        {
            "name": "enable_sips",
            "default": false,
            "description": "Enable SLEPc-SIPs support"
        },
        {
            "name": "use_external_elpa",
            "default": false,
            "description": "Build ELPA using SPACK"
        },
        {
            "name": "use_external_ntpoly",
            "default": false,
            "description": "Build NTPoly using SPACK"
        },
        {
            "name": "use_external_omm",
            "default": false,
            "description": "Use external libOMM and MatrixSwitch"
        },
        {
            "name": "use_external_superlu",
            "default": false,
            "description": "Use external SuperLU DIST"
        },
        {
            "name": "use_mpi_iallgather",
            "default": true,
            "description": "Use non-blocking collective MPI functions"
        }
    ],
    "homepage": "https://wordpress.elsi-interchange.org/",
    "maintainers": [],
    "patches": [],
    "resources": [],
    "description": "ELSI provides a unified interface for electronic structure codes to a\nvariety of eigenvalue solvers.\n",
    "dependencies": [
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "blas",
            "description": "Intel Math Kernel Library."
        },
        {
            "name": "lapack",
            "description": "Intel Math Kernel Library."
        },
        {
            "name": "mpi",
            "description": "MPItrampoline: A forwarding MPI implementation that can use any other\nMPI implementation via an MPI ABI."
        },
        {
            "name": "scalapack",
            "description": "ScaLAPACK is a library of high-performance linear algebra routines for\nparallel distributed memory machines. It depends on external libraries\nincluding BLAS and LAPACK for Linear Algebra computations. AMD's\noptimized version of ScaLAPACK enables using BLIS and LibFLAME library\nthat have optimized dense matrix functions and solvers for AMD EPYC\nprocessor family CPUs."
        },
        {
            "name": "elpa",
            "description": "Eigenvalue solvers for Petaflop-Applications (ELPA)"
        },
        {
            "name": "ntpoly",
            "description": "NTPoly - parallel library for computing matrix functions. NTPoly is a\nlibrary for computing the functions of sparse, hermitian matrices based\non polynomial expansions. For sufficiently sparse matrices, most of the\nmatrix functions in NTPoly can be computed in linear time."
        },
        {
            "name": "slepc",
            "description": "Scalable Library for Eigenvalue Problem Computations."
        },
        {
            "name": "petsc",
            "description": "PETSc is a suite of data structures and routines for the scalable\n(parallel) solution of scientific applications modeled by partial\ndifferential equations."
        },
        {
            "name": "superlu-dist",
            "description": "A general purpose library for the direct solution of large, sparse,\nnonsymmetric systems of linear equations on high performance machines."
        }
    ],
    "dependent_to": [
        {
            "name": "dftbplus",
            "description": "DFTB+ is an implementation of the Density Functional based Tight Binding\n(DFTB) method, containing many extensions to the original method."
        }
    ]
}
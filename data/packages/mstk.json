{
    "name": "mstk",
    "aliases": [],
    "versions": [
        {
            "name": "master",
            "branch": "master"
        },
        {
            "name": "3.3.6",
            "sha256": "30041ee6f32d754e5d9b46db8f62609bb66d2686f8e6e16ad254f552849cb0f1"
        },
        {
            "name": "3.3.5",
            "sha256": "64c976e12d1393aafd086ef941b176add6cfb963f463c33259596e7ef641cdd8"
        },
        {
            "name": "3.3.4",
            "sha256": "bd34d31fc1fc468147a51e8d837d6bf9902ca8d38c7c0615e7f20968d4659da2"
        },
        {
            "name": "3.3.3",
            "sha256": "54ea7929c9046915472f38367c83f75af634a6989ce0b89aad17fb9f4a25023e"
        },
        {
            "name": "3.3.2",
            "sha256": "fb4ffa97af4d0a0d4771c8585d0b27538b013d8b1cfaff992e5e054fef62af0b"
        },
        {
            "name": "3.3.1",
            "sha256": "9fdb0c33c1b68714d708b355d963547cf41332812658d4560d4db43904fc78de"
        },
        {
            "name": "3.3.0",
            "sha256": "205c48fb5619937b5dd83788da739b7c2060155b7c41793e29ce05422b8f7dfb"
        },
        {
            "name": "3.2.1",
            "sha256": "09bc6684abb576e34c324322db6f71f8987c6ec436a54256b85ef4db40185470"
        },
        {
            "name": "3.2.0",
            "sha256": "57e58c5a7a456dbc608ce9f834a06c212a1aa64ac3ebc880ea0b8a19b000dab0"
        },
        {
            "name": "3.1.3",
            "sha256": "03f6901cd6d563e1705a173c1a2fbbef10ab9a43f533f6ba758e357c03bdfa16"
        },
        {
            "name": "3.1.2",
            "sha256": "1eb44c29554f45695f875fc60ab81554a2c46a041ef58a7224f3767d30e2846e"
        },
        {
            "name": "3.1.1",
            "sha256": "5a03873c69fb38acd7ce27f2a5fa0643dd1cfcc3e214cff4aa26ee717651cc0b"
        },
        {
            "name": "3.1.0",
            "sha256": "70e68d8a90cd2367015e0ab3459ed230a7995ad2297671742d9be6e28bc03dcf"
        },
        {
            "name": "3.0.4",
            "sha256": "99e4c996bf22fd325335ed1391dfe735b0a338e8e4d733204d56dde7ef4eedf3"
        },
        {
            "name": "3.0.3",
            "sha256": "618e371a48077f2b4ccfafd4d174c05f007b2ea7a51e0399df67442639409518"
        },
        {
            "name": "3.0.2",
            "sha256": "b0172cd68e5137b8585d82c37b8a4af4b7e884f04d1b7d006a399d39447fe89e"
        },
        {
            "name": "3.0.1",
            "sha256": "d44e4bf01b118b1d19710aa839b3f5f0c1a8391264a435f641ba4bd23bcf45ec"
        },
        {
            "name": "3.0.0",
            "sha256": "d993ff5fc6c431067eb97e4089835c7790397d9c1ad88a56523c0591d451df19"
        }
    ],
    "latest_version": "3.3.6",
    "build_system": "CMakePackage",
    "conflicts": [
        {
            "name": "+ipo",
            "spec": "^cmake@:3.8",
            "description": "+ipo is not supported by CMake < 3.9"
        },
        {
            "name": "partitioner=none",
            "spec": "+parallel",
            "description": "None"
        },
        {
            "name": "partitioner=all",
            "spec": "~parallel",
            "description": "None"
        },
        {
            "name": "partitioner=zoltan",
            "spec": "~parallel",
            "description": "None"
        },
        {
            "name": "partitioner=metis",
            "spec": "~parallel",
            "description": "None"
        }
    ],
    "variants": [
        {
            "name": "build_type",
            "default": "RelWithDebInfo",
            "description": "CMake build type"
        },
        {
            "name": "ipo",
            "default": false,
            "description": "CMake interprocedural optimization"
        },
        {
            "name": "exodusii",
            "default": false,
            "description": "Enable ExodusII"
        },
        {
            "name": "use_markers",
            "default": true,
            "description": "Enable use of markers"
        },
        {
            "name": "parallel",
            "default": false,
            "description": "Enable Parallel Support"
        },
        {
            "name": "partitioner",
            "default": "none",
            "description": "Choose partitioner"
        }
    ],
    "homepage": "https://github.com/MeshToolkit/MSTK",
    "maintainers": [
        "raovgarimella",
        "julienloiseau"
    ],
    "patches": [],
    "resources": [],
    "description": "MSTK is a mesh framework that allows users to represent, manipulate and\nquery unstructured 3D arbitrary topology meshes in a general manner\nwithout the need to code their own data structures. MSTK is a flexible\nframework in that it allows a variety of underlying representations for\nthe mesh while maintaining a common interface. It allows users to choose\nfrom different mesh representations either at initialization\n(implemented) or during the program execution (not yet implemented) so\nthat the optimal data structures are used for the particular algorithm.\nThe interaction of users and applications with MSTK is through a\nfunctional interface that acts as though the mesh always contains\nvertices, edges, faces and regions and maintains connectivity between\nall these entities.\n",
    "dependencies": [
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "mpi",
            "description": "MPItrampoline: A forwarding MPI implementation that can use any other\nMPI implementation via an MPI ABI."
        },
        {
            "name": "zoltan",
            "description": "The Zoltan library is a toolkit of parallel combinatorial algorithms for\nparallel, unstructured, and/or adaptive scientific applications.\nZoltan's largest component is a suite of dynamic load-balancing and\npartitioning algorithms that increase applications' parallel performance\nby reducing idle time. Zoltan also has graph coloring and graph ordering\nalgorithms, which are useful in task schedulers and parallel\npreconditioners."
        },
        {
            "name": "metis",
            "description": "METIS is a set of serial programs for partitioning graphs, partitioning\nfinite element meshes, and producing fill reducing orderings for sparse\nmatrices. The algorithms implemented in METIS are based on the\nmultilevel recursive-bisection, multilevel k-way, and multi-constraint\npartitioning schemes."
        },
        {
            "name": "exodusii",
            "description": "Exodus II is a C++/Fortran library developed to store and retrieve data\nfor finite element analyses. It's used for preprocessing (problem\ndefinition), postprocessing (results visualization), and data transfer\nbetween codes. An Exodus II data file is a random access, machine\nindependent, binary file that is written and read via C, C++, or Fortran\nAPI routines."
        },
        {
            "name": "unittest-cpp",
            "description": "UnitTest++ is a lightweight unit testing framework for C++. It was\ndesigned to do test-driven development on a wide variety of platforms.\nSimplicity, portability, speed, and small footprint are all very\nimportant aspects of UnitTest++. UnitTest++ is mostly standard C++ and\nmakes minimal use of advanced library and language features, which means\nit should be easily portable to just about any platform."
        }
    ],
    "dependent_to": [
        {
            "name": "jali",
            "description": "Jali is a parallel, unstructured mesh infrastructure library designed\nfor use by multi-physics simulations."
        }
    ]
}
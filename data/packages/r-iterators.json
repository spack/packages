{
    "name": "r-iterators",
    "aliases": [],
    "versions": [
        {
            "name": "1.0.13",
            "sha256": "778e30e4c292da9f94d62acc637cf55273dae258199d847e62658f44840f11a4"
        },
        {
            "name": "1.0.12",
            "sha256": "96bf31d60ebd23aefae105d9b7790715e63327eec0deb2ddfb3d543994ea9f4b"
        },
        {
            "name": "1.0.9",
            "sha256": "de001e063805fdd124953b571ccb0ed2838c55e40cca2e9d283d8a90b0645e9b"
        },
        {
            "name": "1.0.8",
            "sha256": "ae4ea23385776eb0c06c992a3da6b0256a6c84558c1061034c5a1fbdd43d05b8"
        }
    ],
    "build_system": "RPackage",
    "conflicts": [],
    "variants": [],
    "homepage": "https://cloud.r-project.org/package=iterators",
    "maintainers": [
        "glennpj"
    ],
    "patches": [],
    "resources": [],
    "description": "Provides Iterator Construct Support for iterators, which allow a\nprogrammer to traverse through all the elements of a vector, list, or\nother collection of data.\n",
    "dependencies": [
        {
            "name": "r",
            "description": "R is 'GNU S', a freely available language and environment for\nstatistical computing and graphics which provides a wide variety of\nstatistical and graphical techniques: linear and nonlinear modelling,\nstatistical tests, time series analysis, classification, clustering,\netc. Please consult the R project homepage for further information."
        }
    ],
    "dependent_to": [
        {
            "name": "r-foreach",
            "description": "Provides Foreach Looping Construct Support for the foreach looping\nconstruct. Foreach is an idiom that allows for iterating over elements\nin a collection, without the use of an explicit loop counter. This\npackage in particular is intended to be used for its return value,\nrather than for its side effects. In that sense, it is similar to the\nstandard lapply function, but doesn't require the evaluation of a\nfunction. Using foreach without side effects also facilitates executing\nthe loop in parallel."
        },
        {
            "name": "r-mzid",
            "description": "An mzIdentML parser for R A parser for mzIdentML files implemented using\nthe XML package. The parser tries to be general and able to handle all\ntypes of mzIdentML files with the drawback of having less 'pretty'\noutput than a vendor specific parser. Please contact the maintainer with\nany problems and supply an mzIdentML file so the problems can be fixed\nquickly."
        },
        {
            "name": "r-doparallel",
            "description": "Foreach Parallel Adaptor for the 'parallel' Package Provides a parallel\nbackend for the %dopar% function using the parallel package."
        },
        {
            "name": "r-domc",
            "description": "Foreach Parallel Adaptor for 'parallel' Provides a parallel backend for\nthe %dopar% function using the multicore functionality of the parallel\npackage."
        },
        {
            "name": "r-bumphunter",
            "description": "Bump Hunter Tools for finding bumps in genomic data"
        },
        {
            "name": "r-quantro",
            "description": "A test for when to use quantile normalization A data-driven test for the\nassumptions of quantile normalization using raw data such as objects\nthat inherit eSets (e.g. ExpressionSet, MethylSet). Group level\ninformation about each sample (such as Tumor / Normal status) must also\nbe provided because the test assesses if there are global differences in\nthe distributions between the user-defined groups."
        },
        {
            "name": "r-dosnow",
            "description": "Foreach Parallel Adaptor for the 'snow' Package Provides a parallel\nbackend for the %dopar% function using the snow package of Tierney,\nRossini, Li, and Sevcikova."
        },
        {
            "name": "r-dorng",
            "description": "Generic Reproducible Parallel Backend for 'foreach' Loops Provides\nfunctions to perform reproducible parallel foreach loops, using\nindependent random streams as generated by L'Ecuyer's combined multiple-\nrecursive generator (L'Ecuyer (1999), <doi:10.1287/opre.47.1.159>). It\nenables to easily convert standard %dopar% loops into fully reproducible\nloops, independently of the number of workers, the task scheduling\nstrategy, or the chosen parallel environment and associated foreach\nbackend."
        }
    ]
}
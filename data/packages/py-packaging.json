{
    "name": "py-packaging",
    "aliases": [],
    "versions": [
        {
            "name": "21.3",
            "sha256": "dd47c42927d89ab911e606518907cc2d3a1f38bbd026385970643f9c5b8ecfeb"
        },
        {
            "name": "21.0",
            "sha256": "7dc96269f53a4ccec5c0670940a4281106dd0bb343f47b7471f779df49c2fbe7"
        },
        {
            "name": "20.9",
            "sha256": "5b327ac1320dc863dca72f4514ecc086f31186744b84a230374cc1fd776feae5"
        },
        {
            "name": "19.2",
            "sha256": "28b924174df7a2fa32c1953825ff29c61e2f5e082343165438812f00d3a7fc47"
        },
        {
            "name": "19.1",
            "sha256": "c491ca87294da7cc01902edbe30a5bc6c4c28172b5138ab4e4aa1b9d7bfaeafe"
        },
        {
            "name": "19.0",
            "sha256": "0c98a5d0be38ed775798ece1b9727178c4469d9c3b4ada66e8e6b7849f8732af"
        },
        {
            "name": "17.1",
            "sha256": "f019b770dd64e585a99714f1fd5e01c7a8f11b45635aa953fd41c689a657375b"
        },
        {
            "name": "16.8",
            "sha256": "5d50835fdf0a7edf0b55e311b7c887786504efea1177abd7e69329a8e5ea619e"
        }
    ],
    "latest_version": "21.3",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [],
    "homepage": "https://github.com/pypa/packaging",
    "maintainers": [
        "adamjstewart"
    ],
    "patches": [],
    "resources": [],
    "description": "Core utilities for Python packages.\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-pyparsing",
            "description": "A Python Parsing Module."
        },
        {
            "name": "py-six",
            "description": "Python 2 and 3 compatibility utilities."
        },
        {
            "name": "py-attrs",
            "description": "Classes Without Boilerplate"
        }
    ],
    "dependent_to": [
        {
            "name": "py-matplotlib",
            "description": "Matplotlib is a comprehensive library for creating static, animated, and\ninteractive visualizations in Python."
        },
        {
            "name": "py-webargs",
            "description": "Python library for parsing and validating HTTP request objects, with\nbuilt-in support for popular web frameworks, including Flask, Django,\nBottle, Tornado, Pyramid, Falcon, and aiohttp."
        },
        {
            "name": "py-cekit",
            "description": "CEKit is a Container image creation tool. CEKit helps to build container\nimages from image definition files with strong focus on modularity and\ncode reuse."
        },
        {
            "name": "py-jupyterlab",
            "description": "JupyterLab is the next-generation web-based user interface for Project\nJupyter."
        },
        {
            "name": "py-vector",
            "description": "Vector classes and utilities"
        },
        {
            "name": "py-sphinx",
            "description": "Sphinx Documentation Generator."
        },
        {
            "name": "py-jupyter-packaging11",
            "description": "Jupyter Packaging Utilities, version 11."
        },
        {
            "name": "py-librosa",
            "description": "A python package for music and audio analysis."
        },
        {
            "name": "py-oslo-utils",
            "description": "The oslo.utils library provides support for common utility type\nfunctions, such as encoding, exception handling, string manipulation,\nand time handling."
        },
        {
            "name": "py-torchmetrics",
            "description": "Machine learning metrics for distributed, scalable PyTorch applications."
        },
        {
            "name": "py-fastcore",
            "description": "Python is a powerful, dynamic language. Rather than bake everything into\nthe language, it lets the programmer customize it to make it work for\nthem. fastcore uses this flexibility to add to Python features inspired\nby other languages we've loved, like multiple dispatch from Julia,\nmixins from Ruby, and currying, binding, and more from Haskell. It also\nadds some \"missing features\" and clean up some rough edges in the Python\nstandard library, such as simplifying parallel processing, and bringing\nideas from NumPy over to Python's list type."
        },
        {
            "name": "py-transformers",
            "description": "State-of-the-art Natural Language Processing for TensorFlow 2.0 and\nPyTorch"
        },
        {
            "name": "n2p2",
            "description": "N2p2 (The neural network potential package) provides ready-to-use\nsoftware for high-dimensional neural network potentials in computational\nphysics and chemistry."
        },
        {
            "name": "py-jupyter-packaging7",
            "description": "Jupyter Packaging Utilities, version 7."
        },
        {
            "name": "py-pyprecice",
            "description": "This package provides python language bindings for the C++ library\npreCICE."
        },
        {
            "name": "py-xarray",
            "description": "N-D labeled arrays and datasets in Python"
        },
        {
            "name": "py-fastai",
            "description": "You can use fastai without any installation by using Google Colab. In\nfact, every page of this documentation is also available as an\ninteractive notebook - click \"Open in colab\" at the top of any page to\nopen it (be sure to change the Colab runtime to \"GPU\" to have it run\nfast!) See the fast.ai documentation on Using Colab for more\ninformation."
        },
        {
            "name": "py-seriate",
            "description": "This is a Python implementation of Seriation algorithm. Seriation is an\napproach for ordering elements in a set so that the sum of the\nsequential pairwise distances is minimal. We state this task as a\nTravelling Salesman Problem (TSP) and leverage the powerful Google's or-\ntools to do heavy-lifting. Since TSP is NP-hard, it is not possible to\ncalculate the precise solution for a big number of elements. However,\nthe or-tools' heuristics work very well in practice, and they are used\nin e.g. Google Maps."
        },
        {
            "name": "py-marshmallow",
            "description": "marshmallow is an ORM/ODM/framework-agnostic library for converting\ncomplex datatypes, such as objects, to and from native Python datatypes."
        },
        {
            "name": "py-tox",
            "description": "tox is a generic virtualenv management and test command line tool."
        },
        {
            "name": "py-pooch",
            "description": "Pooch manages your Python library's sample data files: it automatically\ndownloads and stores them in a local directory, with support for\nversioning and corruption checks."
        },
        {
            "name": "py-dask-ml",
            "description": "Scalable Machine Learning with Dask."
        },
        {
            "name": "py-pytest",
            "description": "pytest: simple powerful testing with Python."
        },
        {
            "name": "py-setuptools-scm",
            "description": "The blessed package to manage your versions by scm tags."
        },
        {
            "name": "py-dipy",
            "description": "Diffusion MRI utilities in python. DIPY is the paragon 3D/4D+ imaging\nlibrary in Python. Contains generic methods for spatial normalization,\nsignal processing, machine learning, statistical analysis and\nvisualization of medical images. Additionally, it contains specialized\nmethods for computational anatomy including diffusion, perfusion and\nstructural imaging."
        },
        {
            "name": "py-deprecation",
            "description": "The deprecation library provides a deprecated decorator and a\nfail_if_not_removed decorator for your tests."
        },
        {
            "name": "py-ipyparallel",
            "description": "IPython's architecture for parallel and distributed computing."
        },
        {
            "name": "py-kornia",
            "description": "Open Source Differentiable Computer Vision Library for PyTorch."
        },
        {
            "name": "py-ctgan",
            "description": "CTGAN is a collection of Deep Learning based Synthetic Data Generators\nfor single table data, which are able to learn from real data and\ngenerate synthetic clones with high fidelity."
        },
        {
            "name": "py-datalad",
            "description": "data distribution geared toward scientific datasets. DataLad makes data\nmanagement and data distribution more accessible. To do that, it stands\non the shoulders of Git and Git-annex to deliver a decentralized system\nfor data exchange. This includes automated ingestion of data from online\nportals and exposing it in readily usable form as Git(-annex)\nrepositories, so-called datasets. The actual data storage and permission\nmanagement, however, remains with the original data providers."
        },
        {
            "name": "py-nibabel",
            "description": "Access a multitude of neuroimaging data formats"
        },
        {
            "name": "py-arviz",
            "description": "ArviZ (pronounced \"AR-vees\") is a Python package for exploratory\nanalysis of Bayesian models. Includes functions for posterior analysis,\nmodel checking, comparison and diagnostics."
        },
        {
            "name": "py-datasets",
            "description": "Datasets is a lightweight library providing two main features: one-line\ndataloaders for many public datasets and efficient data pre-processing."
        },
        {
            "name": "py-niworkflows",
            "description": "Common workflows for MRI (anatomical, functional, diffusion, etc)"
        },
        {
            "name": "py-jupyter-server",
            "description": "The Jupyter Server provides the backend (i.e. the core services, APIs,\nand REST endpoints) for Jupyter web applications like Jupyter notebook,\nJupyterLab, and Voila."
        },
        {
            "name": "py-sip",
            "description": "A Python bindings generator for C/C++ libraries."
        },
        {
            "name": "py-scikit-build",
            "description": "scikit-build is an improved build system generator for CPython\nC/C++/Fortran/Cython extensions. It provides better support for\nadditional compilers, build systems, cross compilation, and locating\ndependencies and their associated build requirements. The scikit-build\npackage is fundamentally just glue between the setuptools Python module\nand CMake."
        },
        {
            "name": "py-pyside2",
            "description": "Python bindings for Qt."
        },
        {
            "name": "py-dvc",
            "description": "Git for data scientists - manage your code and data together."
        },
        {
            "name": "py-setuptools-cpp",
            "description": "Simplified packaging for pybind11-based C++ extensions"
        },
        {
            "name": "py-bokeh",
            "description": "Statistical and novel interactive HTML plots for Python"
        },
        {
            "name": "py-onnx-runtime",
            "description": "ONNX Runtime is a performance-focused complete scoring engine for Open\nNeural Network Exchange (ONNX) models, with an open extensible\narchitecture to continually address the latest developments in AI and\nDeep Learning. ONNX Runtime stays up to date with the ONNX standard with\ncomplete implementation of all ONNX operators, and supports all ONNX\nreleases (1.2+) with both future and backwards compatibility."
        },
        {
            "name": "py-pyqt-builder",
            "description": "The PEP 517 compliant PyQt build system."
        },
        {
            "name": "py-petastorm",
            "description": "Petastorm is a library enabling the use of Parquet storage from\nTensorflow, Pytorch, and other Python-based ML training frameworks."
        },
        {
            "name": "py-bleach",
            "description": "An easy whitelist-based HTML-sanitizing tool."
        },
        {
            "name": "py-build",
            "description": "A simple, correct PEP517 package builder."
        },
        {
            "name": "py-pytorch-lightning",
            "description": "PyTorch Lightning is the lightweight PyTorch wrapper for ML researchers."
        },
        {
            "name": "py-jupyter-packaging",
            "description": "Jupyter Packaging Utilities."
        },
        {
            "name": "py-poetry",
            "description": "Python dependency management and packaging made easy."
        },
        {
            "name": "py-jupyterlab-server",
            "description": "A set of server components for JupyterLab and JupyterLab like\napplications"
        },
        {
            "name": "py-rst2pdf",
            "description": "Convert reStructured Text to PDF via ReportLab. The usual way of\ncreating PDF from reStructuredText is by going through LaTeX. This tool\nprovides an alternative by producing PDF directly using the ReportLab\nlibrary."
        },
        {
            "name": "py-pint",
            "description": "Pint is a Python package to define, operate and manipulate physical\nquantities: the product of a numerical value and a unit of measurement.\nIt allows arithmetic operations between them and conversions from and to\ndifferent units."
        },
        {
            "name": "py-nipype",
            "description": "Neuroimaging in Python: Pipelines and Interfaces."
        },
        {
            "name": "py-mplhep",
            "description": "Matplotlib styles for HEP"
        }
    ]
}
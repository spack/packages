{
    "name": "py-torchvision",
    "aliases": [],
    "versions": [
        {
            "name": "main",
            "branch": "main"
        },
        {
            "name": "master",
            "branch": "main",
            "deprecated": true
        },
        {
            "name": "0.12.0",
            "sha256": "99e6d3d304184895ff4f6152e2d2ec1cbec89b3e057d9c940ae0125546b04e91"
        },
        {
            "name": "0.11.3",
            "sha256": "b4c51d27589783e6e6941ecaa67b55f6f41633874ec37f80b64a0c92c3196e0c"
        },
        {
            "name": "0.11.2",
            "sha256": "55689c57c29f82438a133d0af3315991037be59c8e02471bdcaa31731154a714"
        },
        {
            "name": "0.11.1",
            "sha256": "32a06ccf755e4d75006ce03701f207652747a63dbfdf65f0f20a1b6f93a2e834"
        },
        {
            "name": "0.11.0",
            "sha256": "8e85acf8f5d39f27e92e610ccb506dac0bf4412bb366a318d2aa5f384cbd4d2c"
        },
        {
            "name": "0.10.1",
            "sha256": "4d595cf0214c8adc817f8e3cd0043a027b52b481e05d67b04f4947fcb43d4277"
        },
        {
            "name": "0.10.0",
            "sha256": "82bb2c2b03d8a65f4ea74bb0ee5566b0876a1992aceefb1e11475c7b5d2e857b"
        },
        {
            "name": "0.9.2",
            "sha256": "b41fc99bbf18450750bcd1804393e7c09dc8d4873c6b7e544b11c70fda59cbc8"
        },
        {
            "name": "0.9.1",
            "sha256": "79964773729880e0eee0e6af13f336041121d4cc8491a3e2c0e5f184cac8a718"
        },
        {
            "name": "0.9.0",
            "sha256": "9351ed92aded632f8c7f59dfadac13c191a834babe682f5785ea47e6fcf6b472"
        },
        {
            "name": "0.8.2",
            "sha256": "9a866c3c8feb23b3221ce261e6153fc65a98ce9ceaa71ccad017016945c178bf"
        },
        {
            "name": "0.8.1",
            "sha256": "c46734c679c99f93e5c06654f4295a05a6afe6c00a35ebd26a2cce507ae1ccbd"
        },
        {
            "name": "0.8.0",
            "sha256": "b5f040faffbfc7bac8d4687d8665bd1196937334589b3fb5fcf15bb69ca25391"
        },
        {
            "name": "0.7.0",
            "sha256": "fa0a6f44a50451115d1499b3f2aa597e0092a07afce1068750260fa7dd2c85cb"
        },
        {
            "name": "0.6.1",
            "sha256": "8173680a976c833640ecbd0d7e6f0a11047bf8833433e2147180efc905e48656"
        },
        {
            "name": "0.6.0",
            "sha256": "02de11b3abe6882de4032ce86dab9c7794cbc84369b44d04e667486580f0f1f7"
        },
        {
            "name": "0.5.0",
            "sha256": "eb9afc93df3d174d975ee0914057a9522f5272310b4d56c150b955c287a4d74d"
        },
        {
            "name": "0.4.2",
            "sha256": "1184a27eab85c9e784bacc6f9d6fec99e168ab4eda6047ef9f709e7fdb22d8f9"
        },
        {
            "name": "0.4.1",
            "sha256": "053689351272b3bd2ac3e6ba51efd284de0e4ca4a301f54674b949f1e62b7176"
        },
        {
            "name": "0.4.0",
            "sha256": "c270d74e568bad4559fed4544f6dd1e22e2eb1c60b088e04a5bd5787c4150589"
        },
        {
            "name": "0.3.0",
            "sha256": "c205f0618c268c6ed2f8abb869ef6eb83e5339c1336c243ad321a2f2a85195f0"
        }
    ],
    "latest_version": "0.12.0",
    "build_system": "PythonPackage",
    "conflicts": [
        {
            "name": "backend=png",
            "spec": "@:0.7",
            "description": "None"
        },
        {
            "name": "backend=jpeg",
            "spec": "@:0.7",
            "description": "None"
        }
    ],
    "variants": [
        {
            "name": "backend",
            "default": "pil",
            "description": "Image backend"
        }
    ],
    "homepage": "https://github.com/pytorch/vision",
    "maintainers": [
        "adamjstewart"
    ],
    "patches": [],
    "resources": [],
    "description": "The torchvision package consists of popular datasets, model\narchitectures, and common image transformations for computer vision.\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "ninja",
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible."
        },
        {
            "name": "py-typing-extensions",
            "description": "The typing_extensions module contains both backports of these changes as\nwell as experimental types that will eventually be added to the typing\nmodule, such as Protocol (see PEP 544 for details about protocols and\nstatic duck typing)."
        },
        {
            "name": "py-numpy",
            "description": "NumPy is the fundamental package for scientific computing with Python.\nIt contains among other things: a powerful N-dimensional array object,\nsophisticated (broadcasting) functions, tools for integrating C/C++ and\nFortran code, and useful linear algebra, Fourier transform, and random\nnumber capabilities"
        },
        {
            "name": "py-requests",
            "description": "Python HTTP for Humans."
        },
        {
            "name": "py-six",
            "description": "Python 2 and 3 compatibility utilities."
        },
        {
            "name": "py-torch",
            "description": "Tensors and Dynamic neural networks in Python with strong GPU\nacceleration."
        },
        {
            "name": "pil",
            "description": "The Python Imaging Library (PIL) adds image processing capabilities to\nyour Python interpreter. This library supports many file formats, and\nprovides powerful image processing and graphics capabilities."
        },
        {
            "name": "py-accimage",
            "description": "An accelerated Image loader and preprocessor leveraging Intel IPP.\naccimage mimics the PIL API and can be used as a backend for\ntorchvision."
        },
        {
            "name": "libpng",
            "description": "libpng is the official PNG reference library."
        },
        {
            "name": "jpeg",
            "description": "libjpeg-turbo is a fork of the original IJG libjpeg which uses SIMD to\naccelerate baseline JPEG compression and decompression. libjpeg is a\nlibrary that implements JPEG image encoding, decoding and transcoding."
        },
        {
            "name": "ffmpeg",
            "description": "FFmpeg is a complete, cross-platform solution to record, convert and\nstream audio and video."
        }
    ],
    "dependent_to": [
        {
            "name": "py-fastai",
            "description": "You can use fastai without any installation by using Google Colab. In\nfact, every page of this documentation is also available as an\ninteractive notebook - click \"Open in colab\" at the top of any page to\nopen it (be sure to change the Colab runtime to \"GPU\" to have it run\nfast!) See the fast.ai documentation on Using Colab for more\ninformation."
        },
        {
            "name": "py-torchmeta",
            "description": "A collection of extensions and data-loaders for few-shot learning &\nmeta-learning in PyTorch. Torchmeta contains popular meta-learning\nbenchmarks, fully compatible with both torchvision and PyTorch's\nDataLoader."
        },
        {
            "name": "py-mxfold2",
            "description": "MXfold2: RNA secondary structure prediction using deep learning with\nthermodynamic integration"
        },
        {
            "name": "minigan",
            "description": "miniGAN is a generative adversarial network code developed as part of\nthe Exascale Computing Project's (ECP) ExaLearn project at Sandia\nNational Laboratories."
        },
        {
            "name": "py-timm",
            "description": "(Unofficial) PyTorch Image Models."
        },
        {
            "name": "cradl",
            "description": "The CRADL proxy application captured performance metrics during\ninference on data from multiphysics codes, specifically ALE\nhydrodynamics codes."
        },
        {
            "name": "py-horovod",
            "description": "Horovod is a distributed deep learning training framework for\nTensorFlow, Keras, PyTorch, and Apache MXNet."
        },
        {
            "name": "py-segmentation-models-pytorch",
            "description": "Python library with Neural Networks for Image Segmentation based on\nPyTorch."
        },
        {
            "name": "py-pretrainedmodels",
            "description": "Pretrained models for Pytorch."
        },
        {
            "name": "py-ctgan",
            "description": "CTGAN is a collection of Deep Learning based Synthetic Data Generators\nfor single table data, which are able to learn from real data and\ngenerate synthetic clones with high fidelity."
        },
        {
            "name": "py-torchgeo",
            "description": "TorchGeo: datasets, transforms, and models for geospatial data. TorchGeo\nis a PyTorch domain library, similar to torchvision, that provides\ndatasets, transforms, samplers, and pre-trained models specific to\ngeospatial data."
        }
    ]
}
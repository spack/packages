{
    "name": "warpx",
    "aliases": [],
    "versions": [
        {
            "name": "develop",
            "branch": "development"
        },
        {
            "name": "21.08",
            "sha256": "6128a32cfd075bc63d08eebea6d4f62d33ce0570f4fd72330a71023ceacccc86"
        },
        {
            "name": "21.07",
            "sha256": "a8740316d813c365715f7471201499905798b50bd94950d33f1bd91478d49561"
        },
        {
            "name": "21.06",
            "sha256": "a26039dc4061da45e779dd5002467c67a533fc08d30841e01e7abb3a890fbe30"
        },
        {
            "name": "21.05",
            "sha256": "f835f0ae6c5702550d23191aa0bb0722f981abb1460410e3d8952bc3d945a9fc"
        },
        {
            "name": "21.04",
            "sha256": "51d2d8b4542eada96216e8b128c0545c4b7527addc2038efebe586c32c4020a0"
        }
    ],
    "build_system": "CMakePackage",
    "conflicts": [
        {
            "name": "+ipo",
            "spec": "^cmake@:3.8",
            "description": "+ipo is not supported by CMake < 3.9"
        },
        {
            "name": "~qed +qedtablegen",
            "spec": "",
            "description": "WarpX PICSAR QED table generation needs +qed"
        },
        {
            "name": "compute=sycl",
            "spec": "+psatd",
            "description": "WarpX spectral solvers are not yet tested with SYCL (use \"warpx ~psatd\")"
        }
    ],
    "variants": [
        {
            "name": "build_type",
            "default": "RelWithDebInfo",
            "description": "CMake build type"
        },
        {
            "name": "ipo",
            "default": false,
            "description": "CMake interprocedural optimization"
        },
        {
            "name": "app",
            "default": true,
            "description": "Build the WarpX executable application"
        },
        {
            "name": "ascent",
            "default": false,
            "description": "Enable Ascent in situ vis"
        },
        {
            "name": "compute",
            "default": "omp",
            "description": "On-node, accelerated computing backend"
        },
        {
            "name": "dims",
            "default": "3",
            "description": "Number of spatial dimensions"
        },
        {
            "name": "eb",
            "default": false,
            "description": "Embedded boundary support (in development)"
        },
        {
            "name": "lib",
            "default": true,
            "description": "Build WarpX as a shared library"
        },
        {
            "name": "mpi",
            "default": true,
            "description": "Enable MPI support"
        },
        {
            "name": "mpithreadmultiple",
            "default": true,
            "description": "MPI thread-multiple support, i.e. for async_io"
        },
        {
            "name": "openpmd",
            "default": true,
            "description": "Enable openPMD I/O"
        },
        {
            "name": "precision",
            "default": "double",
            "description": "Floating point precision (single/double)"
        },
        {
            "name": "psatd",
            "default": true,
            "description": "Enable PSATD solver support"
        },
        {
            "name": "qed",
            "default": true,
            "description": "Enable QED support"
        },
        {
            "name": "qedtablegen",
            "default": false,
            "description": "QED table generation support"
        },
        {
            "name": "shared",
            "default": true,
            "description": "Build a shared version of the library"
        },
        {
            "name": "tprof",
            "default": true,
            "description": "Enable tiny profiling features"
        }
    ],
    "homepage": "https://ecp-warpx.github.io",
    "maintainers": [
        "ax3l",
        "dpgrote",
        "MaxThevenet",
        "RemiLehe"
    ],
    "patches": [],
    "resources": [],
    "description": "WarpX is an advanced electromagnetic Particle-In-Cell code. It supports\nmany features including Perfectly-Matched Layers (PML) and mesh\nrefinement. In addition, WarpX is a highly-parallel and highly-optimized\ncode and features hybrid OpenMP/MPI parallelization, advanced\nvectorization techniques and load balancing capabilities. For WarpX'\nPython bindings and PICMI input support, see the 'py-warpx' package.\n",
    "dependencies": [
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "ascent",
            "description": "Ascent is an open source many-core capable lightweight in situ\nvisualization and analysis infrastructure for multi-physics HPC\nsimulations."
        },
        {
            "name": "blaspp",
            "description": "C++ API for the Basic Linear Algebra Subroutines. Developed by the\nInnovative Computing Laboratory at the University of Tennessee,\nKnoxville."
        },
        {
            "name": "boost",
            "description": "Boost provides free peer-reviewed portable C++ source libraries,\nemphasizing libraries that work well with the C++ Standard Library.\nBoost libraries are intended to be widely useful, and usable across a\nbroad spectrum of applications. The Boost license encourages both\ncommercial and non-commercial use."
        },
        {
            "name": "cuda",
            "description": "CUDA is a parallel computing platform and programming model invented by\nNVIDIA. It enables dramatic increases in computing performance by\nharnessing the power of the graphics processing unit (GPU). Note: This\npackage does not currently install the drivers necessary to run CUDA.\nThese will need to be installed manually. See:\nhttps://docs.nvidia.com/cuda/ for details."
        },
        {
            "name": "fftw",
            "description": "FFTW is a C subroutine library for computing the discrete Fourier\ntransform (DFT) in one or more dimensions, of arbitrary input size, and\nof both real and complex data (as well as of even/odd data, i.e. the\ndiscrete cosine/sine transforms or DCT/DST). We believe that FFTW, which\nis free software, should become the FFT library of choice for most\napplications."
        },
        {
            "name": "lapackpp",
            "description": "LAPACK++: C++ API for the LAPACK Linear Algebra Package. Developed by\nthe Innovative Computing Laboratory at the University of Tennessee,\nKnoxville."
        },
        {
            "name": "mpi",
            "description": "MVAPICH2-GDR is an optimized version of the MVAPICH2 MPI library for\nGPU-enabled HPC and Deep Learning Applications. MVAPICH2-GDR is not\ninstallable from source and is only available through a binary mirror.\nIf you do not find the binary you're looking for, send us an email at\nmvapich@cse.ohio-state.edu. The binary mirror url is:\nhttp://mvapich.cse.ohio-state.edu/download/mvapich/spack-\nmirror/mvapich2-gdr/"
        },
        {
            "name": "openpmd-api",
            "description": "C++ & Python API for Scientific I/O"
        },
        {
            "name": "pkgconfig",
            "description": "pkg-config is a helper tool used when compiling applications and\nlibraries"
        },
        {
            "name": "rocfft",
            "description": "Radeon Open Compute FFT library"
        },
        {
            "name": "rocprim",
            "description": "Radeon Open Compute Parallel Primitives Library"
        },
        {
            "name": "rocrand",
            "description": "The rocRAND project provides functions that generate pseudo-random and\nquasi-random numbers."
        },
        {
            "name": "llvm-openmp",
            "description": "The OpenMP subproject of LLVM contains the components required to build\nan executable OpenMP program that are outside the compiler itself."
        }
    ],
    "dependent_to": [
        {
            "name": "py-warpx",
            "description": "WarpX is an advanced electromagnetic Particle-In-Cell code. It supports\nmany features including Perfectly-Matched Layers (PML) and mesh\nrefinement. In addition, WarpX is a highly-parallel and highly-optimized\ncode and features hybrid OpenMP/MPI parallelization, advanced\nvectorization techniques and load balancing capabilities. These are the\nPython bindings of WarpX with PICMI input support. See the C++ 'warpx'\npackage for the WarpX application and library."
        }
    ]
}
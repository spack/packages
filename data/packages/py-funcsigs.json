{
    "name": "py-funcsigs",
    "aliases": [],
    "versions": [
        {
            "name": "1.0.2",
            "sha256": "a7bb0f2cf3a3fd1ab2732cb49eba4252c2af4240442415b4abce3b87022a8f50"
        },
        {
            "name": "0.4",
            "sha256": "d83ce6df0b0ea6618700fe1db353526391a8a3ada1b7aba52fed7a61da772033"
        }
    ],
    "latest_version": "1.0.2",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [],
    "homepage": "https://pypi.org/project/funcsigs/",
    "maintainers": [
        "adamjstewart"
    ],
    "patches": [],
    "resources": [],
    "description": "Python function signatures from PEP362 for Python 2.6, 2.7 and 3.2.\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        }
    ],
    "dependent_to": [
        {
            "name": "py-apache-beam",
            "description": "Apache Beam is a unified programming model for Batch and Streaming."
        },
        {
            "name": "py-pytest",
            "description": "pytest: simple powerful testing with Python."
        },
        {
            "name": "py-numba",
            "description": "NumPy aware dynamic Python compiler using LLVM"
        },
        {
            "name": "py-tensorflow-estimator",
            "description": "TensorFlow Estimator is a high-level TensorFlow API that greatly\nsimplifies machine learning programming."
        },
        {
            "name": "py-mock",
            "description": "mock is a library for testing in Python. It allows you to replace parts\nof your system under test with mock objects and make assertions about\nhow they have been used."
        },
        {
            "name": "py-symfit",
            "description": "Symbolic Fitting; fitting as it should be."
        }
    ]
}
{
    "name": "py-scikit-learn",
    "aliases": [],
    "versions": [
        {
            "name": "master",
            "branch": "master"
        },
        {
            "name": "1.1.1",
            "sha256": "3e77b71e8e644f86c8b5be7f1c285ef597de4c384961389ee3e9ca36c445b256"
        },
        {
            "name": "1.1.0",
            "sha256": "80f9904f5b1356adfc32406725dd94c8cc9c8d265047d98390033a6c238cbb29"
        },
        {
            "name": "1.0.2",
            "sha256": "b5870959a5484b614f26d31ca4c17524b1b0317522199dc985c3b4256e030767"
        },
        {
            "name": "1.0.1",
            "sha256": "ac2ca9dbb754d61cfe1c83ba8483498ef951d29b93ec09d6f002847f210a99da"
        },
        {
            "name": "1.0",
            "sha256": "776800194e757cd212b47cd05907e0eb67a554ad333fe76776060dbb729e3427"
        },
        {
            "name": "0.24.2",
            "sha256": "d14701a12417930392cd3898e9646cf5670c190b933625ebe7511b1f7d7b8736"
        },
        {
            "name": "0.24.1",
            "sha256": "a0334a1802e64d656022c3bfab56a73fbd6bf4b1298343f3688af2151810bbdf"
        },
        {
            "name": "0.24.0",
            "sha256": "076369634ee72b5a5941440661e2f306ff4ac30903802dc52031c7e9199ac640"
        },
        {
            "name": "0.23.2",
            "sha256": "20766f515e6cd6f954554387dfae705d93c7b544ec0e6c6a5d8e006f6f7ef480"
        },
        {
            "name": "0.23.1",
            "sha256": "e3fec1c8831f8f93ad85581ca29ca1bb88e2da377fb097cf8322aa89c21bc9b8"
        },
        {
            "name": "0.23.0",
            "sha256": "639a53df6273acc6a7510fb0c658b94e0c70bb13dafff9d14932c981ff9baff4"
        },
        {
            "name": "0.22.2.post1",
            "sha256": "57538d138ba54407d21e27c306735cbd42a6aae0df6a5a30c7a6edde46b0017d"
        },
        {
            "name": "0.22.1",
            "sha256": "51ee25330fc244107588545c70e2f3570cfc4017cff09eed69d6e1d82a212b7d"
        },
        {
            "name": "0.22",
            "sha256": "314abf60c073c48a1e95feaae9f3ca47a2139bd77cebb5b877c23a45c9e03012"
        },
        {
            "name": "0.21.3",
            "sha256": "eb9b8ebf59eddd8b96366428238ab27d05a19e89c5516ce294abc35cea75d003"
        },
        {
            "name": "0.21.2",
            "sha256": "0aafc312a55ebf58073151b9308761a5fcfa45b7f7730cea4b1f066f824c72db"
        },
        {
            "name": "0.21.1",
            "sha256": "228d0611e69e5250946f8cd7bbefec75347950f0ca426d0c518db8f06583f660"
        },
        {
            "name": "0.20.3",
            "sha256": "c503802a81de18b8b4d40d069f5e363795ee44b1605f38bc104160ca3bfe2c41"
        },
        {
            "name": "0.20.2",
            "sha256": "bc5bc7c7ee2572a1edcb51698a6caf11fae554194aaab9a38105d9ec419f29e6"
        },
        {
            "name": "0.20.0",
            "sha256": "97d1d971f8ec257011e64b7d655df68081dd3097322690afa1a71a1d755f8c18"
        },
        {
            "name": "0.19.2",
            "sha256": "b276739a5f863ccacb61999a3067d0895ee291c95502929b2ae56ea1f882e888"
        },
        {
            "name": "0.19.1",
            "sha256": "5ca0ad32ee04abe0d4ba02c8d89d501b4e5e0304bdf4d45c2e9875a735b323a0"
        },
        {
            "name": "0.18.1",
            "sha256": "1eddfc27bb37597a5d514de1299981758e660e0af56981c0bfdf462c9568a60c"
        },
        {
            "name": "0.15.2",
            "sha256": "1a8a881f6f13edc0ac58931ce21f899eb7920af50aa08802413d1239e2aa5fa6"
        },
        {
            "name": "0.16.1",
            "sha256": "c0721e295056c95c7002e05726f2bd271a7923e88bdeab34a2b60aac2b0ee6e4"
        },
        {
            "name": "0.17.1",
            "sha256": "9f4cf58e57d81783289fc503caaed1f210bab49b7a6f680bf3c04b1e0a96e5f0"
        },
        {
            "name": "0.13.1",
            "sha256": "a6e4759a779ba792435d096c882a0d66ee29d369755c09209f1a4e50877bdc94"
        }
    ],
    "latest_version": "1.1.1",
    "build_system": "PythonPackage",
    "conflicts": [
        {
            "name": "~openmp",
            "spec": "@:999",
            "description": "Only master supports ~openmp"
        }
    ],
    "variants": [
        {
            "name": "openmp",
            "default": true,
            "description": "Build with OpenMP support"
        }
    ],
    "homepage": "https://pypi.org/project/scikit-learn/",
    "maintainers": [
        "adamjstewart"
    ],
    "patches": [],
    "resources": [],
    "description": "A set of python modules for machine learning and data mining.\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-numpy",
            "description": "NumPy is the fundamental package for scientific computing with Python.\nIt contains among other things: a powerful N-dimensional array object,\nsophisticated (broadcasting) functions, tools for integrating C/C++ and\nFortran code, and useful linear algebra, Fourier transform, and random\nnumber capabilities"
        },
        {
            "name": "py-scipy",
            "description": "SciPy (pronounced \"Sigh Pie\") is a Scientific Library for Python. It\nprovides many user-friendly and efficient numerical routines such as\nroutines for numerical integration and optimization."
        },
        {
            "name": "py-joblib",
            "description": "Lightweight pipelining with Python functions."
        },
        {
            "name": "py-threadpoolctl",
            "description": "Python helpers to limit the number of threads used in the threadpool-\nbacked of common native libraries used for scientific computing and data\nscience (e.g. BLAS and OpenMP)."
        },
        {
            "name": "py-cython",
            "description": "The Cython compiler for writing C extensions for the Python language."
        },
        {
            "name": "llvm-openmp",
            "description": "The OpenMP subproject of LLVM contains the components required to build\nan executable OpenMP program that are outside the compiler itself."
        },
        {
            "name": "py-matplotlib",
            "description": "Matplotlib is a comprehensive library for creating static, animated, and\ninteractive visualizations in Python."
        },
        {
            "name": "py-scikit-image",
            "description": "Image processing algorithms for SciPy, including IO, morphology,\nfiltering, warping, color manipulation, object detection, etc."
        },
        {
            "name": "py-pandas",
            "description": "pandas is a fast, powerful, flexible and easy to use open source data\nanalysis and manipulation tool, built on top of the Python programming\nlanguage."
        },
        {
            "name": "py-pytest",
            "description": "pytest: simple powerful testing with Python."
        },
        {
            "name": "py-pyamg",
            "description": "PyAMG is a library of Algebraic Multigrid (AMG) solvers with a\nconvenient Python interface."
        }
    ],
    "dependent_to": [
        {
            "name": "py-skl2onnx",
            "description": "Convert scikit-learn models to ONNX"
        },
        {
            "name": "py-scikit-optimize",
            "description": "Scikit-Optimize, or skopt, is a simple and efficient library to minimize\n(very) expensive and noisy black-box functions. It implements several\nmethods for sequential model-based optimization. skopt aims to be\naccessible and easy to use in many contexts. The library is built on top\nof NumPy, SciPy and Scikit-Learn."
        },
        {
            "name": "py-nibetaseries",
            "description": "BetaSeries Correlations implemented in Nipype."
        },
        {
            "name": "py-hep-ml",
            "description": "Machine Learning for High Energy Physics"
        },
        {
            "name": "py-tpot",
            "description": "A Python Automated Machine Learning tool that optimizes machine\nlearning pipelines using genetic programming."
        },
        {
            "name": "py-librosa",
            "description": "A python package for music and audio analysis."
        },
        {
            "name": "py-sdmetrics",
            "description": "The SDMetrics library provides a set of dataset-agnostic tools for\nevaluating the quality of a synthetic database by comparing it to the\nreal database that it is modeled after."
        },
        {
            "name": "py-torch-geometric",
            "description": "PyTorch Geometric (PyG) is a geometric deep learning extension library\nfor PyTorch. It consists of various methods for deep learning on graphs\nand other irregular structures, also known as geometric deep learning,\nfrom a variety of published papers. In addition, it consists of an easy-\nto-use mini-batch loader for many small and single giant graphs, multi\ngpu-support, a large number of common benchmark datasets (based on\nsimple interfaces to create your own), and helpful transforms, both for\nlearning on arbitrary graphs as well as on 3D meshes or point clouds."
        },
        {
            "name": "py-mapclassify",
            "description": "Classification Schemes for Choropleth Maps."
        },
        {
            "name": "py-dp-gp-cluster",
            "description": "DP_GP_cluster clusters genes by expression over a time course using a\nDirichlet process Gaussian process model."
        },
        {
            "name": "py-dask-glm",
            "description": "Dask-glm is a library for fitting Generalized Linear Models on large\ndatasets."
        },
        {
            "name": "py-fastai",
            "description": "You can use fastai without any installation by using Google Colab. In\nfact, every page of this documentation is also available as an\ninteractive notebook - click \"Open in colab\" at the top of any page to\nopen it (be sure to change the Colab runtime to \"GPU\" to have it run\nfast!) See the fast.ai documentation on Using Colab for more\ninformation."
        },
        {
            "name": "py-lightgbm",
            "description": "LightGBM is a gradient boosting framework that uses tree based learning\nalgorithms."
        },
        {
            "name": "candle-benchmarks",
            "description": "ECP-CANDLE Benchmarks"
        },
        {
            "name": "py-neurokit2",
            "description": "The Python Toolbox for Neurophysiological Signal Processing. This\npackage is the continuation of NeuroKit 1. It's a user-friendly package\nproviding easy access to advanced biosignal processing routines.\nResearchers and clinicians without extensive knowledge of programming or\nbiomedical signal processing can analyze physiological data with only\ntwo lines of code."
        },
        {
            "name": "py-dask-ml",
            "description": "Scalable Machine Learning with Dask."
        },
        {
            "name": "py-neurora",
            "description": "A Python Toolbox for Multimodal Neural Data Representation Analysis."
        },
        {
            "name": "py-kmodes",
            "description": "Python implementations of the k-modes and k-prototypes clustering\nalgorithms for clustering categorical data."
        },
        {
            "name": "py-pyts",
            "description": "pyts is a Python package for time series classification. It aims to make\ntime series classification easily accessible by providing preprocessing\nand utility tools, and implementations of state-of-the-art algorithms.\nMost of these algorithms transform time series, thus pyts provides\nseveral tools to perform these transformations."
        },
        {
            "name": "py-scikit-learn-extra",
            "description": "A set of useful tools compatible with scikit-learn scikit-learn-extra is\na Python module for machine learning that extends scikit-learn. It\nincludes algorithms that are useful but do not satisfy the scikit-learn\ninclusion criteria, for instance due to their novelty or lower citation\nnumber."
        },
        {
            "name": "py-abcpy",
            "description": "ABCpy is a highly modular, scientific library for approximate Bayesian\ncomputation (ABC) written in Python. It is designed to run all included\nABC algorithms in parallel, either using multiple cores of a single\ncomputer or using an Apache Spark or MPI enabled cluster."
        },
        {
            "name": "py-cuml",
            "description": "cuML is a suite of libraries that implement machine learning algorithms\nand mathematical primitives functions that share compatible APIs with\nother RAPIDS projects."
        },
        {
            "name": "py-dh-scikit-optimize",
            "description": "A Modified version of scikit-optimize a Sequential model-based\noptimization toolbox for DeepHyper. Scikit-Optimize, or skopt, is a\nsimple and efficient library to minimize (very) expensive and noisy\nblack-box functions. It implements several methods for sequential model-\nbased optimization. skopt aims to be accessible and easy to use in many\ncontexts. The library is built on top of NumPy, SciPy and Scikit-Learn."
        },
        {
            "name": "py-bayesian-optimization",
            "description": "Pure Python implementation of bayesian global optimization with gaussian\nprocesses."
        },
        {
            "name": "py-ctgan",
            "description": "CTGAN is a collection of Deep Learning based Synthetic Data Generators\nfor single table data, which are able to learn from real data and\ngenerate synthetic clones with high fidelity."
        },
        {
            "name": "py-torchgeo",
            "description": "TorchGeo: datasets, transforms, and models for geospatial data. TorchGeo\nis a PyTorch domain library, similar to torchvision, that provides\ndatasets, transforms, samplers, and pre-trained models specific to\ngeospatial data."
        },
        {
            "name": "py-angel",
            "description": "ANGEL: Robust Open Reading Frame prediction"
        },
        {
            "name": "py-mne",
            "description": "MNE python project for MEG and EEG data analysis."
        },
        {
            "name": "gptune",
            "description": "GPTune is an autotuning framework that relies on multitask and transfer\nlearnings to help solve the underlying black-box optimization problem\nusing Bayesian optimization methodologies."
        },
        {
            "name": "partitionfinder",
            "description": "PartitionFinder is free open source software to select best-fit\npartitioning schemes and models of molecular evolution for phylogenetic\nanalyses."
        },
        {
            "name": "py-seqeval",
            "description": "seqeval is a Python framework for sequence labeling evaluation. seqeval\ncan evaluate the performance of chunking tasks such as named-entity\nrecognition, part-of-speech tagging, semantic role labeling and so on."
        },
        {
            "name": "py-niworkflows",
            "description": "Common workflows for MRI (anatomical, functional, diffusion, etc)"
        },
        {
            "name": "py-mikado",
            "description": "Mikado is a lightweight Python3 pipeline whose purpose is to facilitate\nthe identification of expressed loci from RNA-Seq data * and to select\nthe best models in each locus."
        },
        {
            "name": "tppred",
            "description": "TPPRED is a software package for the prediction of mitochondrial\ntargeting peptides from protein primary sequence."
        },
        {
            "name": "py-xgboost",
            "description": "XGBoost is an optimized distributed gradient boosting library designed\nto be highly efficient, flexible and portable."
        },
        {
            "name": "py-nistats",
            "description": "Modeling and Statistical analysis of fMRI data in Python."
        },
        {
            "name": "py-intensity-normalization",
            "description": "Normalize intensities of images from various MRI modalities"
        },
        {
            "name": "py-hyperopt",
            "description": "Hyperopt is a Python library for serial and parallel optimization over\nawkward search spaces, which may include real-valued, discrete, and\nconditional dimensions."
        },
        {
            "name": "py-fracridge",
            "description": "Fractional Ridge Regression."
        },
        {
            "name": "py-python-picard",
            "description": "Preconditoned ICA for Real Data."
        },
        {
            "name": "py-rsatoolbox",
            "description": "Representational Similarity Analysis (RSA) in Python."
        },
        {
            "name": "callflow",
            "description": "CallFlow is an interactive visual analysis tool that provides a high-\nlevel overview of CCTs together with semantic refinement operations to\nprogressively explore the CCTs."
        },
        {
            "name": "py-glmnet",
            "description": "This is a Python wrapper for the fortran library used in the R package\nglmnet."
        },
        {
            "name": "py-ytopt",
            "description": "Ytopt package implements search using Random Forest (SuRF), an\nautotuning search method developed within Y-Tune ECP project."
        },
        {
            "name": "py-nilearn",
            "description": "Statistical learning for neuroimaging in Python."
        },
        {
            "name": "py-mlxtend",
            "description": "Mlxtend (machine learning extensions) is a Python library of useful\ntools for the day-to-day data science tasks."
        },
        {
            "name": "py-hdbscan",
            "description": "HDBSCAN - Hierarchical Density-Based Spatial Clustering of Applications\nwith Noise. Performs DBSCAN over varying epsilon values and integrates\nthe result to find a clustering that gives the best stability over\nepsilon. This allows HDBSCAN to find clusters of varying densities\n(unlike DBSCAN), and be more robust to parameter selection. In practice\nthis means that HDBSCAN returns a good clustering straight away with\nlittle or no parameter tuning -- and the primary parameter, minimum\ncluster size, is intuitive and easy to select. HDBSCAN is ideal for\nexploratory data analysis; it's a fast and robust algorithm that you can\ntrust to return meaningful clusters (if there are any)."
        },
        {
            "name": "py-convokit",
            "description": "This toolkit contains tools to extract conversational features and\nanalyze social phenomena in conversations, using a single unified\ninterface inspired by (and compatible with) scikit-learn."
        },
        {
            "name": "py-gpytorch",
            "description": "GPyTorch is a Gaussian process library implemented using PyTorch.\nGPyTorch is designed for creating scalable, flexible, and modular\nGaussian process models with ease."
        },
        {
            "name": "py-smac",
            "description": "SMAC is a tool for algorithm configuration to optimize the parameters of\narbitrary algorithms, including hyperparameter optimization of Machine\nLearning algorithms."
        },
        {
            "name": "py-meldmd",
            "description": "MELD is a tool for inferring the structure of biomolecules from sparse,\nambiguous, or noisy data."
        },
        {
            "name": "py-mdanalysis",
            "description": "MDAnalysis is a Python toolkit to analyze molecular dynamics\ntrajectories generated by a wide range of popular simulation packages\nincluding DL_Poly, CHARMM, Amber, NAMD, LAMMPS, and Gromacs. (See the\nlists of supported trajectory formats and topology formats.)"
        }
    ]
}
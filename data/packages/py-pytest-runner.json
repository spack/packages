{
    "name": "py-pytest-runner",
    "aliases": [],
    "versions": [
        {
            "name": "5.3.1",
            "sha256": "0fce5b8dc68760f353979d99fdd6b3ad46330b6b1837e2077a89ebcf204aac91"
        },
        {
            "name": "5.1",
            "sha256": "25a013c8d84f0ca60bb01bd11913a3bcab420f601f0f236de4423074af656e7a"
        },
        {
            "name": "2.11.1",
            "sha256": "983a31eab45e375240e250161a556163bc8d250edaba97960909338c273a89b3"
        }
    ],
    "latest_version": "5.3.1",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [],
    "homepage": "https://github.com/pytest-dev/pytest-runner",
    "maintainers": [
        "adamjstewart"
    ],
    "patches": [],
    "resources": [],
    "description": "Invoke py.test as distutils command with dependency resolution.\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-setuptools-scm",
            "description": "The blessed package to manage your versions by scm tags."
        }
    ],
    "dependent_to": [
        {
            "name": "py-torch-scatter",
            "description": "This package consists of a small extension library of highly optimized\nsparse update (scatter and segment) operations for the use in PyTorch,\nwhich are missing in the main package."
        },
        {
            "name": "py-grandalf",
            "description": "Grandalf is a Python package made for experimentations with graph\ndrawing algorithms."
        },
        {
            "name": "py-cf-units",
            "description": "Units of measure as required by the Climate and Forecast (CF) metadata\nconventions."
        },
        {
            "name": "py-torch-geometric",
            "description": "PyTorch Geometric (PyG) is a geometric deep learning extension library\nfor PyTorch. It consists of various methods for deep learning on graphs\nand other irregular structures, also known as geometric deep learning,\nfrom a variety of published papers. In addition, it consists of an easy-\nto-use mini-batch loader for many small and single giant graphs, multi\ngpu-support, a large number of common benchmark datasets (based on\nsimple interfaces to create your own), and helpful transforms, both for\nlearning on arbitrary graphs as well as on 3D meshes or point clouds."
        },
        {
            "name": "py-cfgrib",
            "description": "Python interface to map GRIB files to the NetCDF Common Data Model\nfollowing the CF Convention using ecCodes."
        },
        {
            "name": "py-deepecho",
            "description": "DeepEcho is a Synthetic Data Generation Python library for mixed-type,\nmultivariate time series."
        },
        {
            "name": "py-kaldiio",
            "description": "A pure python module for reading and writing kaldi ark files"
        },
        {
            "name": "py-spdlog",
            "description": "The py-spdlog package provides a Python wrapper to the C++ spdlog\nlibrary."
        },
        {
            "name": "py-onnx",
            "description": "Open Neural Network Exchange (ONNX) is an open ecosystem that empowers\nAI developers to choose the right tools as their project evolves. ONNX\nprovides an open source format for AI models, both deep learning and\ntraditional ML. It defines an extensible computation graph model, as\nwell as definitions of built-in operators and standard data types.\nCurrently we focus on the capabilities needed for inferencing (scoring)."
        },
        {
            "name": "py-neurokit2",
            "description": "The Python Toolbox for Neurophysiological Signal Processing. This\npackage is the continuation of NeuroKit 1. It's a user-friendly package\nproviding easy access to advanced biosignal processing routines.\nResearchers and clinicians without extensive knowledge of programming or\nbiomedical signal processing can analyze physiological data with only\ntwo lines of code."
        },
        {
            "name": "py-omegaconf",
            "description": "A hierarchical configuration system, with support for merging\nconfigurations from multiple sources (YAML config files,\ndataclasses/objects and CLI arguments) providing a consistent API\nregardless of how the configuration was created."
        },
        {
            "name": "py-qsymm",
            "description": "Qsymm is a symmetry finder and symmetric Hamiltonian generator. It\nautomatically generates model Hamiltonians from symmetry constraints and\nfinds the full symmetry group of your Hamiltonian."
        },
        {
            "name": "py-datrie",
            "description": "Super-fast, efficiently stored Trie for Python (2.x and 3.x). Uses\nlibdatrie."
        },
        {
            "name": "py-overpy",
            "description": "A Python Wrapper to access the Overpass API."
        },
        {
            "name": "py-audioread",
            "description": "cross-library (GStreamer + Core Audio + MAD + FFmpeg) audio decoding for\nPython."
        },
        {
            "name": "py-kornia",
            "description": "Open Source Differentiable Computer Vision Library for PyTorch."
        },
        {
            "name": "py-awkward0",
            "description": "Manipulate arrays of complex data structures as easily as Numpy. Awkward\nArray is a pure Python+Numpy library for manipulating complex data\nstructures as you would Numpy arrays."
        },
        {
            "name": "py-ww",
            "description": "Wrappers for Python builtins with higher-level APIs."
        },
        {
            "name": "py-pyinstrument",
            "description": "Call stack profiler for Python. Shows you why your code is slow!"
        },
        {
            "name": "py-torch-sparse",
            "description": "This package consists of a small extension library of optimized sparse\nmatrix operations with autograd support."
        },
        {
            "name": "py-torch-spline-conv",
            "description": "This is a PyTorch implementation of the spline-based convolution\noperator of SplineCNN."
        },
        {
            "name": "py-gpustat",
            "description": "An utility to monitor NVIDIA GPU status and usage."
        },
        {
            "name": "py-dictdiffer",
            "description": "Dictdiffer is a helper module that helps you to diff and patch\ndictionares."
        },
        {
            "name": "py-pythran",
            "description": "Ahead of Time compiler for numeric kernels."
        },
        {
            "name": "py-intensity-normalization",
            "description": "Normalize intensities of images from various MRI modalities"
        },
        {
            "name": "py-chardet",
            "description": "Universal encoding detector for Python 2 and 3"
        },
        {
            "name": "py-torch-cluster",
            "description": "This package consists of a small extension library of highly optimized\ngraph cluster algorithms for the use in PyTorch."
        },
        {
            "name": "py-uproot3",
            "description": "ROOT I/O in pure Python and Numpy. uproot is a reader and a writer of\nthe ROOT file format using only Python and Numpy. Unlike the standard\nC++ ROOT implementation, uproot is only an I/O library, primarily\nintended to stream data into machine learning libraries in Python.\nUnlike PyROOT and root_numpy, uproot does not depend on C++ ROOT.\nInstead, it uses Numpy to cast blocks of data from the ROOT file as\nNumpy arrays."
        },
        {
            "name": "py-hepdata-lib",
            "description": "Library for getting your data into HEPData"
        }
    ]
}
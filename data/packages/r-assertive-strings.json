{
    "name": "r-assertive-strings",
    "aliases": [],
    "versions": [
        {
            "name": "0.0-3",
            "sha256": "d541d608a01640347d661cc9a67af8202904142031a20caa270f1c83d0ccd258"
        }
    ],
    "build_system": "RPackage",
    "conflicts": [],
    "variants": [],
    "homepage": "https://bitbucket.org/richierocks/assertive.strings",
    "maintainers": [
        "glennpj"
    ],
    "patches": [],
    "resources": [],
    "description": "assertive.strings: Assertions to Check Properties of Strings A set of\npredicates and assertions for checking the properties of strings. This\nis mainly for use by other package developers who want to include run-\ntime testing features in their own packages. End-users will usually want\nto use assertive directly.\n",
    "dependencies": [
        {
            "name": "r",
            "description": "R is 'GNU S', a freely available language and environment for\nstatistical computing and graphics which provides a wide variety of\nstatistical and graphical techniques: linear and nonlinear modelling,\nstatistical tests, time series analysis, classification, clustering,\netc. Please consult the R project homepage for further information."
        },
        {
            "name": "r-assertive-base",
            "description": "assertive.base: A Lightweight Core of the 'assertive' Package A minimal\nset of predicates and assertions used by the assertive package. This is\nmainly for use by other package developers who want to include run-time\ntesting features in their own packages. End-users will usually want to\nuse assertive directly."
        },
        {
            "name": "r-assertive-types",
            "description": "assertive.types: Assertions to Check Types of Variables A set of\npredicates and assertions for checking the types of variables. This is\nmainly for use by other package developers who want to include run-time\ntesting features in their own packages. End-users will usually want to\nuse assertive directly."
        },
        {
            "name": "r-stringi",
            "description": "Character String Processing Facilities A multitude of character\nstring/text/natural language processing tools: pattern searching (e.g.,\nwith 'Java'-like regular expressions or the 'Unicode' collation\nalgorithm), random string generation, case mapping, string\ntransliteration, concatenation, sorting, padding, wrapping, Unicode\nnormalisation, date-time formatting and parsing, and many more. They are\nfast, consistent, convenient, and - owing to the use of the 'ICU'\n(International Components for Unicode) library - portable across all\nlocales and platforms."
        }
    ],
    "dependent_to": [
        {
            "name": "r-assertive-data-us",
            "description": "assertive.data.us: Assertions to Check Properties of Strings A set of\npredicates and assertions for checking the properties of US-specific\ncomplex data types. This is mainly for use by other package developers\nwho want to include run-time testing features in their own packages.\nEnd-users will usually want to use assertive directly."
        },
        {
            "name": "r-assertive-data-uk",
            "description": "assertive.data.uk: Assertions to Check Properties of Strings A set of\npredicates and assertions for checking the properties of UK-specific\ncomplex data types. This is mainly for use by other package developers\nwho want to include run-time testing features in their own packages.\nEnd-users will usually want to use assertive directly."
        },
        {
            "name": "r-assertive",
            "description": "assertive: Readable Check Functions to Ensure Code Integrity Lots of\npredicates (is_* functions) to check the state of your variables, and\nassertions (assert_* functions) to throw errors if they aren't in the\nright form."
        },
        {
            "name": "r-assertive-data",
            "description": "assertive.data: Assertions to Check Properties of Data A set of\npredicates and assertions for checking the properties of (country\nindependent) complex data types. This is mainly for use by other package\ndevelopers who want to include run-time testing features in their own\npackages. End-users will usually want to use assertive directly."
        }
    ]
}
{
    "name": "py-joblib",
    "aliases": [],
    "versions": [
        {
            "name": "1.1.0",
            "sha256": "4158fcecd13733f8be669be0683b96ebdbbd38d23559f54dca7205aea1bf1e35"
        },
        {
            "name": "1.0.1",
            "sha256": "9c17567692206d2f3fb9ecf5e991084254fe631665c450b443761c4186a613f7"
        },
        {
            "name": "1.0.0",
            "sha256": "7ad866067ac1fdec27d51c8678ea760601b70e32ff1881d4dc8e1171f2b64b24"
        },
        {
            "name": "0.17.0",
            "sha256": "9e284edd6be6b71883a63c9b7f124738a3c16195513ad940eae7e3438de885d5"
        },
        {
            "name": "0.16.0",
            "sha256": "8f52bf24c64b608bf0b2563e0e47d6fcf516abc8cfafe10cfd98ad66d94f92d6"
        },
        {
            "name": "0.15.1",
            "sha256": "61e49189c84b3c5d99a969d314853f4d1d263316cc694bec17548ebaa9c47b6e"
        },
        {
            "name": "0.15.0",
            "sha256": "f8f84dcef519233be4ede1c64fd1f2d48b1e8bbb632d1013ebca75f8b678ee72"
        },
        {
            "name": "0.14.1",
            "sha256": "0630eea4f5664c463f23fbf5dcfc54a2bc6168902719fa8e19daf033022786c8"
        },
        {
            "name": "0.14.0",
            "sha256": "6fcc57aacb4e89451fd449e9412687c51817c3f48662c3d8f38ba3f8a0a193ff"
        },
        {
            "name": "0.13.2",
            "sha256": "315d6b19643ec4afd4c41c671f9f2d65ea9d787da093487a81ead7b0bac94524"
        },
        {
            "name": "0.11",
            "sha256": "7b8fd56df36d9731a83729395ccb85a3b401f62a96255deb1a77220c00ed4085"
        },
        {
            "name": "0.10.3",
            "sha256": "29b2965a9efbc90a5fe66a389ae35ac5b5b0c1feabfc7cab7fd5d19f429a071d"
        },
        {
            "name": "0.10.2",
            "sha256": "3123553bdad83b143428033537c9e1939caf4a4d8813dade6a2246948c94494b"
        },
        {
            "name": "0.10.0",
            "sha256": "49b3a0ba956eaa2f077e1ebd230b3c8d7b98afc67520207ada20a4d8b8efd071"
        }
    ],
    "latest_version": "1.1.0",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [],
    "homepage": "https://joblib.readthedocs.io/",
    "maintainers": [
        "adamjstewart"
    ],
    "patches": [],
    "resources": [],
    "description": "Lightweight pipelining with Python functions.\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        }
    ],
    "dependent_to": [
        {
            "name": "py-contextily",
            "description": "Context geo-tiles in Python."
        },
        {
            "name": "py-tpot",
            "description": "A Python Automated Machine Learning tool that optimizes machine\nlearning pipelines using genetic programming."
        },
        {
            "name": "py-librosa",
            "description": "A python package for music and audio analysis."
        },
        {
            "name": "py-pomegranate",
            "description": "Fast, flexible and easy to use probabilistic modelling in Python."
        },
        {
            "name": "py-picrust2",
            "description": "PICRUSt2 is a software for predicting functional abundances based only\non marker gene sequences."
        },
        {
            "name": "py-deepsig",
            "description": "deep-significance: Easy and Better Significance Testing for Deep Neural\nNetworks"
        },
        {
            "name": "py-kmodes",
            "description": "Python implementations of the k-modes and k-prototypes clustering\nalgorithms for clustering categorical data."
        },
        {
            "name": "py-pyts",
            "description": "pyts is a Python package for time series classification. It aims to make\ntime series classification easily accessible by providing preprocessing\nand utility tools, and implementations of state-of-the-art algorithms.\nMost of these algorithms transform time series, thus pyts provides\nseveral tools to perform these transformations."
        },
        {
            "name": "py-nltk",
            "description": "The Natural Language Toolkit (NLTK) is a Python package for natural\nlanguage processing."
        },
        {
            "name": "py-dh-scikit-optimize",
            "description": "A Modified version of scikit-optimize a Sequential model-based\noptimization toolbox for DeepHyper. Scikit-Optimize, or skopt, is a\nsimple and efficient library to minimize (very) expensive and noisy\nblack-box functions. It implements several methods for sequential model-\nbased optimization. skopt aims to be accessible and easy to use in many\ncontexts. The library is built on top of NumPy, SciPy and Scikit-Learn."
        },
        {
            "name": "py-cuml",
            "description": "cuML is a suite of libraries that implement machine learning algorithms\nand mathematical primitives functions that share compatible APIs with\nother RAPIDS projects."
        },
        {
            "name": "py-mne",
            "description": "MNE python project for MEG and EEG data analysis."
        },
        {
            "name": "gptune",
            "description": "GPTune is an autotuning framework that relies on multitask and transfer\nlearnings to help solve the underlying black-box optimization problem\nusing Bayesian optimization methodologies."
        },
        {
            "name": "py-histogrammar",
            "description": "Composable histogram primitives for distributed data reduction."
        },
        {
            "name": "py-scikit-learn",
            "description": "A set of python modules for machine learning and data mining."
        },
        {
            "name": "py-rsatoolbox",
            "description": "Representational Similarity Analysis (RSA) in Python."
        },
        {
            "name": "rnaquast",
            "description": "Quality assessment of de novo transcriptome assemblies from RNA-Seq data\nrnaQUAST is a tool for evaluating RNA-Seq assemblies using reference\ngenome and gene database. In addition, rnaQUAST is also capable of\nestimating gene database coverage by raw reads and de novo quality\nassessment using third-party software."
        },
        {
            "name": "py-glmnet",
            "description": "This is a Python wrapper for the fortran library used in the R package\nglmnet."
        },
        {
            "name": "py-sacremoses",
            "description": "LGPL MosesTokenizer in Python."
        },
        {
            "name": "py-nilearn",
            "description": "Statistical learning for neuroimaging in Python."
        },
        {
            "name": "py-ytopt",
            "description": "Ytopt package implements search using Random Forest (SuRF), an\nautotuning search method developed within Y-Tune ECP project."
        },
        {
            "name": "py-hdbscan",
            "description": "HDBSCAN - Hierarchical Density-Based Spatial Clustering of Applications\nwith Noise. Performs DBSCAN over varying epsilon values and integrates\nthe result to find a clustering that gives the best stability over\nepsilon. This allows HDBSCAN to find clusters of varying densities\n(unlike DBSCAN), and be more robust to parameter selection. In practice\nthis means that HDBSCAN returns a good clustering straight away with\nlittle or no parameter tuning -- and the primary parameter, minimum\ncluster size, is intuitive and easy to select. HDBSCAN is ideal for\nexploratory data analysis; it's a fast and robust algorithm that you can\ntrust to return meaningful clusters (if there are any)."
        },
        {
            "name": "py-convokit",
            "description": "This toolkit contains tools to extract conversational features and\nanalyze social phenomena in conversations, using a single unified\ninterface inspired by (and compatible with) scikit-learn."
        },
        {
            "name": "py-smac",
            "description": "SMAC is a tool for algorithm configuration to optimize the parameters of\narbitrary algorithms, including hyperparameter optimization of Machine\nLearning algorithms."
        },
        {
            "name": "py-mdanalysis",
            "description": "MDAnalysis is a Python toolkit to analyze molecular dynamics\ntrajectories generated by a wide range of popular simulation packages\nincluding DL_Poly, CHARMM, Amber, NAMD, LAMMPS, and Gromacs. (See the\nlists of supported trajectory formats and topology formats.)"
        }
    ]
}
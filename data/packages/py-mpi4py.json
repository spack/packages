{
    "name": "py-mpi4py",
    "aliases": [],
    "versions": [
        {
            "name": "develop",
            "branch": "master"
        },
        {
            "name": "3.0.3",
            "sha256": "012d716c8b9ed1e513fcc4b18e5af16a8791f51e6d1716baccf988ad355c5a1f"
        },
        {
            "name": "3.0.1",
            "sha256": "6549a5b81931303baf6600fa2e3bc04d8bd1d5c82f3c21379d0d64a9abcca851"
        },
        {
            "name": "3.0.0",
            "sha256": "b457b02d85bdd9a4775a097fac5234a20397b43e073f14d9e29b6cd78c68efd7"
        },
        {
            "name": "2.0.0",
            "sha256": "6543a05851a7aa1e6d165e673d422ba24e45c41e4221f0993fe1e5924a00cb81"
        },
        {
            "name": "1.3.1",
            "sha256": "e7bd2044aaac5a6ea87a87b2ecc73b310bb6efe5026031e33067ea3c2efc3507"
        }
    ],
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [],
    "homepage": "https://pypi.org/project/mpi4py/",
    "maintainers": [
        "adamjstewart"
    ],
    "patches": [],
    "resources": [],
    "description": "This package provides Python bindings for the Message Passing Interface\n(MPI) standard. It is implemented on top of the MPI-1/MPI-2\nspecification and exposes an API which grounds on the standard MPI-2 C++\nbindings.\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "mpi",
            "description": "MVAPICH2-GDR is an optimized version of the MVAPICH2 MPI library for\nGPU-enabled HPC and Deep Learning Applications. MVAPICH2-GDR is not\ninstallable from source and is only available through a binary mirror.\nIf you do not find the binary you're looking for, send us an email at\nmvapich@cse.ohio-state.edu. The binary mirror url is:\nhttp://mvapich.cse.ohio-state.edu/download/mvapich/spack-\nmirror/mvapich2-gdr/"
        },
        {
            "name": "py-cython",
            "description": "The Cython compiler for writing C extensions for the Python language."
        }
    ],
    "dependent_to": [
        {
            "name": "heffte",
            "description": "Highly Efficient FFT for Exascale"
        },
        {
            "name": "mlperf-deepcam",
            "description": "PyTorch implementation for the climate segmentation benchmark, based on\nthe Exascale Deep Learning for Climate Analytics"
        },
        {
            "name": "paraview",
            "description": "ParaView is an open-source, multi-platform data analysis and\nvisualization application."
        },
        {
            "name": "trilinos",
            "description": "The Trilinos Project is an effort to develop algorithms and enabling\ntechnologies within an object-oriented software framework for the\nsolution of large-scale, complex multi-physics engineering and\nscientific problems. A unique design feature of Trilinos is its focus on\npackages."
        },
        {
            "name": "py-chainer",
            "description": "Chainer is a Python-based deep learning framework aiming at\nflexibility. It provides automatic differentiation APIs based on the\ndefine-by-run approach (a.k.a. dynamic computational graphs) as well as\nobject-oriented high-level APIs to build and train neural networks. It\nalso supports CUDA/cuDNN using CuPy for high performance training and\ninference."
        },
        {
            "name": "vtk",
            "description": "The Visualization Toolkit (VTK) is an open-source, freely available\nsoftware system for 3D computer graphics, image processing and\nvisualization."
        },
        {
            "name": "py-adios",
            "description": "NumPy bindings of ADIOS1"
        },
        {
            "name": "ascent",
            "description": "Ascent is an open source many-core capable lightweight in situ\nvisualization and analysis infrastructure for multi-physics HPC\nsimulations."
        },
        {
            "name": "arbor",
            "description": "Arbor is a high-performance library for computational neuroscience\nsimulations."
        },
        {
            "name": "cradl",
            "description": "The CRADL proxy application captured performance metrics during\ninference on data from multiphysics codes, specifically ALE\nhydrodynamics codes."
        },
        {
            "name": "sensei",
            "description": "SENSEI is a platform for scalable in-situ analysis and visualization.\nIts design motto is 'Write once, run everywhere', this means that once\nthe application is instrumented with SENSEI it can use existing and\nfuture analysis backends. Existing backends include: Paraview/Catalyst,\nVisit/Libsim, ADIOS, Python scripts, and so on."
        },
        {
            "name": "timemory",
            "description": "Modular profiling toolkit and suite of libraries and tools for\nC/C++/Fortran/CUDA/Python"
        },
        {
            "name": "adios2",
            "description": "The Adaptable Input Output System version 2, developed in the Exascale\nComputing Program"
        },
        {
            "name": "py-cogent",
            "description": "A toolkit for statistical analysis of biological sequences."
        },
        {
            "name": "candle-benchmarks",
            "description": "ECP-CANDLE Benchmarks"
        },
        {
            "name": "py-h5py",
            "description": "The h5py package provides both a high- and low-level interface to the\nHDF5 library from Python."
        },
        {
            "name": "openpmd-api",
            "description": "C++ & Python API for Scientific I/O"
        },
        {
            "name": "conduit",
            "description": "Conduit is an open source project from Lawrence Livermore National\nLaboratory that provides an intuitive model for describing hierarchical\nscientific data in C++, C, Fortran, and Python. It is used for data\ncoupling between packages in-core, serialization, and I/O tasks."
        },
        {
            "name": "py-pyprecice",
            "description": "This package provides python language bindings for the C++ library\npreCICE."
        },
        {
            "name": "sirius",
            "description": "Domain specific library for electronic structure calculations"
        },
        {
            "name": "py-petsc4py",
            "description": "This package provides Python bindings for the PETSc package."
        },
        {
            "name": "py-openmc",
            "description": "The OpenMC project aims to provide a fully-featured Monte Carlo particle\ntransport code based on modern methods. It is a constructive solid\ngeometry, continuous-energy transport code that uses ACE format cross\nsections. The project started under the Computational Reactor Physics\nGroup at MIT."
        },
        {
            "name": "py-libensemble",
            "description": "Library for managing ensemble-like collections of computations."
        },
        {
            "name": "py-warpx",
            "description": "WarpX is an advanced electromagnetic Particle-In-Cell code. It supports\nmany features including Perfectly-Matched Layers (PML) and mesh\nrefinement. In addition, WarpX is a highly-parallel and highly-optimized\ncode and features hybrid OpenMP/MPI parallelization, advanced\nvectorization techniques and load balancing capabilities. These are the\nPython bindings of WarpX with PICMI input support. See the C++ 'warpx'\npackage for the WarpX application and library."
        },
        {
            "name": "py-pymumps",
            "description": "Python bindings for MUMPS, a parallel sparse direct solver"
        },
        {
            "name": "py-fenics-dolfinx",
            "description": "Python interface library to Next generation FEniCS problem solving\nenvironment"
        },
        {
            "name": "py-espressopp",
            "description": "ESPResSo++ is an extensible, flexible, fast and parallel simulation\nsoftware for soft matter research. It is a highly versatile software\npackage for the scientific simulation and analysis of coarse-grained\natomistic or bead-spring models as they are used in soft matter research"
        },
        {
            "name": "catalyst",
            "description": "Catalyst is an in situ use case library, with an adaptable application\nprogramming interface (API), that orchestrates the alliance between\nsimulation and analysis and/or visualization tasks."
        },
        {
            "name": "cosmoflow-benchmark",
            "description": "This is a an implementation of the CosmoFlow 3D convolutional neural\nnetwork for benchmarking. It is written in TensorFlow with the Keras API\nand uses Horovod for distributed training."
        },
        {
            "name": "py-uvw",
            "description": "UVW is a small utility library to write VTK files from data contained\nin Numpy arrays."
        },
        {
            "name": "py-netket",
            "description": "NetKet is an open-source project, delivering cutting-edge methods for\nthe study of many-body quantum systems with artificial neural networks\nand machine learning techniques."
        }
    ]
}
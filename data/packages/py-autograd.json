{
    "name": "py-autograd",
    "aliases": [],
    "versions": [
        {
            "name": "1.3",
            "sha256": "a15d147577e10de037de3740ca93bfa3b5a7cdfbc34cfb9105429c3580a33ec4"
        }
    ],
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [],
    "homepage": "https://github.com/HIPS/autograd",
    "maintainers": [
        "adamjstewart"
    ],
    "patches": [],
    "resources": [],
    "description": "Autograd can automatically differentiate native Python and Numpy code.\nIt can handle a large subset of Python's features, including loops, ifs,\nrecursion and closures, and it can even take derivatives of derivatives\nof derivatives. It supports reverse-mode differentiation (a.k.a.\nbackpropagation), which means it can efficiently take gradients of\nscalar-valued functions with respect to array-valued arguments, as well\nas forward-mode differentiation, and the two can be composed\narbitrarily. The main intended application of Autograd is gradient-based\noptimization. For more information, check out the tutorial and the\nexamples directory.\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-future",
            "description": "Clean single-source support for Python 3 and 2"
        },
        {
            "name": "py-numpy",
            "description": "NumPy is the fundamental package for scientific computing with Python.\nIt contains among other things: a powerful N-dimensional array object,\nsophisticated (broadcasting) functions, tools for integrating C/C++ and\nFortran code, and useful linear algebra, Fourier transform, and random\nnumber capabilities"
        }
    ],
    "dependent_to": [
        {
            "name": "py-lifelines",
            "description": "Survival analysis was originally developed and applied heavily by the\nactuarial and medical community. Its purpose was to answer *why do\nevents occur now versus later* under uncertainty (where *events* might\nrefer to deaths, disease remission, etc.). *lifelines* is a pure Python\nimplementation of the best parts of survival analysis."
        },
        {
            "name": "py-autograd-gamma",
            "description": "autograd compatible approximations to the derivatives of the Gamma-\nfamily of functions."
        }
    ]
}
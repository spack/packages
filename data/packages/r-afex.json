{
    "name": "r-afex",
    "aliases": [],
    "versions": [
        {
            "name": "1.0-1",
            "sha256": "6febc34b87a1109f5cbcd213c08d2b7b3e9cf99065fa41c19bc88ac99fb104cc"
        },
        {
            "name": "0.28-1",
            "sha256": "cfb0b79bfa01b590afc3354a5b2ad3640d2f4974b036d6c256fa8e684bc69c2e"
        }
    ],
    "latest_version": "1.0-1",
    "build_system": "RPackage",
    "conflicts": [],
    "variants": [],
    "homepage": "https://cloud.r-project.org/package=afex",
    "maintainers": [
        "glennpj"
    ],
    "patches": [],
    "resources": [],
    "description": "Analysis of Factorial Experiments. Convenience functions for analyzing\nfactorial experiments using ANOVA or mixed models. aov_ez(), aov_car(),\nand aov_4() allow specification of between, within (i.e., repeated-\nmeasures), or mixed (i.e., split-plot) ANOVAs for data in long format\n(i.e., one observation per row), automatically aggregating multiple\nobservations per individual and cell of the design. mixed() fits mixed\nmodels using lme4::lmer() and computes p-values for all fixed effects\nusing either Kenward-Roger or Satterthwaite approximation for degrees of\nfreedom (LMM only), parametric bootstrap (LMMs and GLMMs), or likelihood\nratio tests (LMMs and GLMMs). afex_plot() provides a high-level\ninterface for interaction or one-way plots using ggplot2, combining raw\ndata and model estimates. afex uses type 3 sums of squares as default\n(imitating commercial statistical software).\n",
    "dependencies": [
        {
            "name": "r",
            "description": "R is 'GNU S', a freely available language and environment for\nstatistical computing and graphics which provides a wide variety of\nstatistical and graphical techniques: linear and nonlinear modelling,\nstatistical tests, time series analysis, classification, clustering,\netc. Please consult the R project homepage for further information."
        },
        {
            "name": "r-lme4",
            "description": "Linear Mixed-Effects Models using 'Eigen' and S4. Fit linear and\ngeneralized linear mixed-effects models. The models and their components\nare represented using S4 classes and methods. The core computational\nalgorithms are implemented using the 'Eigen' C++ library for numerical\nlinear algebra and 'RcppEigen' \"glue\"."
        },
        {
            "name": "r-pbkrtest",
            "description": "Parametric Bootstrap, Kenward-Roger and Satterthwaite Based Methods for\nTest in Mixed Models. Test in mixed effects models. Attention is on\nmixed effects models as implemented in the 'lme4' package. For linear\nmixed models, this package implements (1) a parametric bootstrap test,\n(2) a Kenward-Roger-typ modification of F-tests for linear mixed effects\nmodels and (3) a Satterthwaite-type modification of F-tests for linear\nmixed effects models. The package also implements a parametric bootstrap\ntest for generalized linear mixed models. The facilities of the package\nare documented in the paper by Halehoh and Hojsgaard, (2012,\n<doi:10.18637/jss.v059.i09>). Please see 'citation(\"pbkrtest\")' for\ncitation details."
        },
        {
            "name": "r-lmertest",
            "description": "Tests in Linear Mixed Effects Models. Provides p-values in type I, II or\nIII anova and summary tables for lmer model fits (cf. lme4) via\nSatterthwaite's degrees of freedom method. A Kenward-Roger method is\nalso available via the pbkrtest package. Model selection methods include\nstep, drop1 and anova-like tables for random effects (ranova). Methods\nfor Least-Square means (LS-means) and tests of linear contrasts of fixed\neffects are also available."
        },
        {
            "name": "r-car",
            "description": "Companion to Applied Regression. Functions and Datasets to Accompany J.\nFox and S. Weisberg, An R Companion to Applied Regression, Second\nEdition, Sage, 2011."
        },
        {
            "name": "r-reshape2",
            "description": "Flexibly Reshape Data: A Reboot of the Reshape Package. Flexibly\nrestructure and aggregate data using just two functions: melt and dcast\n(or acast)."
        }
    ],
    "dependent_to": []
}